Archive member included to satisfy reference by file (symbol)

app/libapp.a(main.c.obj)      (--whole-archive)
zephyr/libzephyr.a(heap.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(cbprintf_packaged.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(printk.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(sem.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(thread_entry.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(cbprintf_complete.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(assert.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(dec.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(hex.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rb.c.obj)  (--whole-archive)
zephyr/libzephyr.a(timeutil.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bitarray.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(configs.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(soc.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(loader.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp32-mp.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(log_core.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(log_mgmt.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(log_cache.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(log_msg.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(log_output.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(log_backend_uart.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(tracing_none.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(windowspill_asm.S.obj)
                              (--whole-archive)
zephyr/libzephyr.a(uart_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(uart_hal_iram.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(clk.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(adc_periph.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(i2s_periph.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(gpio_periph.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_io_periph.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_clk.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_clk.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_init.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_time.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_clk_init.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(mac_addr.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(ets_timer_legacy.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_timer.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(periph_ctrl.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(log_noos.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(log.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_efuse_fields.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_efuse_table.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_efuse_api.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bootloader_efuse_esp32.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(reset_reason.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_system_api.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(heap_caps.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(dport_access.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(stubs.c.obj)
                              (--whole-archive)
zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
                              (--whole-archive)
zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
                              (--whole-archive)
zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                              (--whole-archive)
zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
                              (--whole-archive)
zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                              (--whole-archive)
zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
                              (--whole-archive)
zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                              (--whole-archive)
zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
                              (--whole-archive)
zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
                              (--whole-archive)
zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                              (--whole-archive)
zephyr/kernel/libkernel.a(busy_wait.c.obj)
                              zephyr/libzephyr.a(rtc_time.c.obj) (z_impl_k_busy_wait)
zephyr/kernel/libkernel.a(device.c.obj)
                              app/libapp.a(main.c.obj) (z_device_is_ready)
zephyr/kernel/libkernel.a(errno.c.obj)
                              zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj) (z_impl_z_errno)
zephyr/kernel/libkernel.a(fatal.c.obj)
                              zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj) (z_fatal_error)
zephyr/kernel/libkernel.a(init.c.obj)
                              zephyr/libzephyr.a(soc.c.obj) (z_bss_zero)
zephyr/kernel/libkernel.a(thread.c.obj)
                              zephyr/libzephyr.a(mpsc_pbuf.c.obj) (k_is_in_isr)
zephyr/kernel/libkernel.a(sched.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (z_reset_time_slice)
zephyr/kernel/libkernel.a(idle.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (idle)
zephyr/kernel/libkernel.a(mutex.c.obj)
                              zephyr/libzephyr.a(esp_efuse_api.c.obj) (z_impl_k_mutex_unlock)
zephyr/kernel/libkernel.a(sem.c.obj)
                              zephyr/libzephyr.a(sem.c.obj) (z_impl_k_sem_init)
zephyr/kernel/libkernel.a(work.c.obj)
                              app/libapp.a(main.c.obj) (k_work_submit)
zephyr/kernel/libkernel.a(timeout.c.obj)
                              zephyr/kernel/libkernel.a(thread.c.obj) (z_add_timeout)
zephyr/kernel/libkernel.a(timer.c.obj)
                              zephyr/libzephyr.a(log_core.c.obj) (k_timer_init)
zephyr/kernel/libkernel.a(mempool.c.obj)
                              zephyr/libzephyr.a(esp_timer.c.obj) (k_free)
zephyr/kernel/libkernel.a(banner.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (boot_banner)
zephyr/kernel/libkernel.a(kheap.c.obj)
                              zephyr/kernel/libkernel.a(mempool.c.obj) (k_heap_aligned_alloc)
zephyr/kernel/libkernel.a(system_work_q.c.obj)
                              zephyr/kernel/libkernel.a(work.c.obj) (k_sys_work_q)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
                              zephyr/libzephyr.a(esp_efuse_utility.c.obj) (__ashldi3)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
                              zephyr/libzephyr.a(esp_efuse_utility.c.obj) (__lshrdi3)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__subdf3)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__muldf3)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__divdf3)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__fixdfdi)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__floatunsidf)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__floatundidf)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__truncdfsf2)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__extendsfdf2)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
                              zephyr/libzephyr.a(esp_efuse_utility.c.obj) (__popcountsi2)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__divdi3)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
                              zephyr/libzephyr.a(cbprintf_complete.c.obj) (__udivdi3)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
                              zephyr/libzephyr.a(cbprintf_complete.c.obj) (__umoddi3)
zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
                              zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj) (_sw_isr_table)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
                              zephyr/libzephyr.a(heap.c.obj) (memcpy)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
                              zephyr/libzephyr.a(heap.c.obj) (memset)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
                              zephyr/libzephyr.a(log_mgmt.c.obj) (strcmp)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
                              zephyr/libzephyr.a(cbprintf_packaged.c.obj) (strlen)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_ctype_ctype_.c.o)
                              zephyr/libzephyr.a(cbprintf_complete.c.obj) (_ctype_)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
                              zephyr/libzephyr.a(mac_addr.c.obj) (memcmp)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
                              zephyr/libzephyr.a(cbprintf_complete.c.obj) (strnlen)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
                              zephyr/libzephyr.a(esp_timer.c.obj) (fprintf)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
                              zephyr/libzephyr.a(esp_timer.c.obj) (fputs)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
                              zephyr/libzephyr.a(log_output.c.obj) (snprintf)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
                              (__l_vfprintf)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
                              (__l_vfscanf)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
                              zephyr/libzephyr.a(log.c.obj) (vprintf)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
                              /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o) (strchr)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
                              /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o) (fgetc)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
                              /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o) (__file_str_put)
/home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
                              /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o) (ungetc)

Discarded input sections

 .text          0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .data          0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .bss           0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .debug_line    0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .debug_str     0x0000000000000000      0x160 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .comment       0x0000000000000000       0x21 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .text          0x0000000000000000        0x0 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .data          0x0000000000000000        0x0 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .bss           0x0000000000000000        0x0 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .text          0x0000000000000000        0x0 app/libapp.a(main.c.obj)
 .data          0x0000000000000000        0x0 app/libapp.a(main.c.obj)
 .bss           0x0000000000000000        0x0 app/libapp.a(main.c.obj)
 .literal.sys_heap_usable_size
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap.c.obj)
 .literal.sys_heap_aligned_realloc
                0x0000000000000000       0x44 zephyr/libzephyr.a(heap.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(heap.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(heap.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(heap.c.obj)
 .text.sys_heap_usable_size
                0x0000000000000000       0x24 zephyr/libzephyr.a(heap.c.obj)
 .text.sys_heap_aligned_realloc
                0x0000000000000000      0x154 zephyr/libzephyr.a(heap.c.obj)
 .literal.cbprintf_package
                0x0000000000000000        0x4 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbprintf_package
                0x0000000000000000       0x2d zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .literal.__printk_get_hook
                0x0000000000000000        0x4 zephyr/libzephyr.a(printk.c.obj)
 .literal.vprintk
                0x0000000000000000        0x4 zephyr/libzephyr.a(printk.c.obj)
 .literal.z_impl_k_str_out
                0x0000000000000000        0x4 zephyr/libzephyr.a(printk.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(printk.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(printk.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(printk.c.obj)
 .text.arch_printk_char_out
                0x0000000000000000        0x7 zephyr/libzephyr.a(printk.c.obj)
 .text.__printk_get_hook
                0x0000000000000000        0xa zephyr/libzephyr.a(printk.c.obj)
 .text.vprintk  0x0000000000000000       0x13 zephyr/libzephyr.a(printk.c.obj)
 .text.z_impl_k_str_out
                0x0000000000000000       0x1d zephyr/libzephyr.a(printk.c.obj)
 .rodata.str1.1
                0x0000000000000000        0x7 zephyr/libzephyr.a(printk.c.obj)
 ._llext_const_symbol.static.printk_sym_
                0x0000000000000000        0x8 zephyr/libzephyr.a(printk.c.obj)
 .literal.sys_sem_init
                0x0000000000000000        0x4 zephyr/libzephyr.a(sem.c.obj)
 .literal.sys_sem_give
                0x0000000000000000        0x4 zephyr/libzephyr.a(sem.c.obj)
 .literal.sys_sem_take
                0x0000000000000000        0x4 zephyr/libzephyr.a(sem.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(sem.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(sem.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_init
                0x0000000000000000       0x14 zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_give
                0x0000000000000000       0x10 zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_take
                0x0000000000000000       0x30 zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_count_get
                0x0000000000000000        0x7 zephyr/libzephyr.a(sem.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/libzephyr.a(sem.c.obj)
 .debug_info    0x0000000000000000      0x4cc zephyr/libzephyr.a(sem.c.obj)
 .debug_abbrev  0x0000000000000000      0x209 zephyr/libzephyr.a(sem.c.obj)
 .debug_loc     0x0000000000000000      0x159 zephyr/libzephyr.a(sem.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(sem.c.obj)
 .debug_ranges  0x0000000000000000       0x58 zephyr/libzephyr.a(sem.c.obj)
 .debug_line    0x0000000000000000      0x478 zephyr/libzephyr.a(sem.c.obj)
 .debug_str     0x0000000000000000      0x35e zephyr/libzephyr.a(sem.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(sem.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .literal.extract_decimal
                0x0000000000000000        0x4 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .literal.encode_uint
                0x0000000000000000        0xc zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .literal.z_cbvprintf_impl
                0x0000000000000000       0x44 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .text.extract_decimal
                0x0000000000000000       0x2b zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .text.encode_uint
                0x0000000000000000       0xb4 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .text.outs     0x0000000000000000       0x2d zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .rodata.z_cbvprintf_impl.str1.1
                0x0000000000000000        0x6 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .text.z_cbvprintf_impl
                0x0000000000000000      0x981 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .rodata.z_cbvprintf_impl
                0x0000000000000000       0x58 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_info    0x0000000000000000     0x1011 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_abbrev  0x0000000000000000      0x42a zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_loc     0x0000000000000000     0x1428 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_ranges  0x0000000000000000      0x110 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_line    0x0000000000000000     0x1bcc zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_str     0x0000000000000000      0x634 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .literal.assert_post_action
                0x0000000000000000        0x4 zephyr/libzephyr.a(assert.c.obj)
 .literal.assert_print
                0x0000000000000000        0x4 zephyr/libzephyr.a(assert.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(assert.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(assert.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(assert.c.obj)
 .text.assert_post_action
                0x0000000000000000        0xc zephyr/libzephyr.a(assert.c.obj)
 .text.assert_print
                0x0000000000000000       0x26 zephyr/libzephyr.a(assert.c.obj)
 .rodata.str1.1
                0x0000000000000000       0x20 zephyr/libzephyr.a(assert.c.obj)
 ._llext_const_symbol.static.assert_print_sym_
                0x0000000000000000        0x8 zephyr/libzephyr.a(assert.c.obj)
 ._llext_const_symbol.static.assert_post_action_sym_
                0x0000000000000000        0x8 zephyr/libzephyr.a(assert.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/libzephyr.a(assert.c.obj)
 .debug_info    0x0000000000000000      0x2a0 zephyr/libzephyr.a(assert.c.obj)
 .debug_abbrev  0x0000000000000000      0x17d zephyr/libzephyr.a(assert.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/libzephyr.a(assert.c.obj)
 .debug_ranges  0x0000000000000000       0x18 zephyr/libzephyr.a(assert.c.obj)
 .debug_line    0x0000000000000000      0x29f zephyr/libzephyr.a(assert.c.obj)
 .debug_str     0x0000000000000000      0x4d9 zephyr/libzephyr.a(assert.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(assert.c.obj)
 .literal.mpsc_pbuf_put_word
                0x0000000000000000       0x18 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 .literal.mpsc_pbuf_put_word_ext
                0x0000000000000000       0x1c zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 .literal.mpsc_pbuf_put_data
                0x0000000000000000       0x20 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 .literal.mpsc_pbuf_get_utilization
                0x0000000000000000        0x4 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 .text.mpsc_pbuf_put_word
                0x0000000000000000       0xb1 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 .text.mpsc_pbuf_put_word_ext
                0x0000000000000000       0xdc zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 .text.mpsc_pbuf_put_data
                0x0000000000000000       0xdd zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 .text.mpsc_pbuf_get_utilization
                0x0000000000000000       0x1b zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 .text.mpsc_pbuf_get_max_utilization
                0x0000000000000000       0x18 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 .literal.u8_to_dec
                0x0000000000000000        0x4 zephyr/libzephyr.a(dec.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(dec.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(dec.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(dec.c.obj)
 .text.u8_to_dec
                0x0000000000000000       0x6e zephyr/libzephyr.a(dec.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/libzephyr.a(dec.c.obj)
 .debug_info    0x0000000000000000      0x12b zephyr/libzephyr.a(dec.c.obj)
 .debug_abbrev  0x0000000000000000       0x9c zephyr/libzephyr.a(dec.c.obj)
 .debug_loc     0x0000000000000000      0x13d zephyr/libzephyr.a(dec.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/libzephyr.a(dec.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/libzephyr.a(dec.c.obj)
 .debug_line    0x0000000000000000      0x2c5 zephyr/libzephyr.a(dec.c.obj)
 .debug_str     0x0000000000000000      0x235 zephyr/libzephyr.a(dec.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(dec.c.obj)
 .literal.bin2hex
                0x0000000000000000        0x8 zephyr/libzephyr.a(hex.c.obj)
 .literal.hex2bin
                0x0000000000000000        0xc zephyr/libzephyr.a(hex.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(hex.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(hex.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(hex.c.obj)
 .text.char2hex
                0x0000000000000000       0x3e zephyr/libzephyr.a(hex.c.obj)
 .text.hex2char
                0x0000000000000000       0x28 zephyr/libzephyr.a(hex.c.obj)
 .text.bin2hex  0x0000000000000000       0x4e zephyr/libzephyr.a(hex.c.obj)
 .text.hex2bin  0x0000000000000000       0x70 zephyr/libzephyr.a(hex.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/libzephyr.a(hex.c.obj)
 .debug_info    0x0000000000000000      0x2a7 zephyr/libzephyr.a(hex.c.obj)
 .debug_abbrev  0x0000000000000000      0x119 zephyr/libzephyr.a(hex.c.obj)
 .debug_loc     0x0000000000000000      0x27b zephyr/libzephyr.a(hex.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(hex.c.obj)
 .debug_ranges  0x0000000000000000       0x28 zephyr/libzephyr.a(hex.c.obj)
 .debug_line    0x0000000000000000      0x570 zephyr/libzephyr.a(hex.c.obj)
 .debug_str     0x0000000000000000      0x23c zephyr/libzephyr.a(hex.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(hex.c.obj)
 .literal.rotate
                0x0000000000000000       0x10 zephyr/libzephyr.a(rb.c.obj)
 .literal.rb_insert
                0x0000000000000000       0x10 zephyr/libzephyr.a(rb.c.obj)
 .literal.rb_remove
                0x0000000000000000       0x28 zephyr/libzephyr.a(rb.c.obj)
 .literal.z_rb_walk
                0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .literal.z_rb_foreach_next
                0x0000000000000000        0x4 zephyr/libzephyr.a(rb.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .text.find_and_stack
                0x0000000000000000       0x36 zephyr/libzephyr.a(rb.c.obj)
 .text.stack_left_limb
                0x0000000000000000       0x47 zephyr/libzephyr.a(rb.c.obj)
 .text.set_child
                0x0000000000000000       0x16 zephyr/libzephyr.a(rb.c.obj)
 .text.rotate   0x0000000000000000       0x80 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_get_minmax
                0x0000000000000000       0x23 zephyr/libzephyr.a(rb.c.obj)
 .text.rb_insert
                0x0000000000000000      0x14b zephyr/libzephyr.a(rb.c.obj)
 .text.rb_remove
                0x0000000000000000      0x343 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_walk
                0x0000000000000000       0x23 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_child
                0x0000000000000000       0x16 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_is_black
                0x0000000000000000        0xa zephyr/libzephyr.a(rb.c.obj)
 .text.rb_contains
                0x0000000000000000       0x31 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_foreach_next
                0x0000000000000000       0x63 zephyr/libzephyr.a(rb.c.obj)
 .debug_frame   0x0000000000000000      0x130 zephyr/libzephyr.a(rb.c.obj)
 .debug_info    0x0000000000000000     0x23ac zephyr/libzephyr.a(rb.c.obj)
 .debug_abbrev  0x0000000000000000      0x4a5 zephyr/libzephyr.a(rb.c.obj)
 .debug_loc     0x0000000000000000     0x235c zephyr/libzephyr.a(rb.c.obj)
 .debug_aranges
                0x0000000000000000       0x78 zephyr/libzephyr.a(rb.c.obj)
 .debug_ranges  0x0000000000000000      0x530 zephyr/libzephyr.a(rb.c.obj)
 .debug_line    0x0000000000000000     0x27b7 zephyr/libzephyr.a(rb.c.obj)
 .debug_str     0x0000000000000000      0x42c zephyr/libzephyr.a(rb.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(rb.c.obj)
 .literal.timeutil_timegm64
                0x0000000000000000       0x14 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_timegm
                0x0000000000000000        0x8 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_state_update
                0x0000000000000000        0x8 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_state_set_skew
                0x0000000000000000        0x8 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_estimate_skew
                0x0000000000000000       0x24 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_ref_from_local
                0x0000000000000000       0x1c zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_local_from_ref
                0x0000000000000000       0x1c zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_skew_to_ppb
                0x0000000000000000       0x20 zephyr/libzephyr.a(timeutil.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_timegm64
                0x0000000000000000      0x122 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_timegm
                0x0000000000000000       0x1c zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_state_update
                0x0000000000000000       0x76 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_state_set_skew
                0x0000000000000000       0x40 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_estimate_skew
                0x0000000000000000       0xc6 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_ref_from_local
                0x0000000000000000       0xc0 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_local_from_ref
                0x0000000000000000       0xbe zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_skew_to_ppb
                0x0000000000000000       0x3e zephyr/libzephyr.a(timeutil.c.obj)
 .debug_frame   0x0000000000000000       0xd0 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_info    0x0000000000000000      0x882 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_abbrev  0x0000000000000000      0x1fd zephyr/libzephyr.a(timeutil.c.obj)
 .debug_loc     0x0000000000000000      0x765 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_aranges
                0x0000000000000000       0x58 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_ranges  0x0000000000000000       0x68 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_line    0x0000000000000000      0xbd8 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_str     0x0000000000000000      0x4d9 zephyr/libzephyr.a(timeutil.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.set_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.set_clear_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.match_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.is_region_set_clear
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_alloc
                0x0000000000000000        0x8 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_free
                0x0000000000000000        0x8 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_is_region_set
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_is_region_cleared
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_test_and_set_region
                0x0000000000000000        0x8 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_set_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_clear_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .text.setup_bundle_data$constprop$0
                0x0000000000000000       0x3f zephyr/libzephyr.a(bitarray.c.obj)
 .text.set_region
                0x0000000000000000       0xa0 zephyr/libzephyr.a(bitarray.c.obj)
 .text.set_clear_region
                0x0000000000000000       0x4e zephyr/libzephyr.a(bitarray.c.obj)
 .text.match_region
                0x0000000000000000       0xba zephyr/libzephyr.a(bitarray.c.obj)
 .text.is_region_set_clear
                0x0000000000000000       0x4e zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_set_bit
                0x0000000000000000       0x32 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_clear_bit
                0x0000000000000000       0x32 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_bit
                0x0000000000000000       0x32 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_and_set_bit
                0x0000000000000000       0x46 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_and_clear_bit
                0x0000000000000000       0x46 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_alloc
                0x0000000000000000       0xa2 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_free
                0x0000000000000000       0x62 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_is_region_set
                0x0000000000000000       0x15 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_is_region_cleared
                0x0000000000000000       0x15 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_and_set_region
                0x0000000000000000       0x6a zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_set_region
                0x0000000000000000       0x15 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_clear_region
                0x0000000000000000       0x15 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_frame   0x0000000000000000      0x1a8 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_info    0x0000000000000000     0x147d zephyr/libzephyr.a(bitarray.c.obj)
 .debug_abbrev  0x0000000000000000      0x3e6 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_loc     0x0000000000000000      0xddb zephyr/libzephyr.a(bitarray.c.obj)
 .debug_aranges
                0x0000000000000000       0xa0 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_ranges  0x0000000000000000       0xc0 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_line    0x0000000000000000     0x1adb zephyr/libzephyr.a(bitarray.c.obj)
 .debug_str     0x0000000000000000      0x541 zephyr/libzephyr.a(bitarray.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(bitarray.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(configs.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(configs.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(configs.c.obj)
 .literal.soc_ll_stall_core
                0x0000000000000000       0x10 zephyr/libzephyr.a(soc.c.obj)
 .iram1.12.literal
                0x0000000000000000       0x48 zephyr/libzephyr.a(soc.c.obj)
 .literal.sys_arch_reboot
                0x0000000000000000        0x4 zephyr/libzephyr.a(soc.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(soc.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(soc.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(soc.c.obj)
 .text.soc_ll_stall_core
                0x0000000000000000       0x82 zephyr/libzephyr.a(soc.c.obj)
 .iram1.12      0x0000000000000000      0x111 zephyr/libzephyr.a(soc.c.obj)
 .text.sys_arch_reboot
                0x0000000000000000        0x9 zephyr/libzephyr.a(soc.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(loader.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(loader.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(loader.c.obj)
 .literal.smp_log
                0x0000000000000000        0xc zephyr/libzephyr.a(esp32-mp.c.obj)
 .literal.esp_appcpu_start
                0x0000000000000000       0x40 zephyr/libzephyr.a(esp32-mp.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp32-mp.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp32-mp.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp32-mp.c.obj)
 .text.smp_log  0x0000000000000000       0x30 zephyr/libzephyr.a(esp32-mp.c.obj)
 .rodata.esp_appcpu_start.str1.1
                0x0000000000000000       0x3d zephyr/libzephyr.a(esp32-mp.c.obj)
 .text.esp_appcpu_start
                0x0000000000000000       0xb5 zephyr/libzephyr.a(esp32-mp.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/libzephyr.a(esp32-mp.c.obj)
 .debug_info    0x0000000000000000      0x461 zephyr/libzephyr.a(esp32-mp.c.obj)
 .debug_abbrev  0x0000000000000000      0x24a zephyr/libzephyr.a(esp32-mp.c.obj)
 .debug_loc     0x0000000000000000       0x7a zephyr/libzephyr.a(esp32-mp.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/libzephyr.a(esp32-mp.c.obj)
 .debug_ranges  0x0000000000000000       0x18 zephyr/libzephyr.a(esp32-mp.c.obj)
 .debug_line    0x0000000000000000      0x46c zephyr/libzephyr.a(esp32-mp.c.obj)
 .debug_str     0x0000000000000000      0x4fa zephyr/libzephyr.a(esp32-mp.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp32-mp.c.obj)
 .literal.z_log_timestamp
                0x0000000000000000        0x4 zephyr/libzephyr.a(log_core.c.obj)
 .literal.log_format_set_all_active_backends
                0x0000000000000000        0xc zephyr/libzephyr.a(log_core.c.obj)
 .literal.log_init
                0x0000000000000000        0x4 zephyr/libzephyr.a(log_core.c.obj)
 .literal.unordered_notify
                0x0000000000000000       0x10 zephyr/libzephyr.a(log_core.c.obj)
 .literal.z_impl_log_buffered_cnt
                0x0000000000000000        0x4 zephyr/libzephyr.a(log_core.c.obj)
 .literal.z_log_dropped_pending
                0x0000000000000000        0x4 zephyr/libzephyr.a(log_core.c.obj)
 .literal.z_log_msg_claim_oldest
                0x0000000000000000       0x1c zephyr/libzephyr.a(log_core.c.obj)
 .literal.z_log_msg_claim
                0x0000000000000000        0x4 zephyr/libzephyr.a(log_core.c.obj)
 .literal.z_log_msg_enqueue
                0x0000000000000000       0x18 zephyr/libzephyr.a(log_core.c.obj)
 .literal.log_mem_get_usage
                0x0000000000000000        0x8 zephyr/libzephyr.a(log_core.c.obj)
 .literal.log_mem_get_max_usage
                0x0000000000000000        0x8 zephyr/libzephyr.a(log_core.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(log_core.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(log_core.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(log_core.c.obj)
 .text.log_format_table_size
                0x0000000000000000        0x7 zephyr/libzephyr.a(log_core.c.obj)
 .text.z_log_timestamp
                0x0000000000000000       0x10 zephyr/libzephyr.a(log_core.c.obj)
 .text.log_format_set_all_active_backends
                0x0000000000000000       0x3d zephyr/libzephyr.a(log_core.c.obj)
 .text.log_init
                0x0000000000000000        0xf zephyr/libzephyr.a(log_core.c.obj)
 .text.log_thread_set
                0x0000000000000000        0x5 zephyr/libzephyr.a(log_core.c.obj)
 .rodata.unordered_notify.str1.1
                0x0000000000000000       0x28 zephyr/libzephyr.a(log_core.c.obj)
 .text.unordered_notify
                0x0000000000000000       0x27 zephyr/libzephyr.a(log_core.c.obj)
 .text.z_impl_log_buffered_cnt
                0x0000000000000000        0xa zephyr/libzephyr.a(log_core.c.obj)
 .text.z_log_dropped_pending
                0x0000000000000000       0x13 zephyr/libzephyr.a(log_core.c.obj)
 .text.z_log_msg_claim_oldest
                0x0000000000000000       0x64 zephyr/libzephyr.a(log_core.c.obj)
 .text.z_log_msg_claim
                0x0000000000000000        0xd zephyr/libzephyr.a(log_core.c.obj)
 .text.z_log_msg_enqueue
                0x0000000000000000       0x70 zephyr/libzephyr.a(log_core.c.obj)
 .text.log_set_tag
                0x0000000000000000        0x8 zephyr/libzephyr.a(log_core.c.obj)
 .text.log_mem_get_usage
                0x0000000000000000       0x14 zephyr/libzephyr.a(log_core.c.obj)
 .text.log_mem_get_max_usage
                0x0000000000000000       0x12 zephyr/libzephyr.a(log_core.c.obj)
 .bss.unordered_cnt
                0x0000000000000000        0x4 zephyr/libzephyr.a(log_core.c.obj)
 .bss.prev_timestamp
                0x0000000000000000        0x4 zephyr/libzephyr.a(log_core.c.obj)
 .literal.source_id_cmp
                0x0000000000000000        0x4 zephyr/libzephyr.a(log_mgmt.c.obj)
 .literal.z_log_link_get_dynamic_filter
                0x0000000000000000        0x8 zephyr/libzephyr.a(log_mgmt.c.obj)
 .literal.z_log_ext_domain_count
                0x0000000000000000        0x8 zephyr/libzephyr.a(log_mgmt.c.obj)
 .literal.log_src_cnt_get
                0x0000000000000000        0x8 zephyr/libzephyr.a(log_mgmt.c.obj)
 .literal.log_domain_name_get
                0x0000000000000000        0x4 zephyr/libzephyr.a(log_mgmt.c.obj)
 .literal.log_compiled_level_get
                0x0000000000000000        0x8 zephyr/libzephyr.a(log_mgmt.c.obj)
 .literal.z_log_link_set_runtime_level
                0x0000000000000000        0x8 zephyr/libzephyr.a(log_mgmt.c.obj)
 .literal.z_log_runtime_filters_init
                0x0000000000000000        0xc zephyr/libzephyr.a(log_mgmt.c.obj)
 .literal.log_source_id_get
                0x0000000000000000        0xc zephyr/libzephyr.a(log_mgmt.c.obj)
 .literal.filter_set
                0x0000000000000000        0x8 zephyr/libzephyr.a(log_mgmt.c.obj)
 .literal.z_impl_log_filter_set
                0x0000000000000000        0x8 zephyr/libzephyr.a(log_mgmt.c.obj)
 .literal.z_impl_log_frontend_filter_set
                0x0000000000000000        0x8 zephyr/libzephyr.a(log_mgmt.c.obj)
 .literal.log_backend_get_by_name
                0x0000000000000000        0xc zephyr/libzephyr.a(log_mgmt.c.obj)
 .literal.log_filter_get
                0x0000000000000000        0x8 zephyr/libzephyr.a(log_mgmt.c.obj)
 .literal.z_log_links_initiate
                0x0000000000000000       0x24 zephyr/libzephyr.a(log_mgmt.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(log_mgmt.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(log_mgmt.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(log_mgmt.c.obj)
 .text.domain_id_cmp
                0x0000000000000000        0xf zephyr/libzephyr.a(log_mgmt.c.obj)
 .text.source_id_cmp
                0x0000000000000000       0x15 zephyr/libzephyr.a(log_mgmt.c.obj)
 .text.z_log_link_get_dynamic_filter
                0x0000000000000000       0x45 zephyr/libzephyr.a(log_mgmt.c.obj)
 .text.z_log_ext_domain_count
                0x0000000000000000       0x1f zephyr/libzephyr.a(log_mgmt.c.obj)
 .text.log_src_cnt_get
                0x0000000000000000       0x11 zephyr/libzephyr.a(log_mgmt.c.obj)
 .rodata.log_domain_name_get.str1.1
                0x0000000000000000        0x1 zephyr/libzephyr.a(log_mgmt.c.obj)
 .text.log_domain_name_get
                0x0000000000000000        0x8 zephyr/libzephyr.a(log_mgmt.c.obj)
 .text.log_compiled_level_get
                0x0000000000000000       0x1c zephyr/libzephyr.a(log_mgmt.c.obj)
 .text.z_log_link_set_runtime_level
                0x0000000000000000       0x45 zephyr/libzephyr.a(log_mgmt.c.obj)
 .text.z_log_runtime_filters_init
                0x0000000000000000       0x34 zephyr/libzephyr.a(log_mgmt.c.obj)
 .text.log_source_id_get
                0x0000000000000000       0x33 zephyr/libzephyr.a(log_mgmt.c.obj)
 .text.filter_set
                0x0000000000000000       0x1f zephyr/libzephyr.a(log_mgmt.c.obj)
 .text.z_impl_log_filter_set
                0x0000000000000000       0x1f zephyr/libzephyr.a(log_mgmt.c.obj)
 .text.z_impl_log_frontend_filter_set
                0x0000000000000000       0x1f zephyr/libzephyr.a(log_mgmt.c.obj)
 .text.log_backend_get_by_name
                0x0000000000000000       0x26 zephyr/libzephyr.a(log_mgmt.c.obj)
 .text.log_backend_disable
                0x0000000000000000        0xc zephyr/libzephyr.a(log_mgmt.c.obj)
 .text.log_filter_get
                0x0000000000000000       0x1f zephyr/libzephyr.a(log_mgmt.c.obj)
 .text.log_frontend_filter_get
                0x0000000000000000        0x7 zephyr/libzephyr.a(log_mgmt.c.obj)
 .text.z_log_links_initiate
                0x0000000000000000       0x43 zephyr/libzephyr.a(log_mgmt.c.obj)
 .rodata.sname_cache_config$0
                0x0000000000000000       0x10 zephyr/libzephyr.a(log_mgmt.c.obj)
 .rodata.dname_cache_config$1
                0x0000000000000000       0x10 zephyr/libzephyr.a(log_mgmt.c.obj)
 .bss.sname_cache
                0x0000000000000000       0x20 zephyr/libzephyr.a(log_mgmt.c.obj)
 .bss.dname_cache
                0x0000000000000000       0x20 zephyr/libzephyr.a(log_mgmt.c.obj)
 .bss.sname_cache_buffer
                0x0000000000000000        0x9 zephyr/libzephyr.a(log_mgmt.c.obj)
 .bss.dname_cache_buffer
                0x0000000000000000        0x9 zephyr/libzephyr.a(log_mgmt.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(log_cache.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(log_cache.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(log_cache.c.obj)
 .text.log_cache_init
                0x0000000000000000       0x4c zephyr/libzephyr.a(log_cache.c.obj)
 .text.log_cache_get
                0x0000000000000000       0x9f zephyr/libzephyr.a(log_cache.c.obj)
 .text.log_cache_put
                0x0000000000000000       0x14 zephyr/libzephyr.a(log_cache.c.obj)
 .text.log_cache_release
                0x0000000000000000       0x14 zephyr/libzephyr.a(log_cache.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/libzephyr.a(log_cache.c.obj)
 .debug_info    0x0000000000000000     0x10cc zephyr/libzephyr.a(log_cache.c.obj)
 .debug_abbrev  0x0000000000000000      0x2af zephyr/libzephyr.a(log_cache.c.obj)
 .debug_loc     0x0000000000000000      0xa1f zephyr/libzephyr.a(log_cache.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(log_cache.c.obj)
 .debug_ranges  0x0000000000000000      0x1c0 zephyr/libzephyr.a(log_cache.c.obj)
 .debug_line    0x0000000000000000      0xe36 zephyr/libzephyr.a(log_cache.c.obj)
 .debug_str     0x0000000000000000      0x489 zephyr/libzephyr.a(log_cache.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(log_cache.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(log_msg.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(log_msg.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(log_msg.c.obj)
 .rodata.str1.1
                0x0000000000000000       0x1f zephyr/libzephyr.a(log_msg.c.obj)
 ._llext_const_symbol.static.z_impl_z_log_msg_static_create_sym_
                0x0000000000000000        0x8 zephyr/libzephyr.a(log_msg.c.obj)
 .literal.log_output_timestamp_to_us
                0x0000000000000000       0x10 zephyr/libzephyr.a(log_output.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(log_output.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(log_output.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(log_output.c.obj)
 .text.log_output_timestamp_to_us
                0x0000000000000000       0x27 zephyr/libzephyr.a(log_output.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(log_backend_uart.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(log_backend_uart.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(log_backend_uart.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .text.sys_trace_isr_enter
                0x0000000000000000        0x5 zephyr/libzephyr.a(tracing_none.c.obj)
 .text.sys_trace_isr_exit
                0x0000000000000000        0x5 zephyr/libzephyr.a(tracing_none.c.obj)
 .text.sys_trace_isr_exit_to_scheduler
                0x0000000000000000        0x5 zephyr/libzephyr.a(tracing_none.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .literal.uart_hal_set_at_cmd_char
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_tx_idle_num
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_inverse_signal
                0x0000000000000000       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_loop_back
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_init
                0x0000000000000000       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_get_max_rx_timeout_thrd
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_get_sclk
                0x0000000000000000       0x18 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_sw_flow_ctrl
                0x0000000000000000       0xc0 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_at_cmd_char
                0x0000000000000000       0x92 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_tx_idle_num
                0x0000000000000000       0x22 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_dtr
                0x0000000000000000       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_wakeup_thrd
                0x0000000000000000       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_get_wakeup_thrd
                0x0000000000000000       0x13 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_is_hw_rts_en
                0x0000000000000000        0xf zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_inverse_signal
                0x0000000000000000       0xe3 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_loop_back
                0x0000000000000000       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_init
                0x0000000000000000      0x129 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_get_max_rx_timeout_thrd
                0x0000000000000000       0x26 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_txfifo_rst
                0x0000000000000000        0x8 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .literal.uart_hal_tx_break
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .text.uart_hal_txfifo_rst
                0x0000000000000000       0x2f zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .text.uart_hal_tx_break
                0x0000000000000000       0x56 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .literal.esp_perip_clk_init
                0x0000000000000000       0x30 zephyr/libzephyr.a(clk.c.obj)
 .literal.rtc_clk_select_rtc_slow_clk
                0x0000000000000000        0x4 zephyr/libzephyr.a(clk.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(clk.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(clk.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(clk.c.obj)
 .text.esp_perip_clk_init
                0x0000000000000000       0xd6 zephyr/libzephyr.a(clk.c.obj)
 .text.rtc_clk_select_rtc_slow_clk
                0x0000000000000000        0xe zephyr/libzephyr.a(clk.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(adc_periph.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(adc_periph.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(adc_periph.c.obj)
 .rodata.adc_channel_io_map
                0x0000000000000000       0x50 zephyr/libzephyr.a(adc_periph.c.obj)
 .debug_info    0x0000000000000000       0x9e zephyr/libzephyr.a(adc_periph.c.obj)
 .debug_abbrev  0x0000000000000000       0x61 zephyr/libzephyr.a(adc_periph.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 zephyr/libzephyr.a(adc_periph.c.obj)
 .debug_line    0x0000000000000000       0xe7 zephyr/libzephyr.a(adc_periph.c.obj)
 .debug_str     0x0000000000000000      0x216 zephyr/libzephyr.a(adc_periph.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(adc_periph.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(i2s_periph.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(i2s_periph.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(i2s_periph.c.obj)
 .rodata.i2s_periph_signal
                0x0000000000000000       0x20 zephyr/libzephyr.a(i2s_periph.c.obj)
 .debug_info    0x0000000000000000      0x26c zephyr/libzephyr.a(i2s_periph.c.obj)
 .debug_abbrev  0x0000000000000000       0xbd zephyr/libzephyr.a(i2s_periph.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 zephyr/libzephyr.a(i2s_periph.c.obj)
 .debug_line    0x0000000000000000      0x234 zephyr/libzephyr.a(i2s_periph.c.obj)
 .debug_str     0x0000000000000000      0x5a0 zephyr/libzephyr.a(i2s_periph.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(i2s_periph.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(gpio_periph.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(gpio_periph.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(gpio_periph.c.obj)
 .rodata.GPIO_HOLD_MASK
                0x0000000000000000       0xa0 zephyr/libzephyr.a(gpio_periph.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .iram1.4.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_clk.c.obj)
 .literal.esp_rtc_get_time_us
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_clk.c.obj)
 .literal.esp_clk_slowclk_cal_get
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_clk.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk.c.obj)
 .iram1.4       0x0000000000000000       0x11 zephyr/libzephyr.a(esp_clk.c.obj)
 .text.esp_rtc_get_time_us
                0x0000000000000000       0x8e zephyr/libzephyr.a(esp_clk.c.obj)
 .text.esp_clk_slowclk_cal_get
                0x0000000000000000        0xd zephyr/libzephyr.a(esp_clk.c.obj)
 .text.esp_clk_rtc_time
                0x0000000000000000        0x9 zephyr/libzephyr.a(esp_clk.c.obj)
 .rtc.data.0    0x0000000000000000       0x10 zephyr/libzephyr.a(esp_clk.c.obj)
 .bss.s_esp_rtc_time_lock
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_clk.c.obj)
 .literal.rtc_clk_32k_enable_external
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_32k_bootstrap
                0x0000000000000000       0x2c zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_32k_enabled
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_apll_enable
                0x0000000000000000       0x48 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_slow_freq_get_hz
                0x0000000000000000        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_cpu_freq_to_config
                0x0000000000000000       0x20 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_cpu_freq_set_xtal
                0x0000000000000000       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_cpu_freq_set_config_fast
                0x0000000000000000       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_dig_clk8m_enable
                0x0000000000000000        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_dig_clk8m_disable
                0x0000000000000000        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_32k_enable_external
                0x0000000000000000        0xf zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_32k_bootstrap
                0x0000000000000000      0x186 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_32k_enabled
                0x0000000000000000       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_apll_enable
                0x0000000000000000      0x179 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_slow_freq_get_hz
                0x0000000000000000       0x1e zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.rtc_clk_cpu_freq_to_config.str1.1
                0x0000000000000000       0x29 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_cpu_freq_to_config
                0x0000000000000000       0x76 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.rtc_clk_cpu_freq_to_config
                0x0000000000000000       0x14 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_cpu_freq_set_xtal
                0x0000000000000000       0x1f zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_cpu_freq_set_config_fast
                0x0000000000000000       0x38 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_dig_clk8m_enable
                0x0000000000000000       0x20 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_dig_clk8m_disable
                0x0000000000000000       0x20 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$43
                0x0000000000000000        0xc zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_vddsdio_get_config
                0x0000000000000000       0x10 zephyr/libzephyr.a(rtc_init.c.obj)
 .literal.rtc_vddsdio_set_config
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_init.c.obj)
 .text.rtc_vddsdio_get_config
                0x0000000000000000       0x83 zephyr/libzephyr.a(rtc_init.c.obj)
 .text.rtc_vddsdio_set_config
                0x0000000000000000       0x48 zephyr/libzephyr.a(rtc_init.c.obj)
 .literal.rtc_time_us_to_slowclk
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_time.c.obj)
 .literal.rtc_time_get
                0x0000000000000000       0x14 zephyr/libzephyr.a(rtc_time.c.obj)
 .literal.rtc_clk_freq_cal
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_time.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
 .text.rtc_time_us_to_slowclk
                0x0000000000000000       0x1f zephyr/libzephyr.a(rtc_time.c.obj)
 .text.rtc_time_slowclk_to_us
                0x0000000000000000       0x1c zephyr/libzephyr.a(rtc_time.c.obj)
 .text.rtc_time_get
                0x0000000000000000       0x50 zephyr/libzephyr.a(rtc_time.c.obj)
 .text.rtc_clk_freq_cal
                0x0000000000000000       0x1c zephyr/libzephyr.a(rtc_time.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .literal.esp_base_mac_addr_set
                0x0000000000000000        0x8 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_base_mac_addr_get
                0x0000000000000000       0x10 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_efuse_mac_get_custom
                0x0000000000000000       0x1c zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_efuse_mac_get_default
                0x0000000000000000       0x24 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_derive_local_mac
                0x0000000000000000        0x4 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_read_mac
                0x0000000000000000       0x1c zephyr/libzephyr.a(mac_addr.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_base_mac_addr_set
                0x0000000000000000       0x22 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_base_mac_addr_get
                0x0000000000000000       0x34 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_efuse_mac_get_custom
                0x0000000000000000       0x50 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_efuse_mac_get_default
                0x0000000000000000       0x92 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_derive_local_mac
                0x0000000000000000       0x49 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_read_mac
                0x0000000000000000       0x76 zephyr/libzephyr.a(mac_addr.c.obj)
 .bss.base_mac_addr
                0x0000000000000000        0x6 zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_frame   0x0000000000000000       0xa0 zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_info    0x0000000000000000      0x7ac zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_abbrev  0x0000000000000000      0x26f zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_loc     0x0000000000000000      0x3bd zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_aranges
                0x0000000000000000       0x48 zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_ranges  0x0000000000000000       0x38 zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_line    0x0000000000000000      0x9df zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_str     0x0000000000000000      0x5e3 zephyr/libzephyr.a(mac_addr.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(mac_addr.c.obj)
 .iram1.0.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.1.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.4.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.5.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.0       0x0000000000000000       0x26 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.1       0x0000000000000000       0x2c zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.3       0x0000000000000000       0x2e zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.4       0x0000000000000000        0xd zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.5       0x0000000000000000       0x10 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .literal.ets_timer_setfn
                0x0000000000000000       0x14 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.1.literal
                0x0000000000000000       0x14 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.2.literal
                0x0000000000000000       0x14 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .literal.ets_timer_done
                0x0000000000000000        0x8 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .rodata.ets_timer_setfn.str1.1
                0x0000000000000000        0x9 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_setfn
                0x0000000000000000       0x3e zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.1       0x0000000000000000       0x3c zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.2       0x0000000000000000       0x44 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_done
                0x0000000000000000       0x1c zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.3       0x0000000000000000       0x16 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_init
                0x0000000000000000        0x5 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_deinit
                0x0000000000000000        0x5 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_frame   0x0000000000000000       0xb8 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_info    0x0000000000000000      0x640 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_abbrev  0x0000000000000000      0x293 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_loc     0x0000000000000000      0x10e zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_aranges
                0x0000000000000000       0x50 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_ranges  0x0000000000000000       0x40 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_line    0x0000000000000000      0x6ab zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_str     0x0000000000000000      0x49d zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.9.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.5.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.10.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.timer_task
                0x0000000000000000       0x34 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_create
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.2.literal
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.3.literal
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.4.literal
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_delete
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_init
                0x0000000000000000       0x3c zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_deinit
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_dump
                0x0000000000000000       0x44 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.12.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.13.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.9       0x0000000000000000       0x13 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.5       0x0000000000000000       0x75 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.10      0x0000000000000000        0xe zephyr/libzephyr.a(esp_timer.c.obj)
 .text.timer_task
                0x0000000000000000      0x127 zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_create
                0x0000000000000000       0x64 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.2       0x0000000000000000       0x6e zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.3       0x0000000000000000       0x90 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.4       0x0000000000000000       0x84 zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_delete
                0x0000000000000000       0x60 zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_init
                0x0000000000000000       0x86 zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_deinit
                0x0000000000000000       0x2e zephyr/libzephyr.a(esp_timer.c.obj)
 .rodata.esp_timer_dump.str1.1
                0x0000000000000000       0x54 zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_dump
                0x0000000000000000       0xc4 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.12      0x0000000000000000       0x36 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.13      0x0000000000000000       0x4c zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_is_active
                0x0000000000000000       0x13 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.s_timer_lock
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.s_timer_semaphore
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.s_timer_task
                0x0000000000000000       0x58 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.s_timers  0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.init_status
                0x0000000000000000        0x1 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.timer_task_stack
                0x0000000000000000     0x1000 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.4.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .literal.esp_timer_impl_lock
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .literal.esp_timer_impl_unlock
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.0.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.1.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.2.literal
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.5.literal
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .literal.esp_timer_impl_advance
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .literal.esp_timer_impl_init
                0x0000000000000000       0x38 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .literal.esp_timer_impl_deinit
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .literal.esp_timer_impl_get_alarm_reg
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.4       0x0000000000000000       0x1a zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .text.esp_timer_impl_lock
                0x0000000000000000        0xd zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .text.esp_timer_impl_unlock
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.0       0x0000000000000000       0x44 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.1       0x0000000000000000       0x22 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.2       0x0000000000000000      0x101 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.3       0x0000000000000000       0x12 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.5       0x0000000000000000       0x43 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .text.esp_timer_impl_advance
                0x0000000000000000       0x4c zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .rodata.esp_timer_impl_init.str1.1
                0x0000000000000000       0x3e zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .text.esp_timer_impl_init
                0x0000000000000000       0x8e zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .text.esp_timer_impl_deinit
                0x0000000000000000       0x21 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.6       0x0000000000000000        0x9 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .text.esp_timer_impl_get_alarm_reg
                0x0000000000000000       0x23 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .data.timestamp_id$0
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .bss.s_time_update_lock
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .bss.s_alarm_handler
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .literal.periph_module_reset
                0x0000000000000000       0x10 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .text.periph_module_reset
                0x0000000000000000       0x53 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .literal.esp_log_impl_lock
                0x0000000000000000        0x8 zephyr/libzephyr.a(log_noos.c.obj)
 .literal.esp_log_impl_lock_timeout
                0x0000000000000000        0x4 zephyr/libzephyr.a(log_noos.c.obj)
 .literal.esp_log_impl_unlock
                0x0000000000000000        0x8 zephyr/libzephyr.a(log_noos.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(log_noos.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(log_noos.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(log_noos.c.obj)
 .text.esp_log_impl_lock
                0x0000000000000000       0x16 zephyr/libzephyr.a(log_noos.c.obj)
 .text.esp_log_impl_lock_timeout
                0x0000000000000000        0xd zephyr/libzephyr.a(log_noos.c.obj)
 .text.esp_log_impl_unlock
                0x0000000000000000       0x17 zephyr/libzephyr.a(log_noos.c.obj)
 .bss.s_lock    0x0000000000000000        0x4 zephyr/libzephyr.a(log_noos.c.obj)
 .literal.heap_bubble_down
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .literal.s_log_level_get_and_unlock
                0x0000000000000000       0x2c zephyr/libzephyr.a(log.c.obj)
 .literal.esp_log_set_vprintf
                0x0000000000000000        0xc zephyr/libzephyr.a(log.c.obj)
 .literal.esp_log_level_set
                0x0000000000000000       0x44 zephyr/libzephyr.a(log.c.obj)
 .literal.esp_log_level_get
                0x0000000000000000        0x8 zephyr/libzephyr.a(log.c.obj)
 .literal.esp_log_writev
                0x0000000000000000        0xc zephyr/libzephyr.a(log.c.obj)
 .literal.esp_log_write
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(log.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(log.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(log.c.obj)
 .text.heap_bubble_down
                0x0000000000000000       0x49 zephyr/libzephyr.a(log.c.obj)
 .text.s_log_level_get_and_unlock
                0x0000000000000000       0xf1 zephyr/libzephyr.a(log.c.obj)
 .text.esp_log_set_vprintf
                0x0000000000000000       0x1a zephyr/libzephyr.a(log.c.obj)
 .rodata.esp_log_level_set.str1.1
                0x0000000000000000        0x2 zephyr/libzephyr.a(log.c.obj)
 .text.esp_log_level_set
                0x0000000000000000       0xf3 zephyr/libzephyr.a(log.c.obj)
 .text.esp_log_level_get
                0x0000000000000000       0x15 zephyr/libzephyr.a(log.c.obj)
 .text.esp_log_writev
                0x0000000000000000       0x32 zephyr/libzephyr.a(log.c.obj)
 .text.esp_log_write
                0x0000000000000000       0x26 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_cache_misses
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .data.s_log_print_func
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_cache_entry_count
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_cache_max_generation
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_cache
                0x0000000000000000       0xf8 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_tags
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .literal.wdt_hal_init
                0x0000000000000000       0x48 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .literal.wdt_hal_deinit
                0x0000000000000000        0x8 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .literal.wdt_hal_config_stage
                0x0000000000000000       0x24 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .literal.wdt_hal_set_flashboot_en
                0x0000000000000000        0x4 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_init
                0x0000000000000000      0x28f zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_deinit
                0x0000000000000000       0xc6 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_config_stage
                0x0000000000000000      0x14c zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_enable
                0x0000000000000000       0x4c zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_handle_intr
                0x0000000000000000       0x51 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_feed
                0x0000000000000000       0x2a zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_set_flashboot_en
                0x0000000000000000       0x42 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_is_enabled
                0x0000000000000000       0x1d zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .literal.esp_efuse_get_chip_ver
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .literal.esp_efuse_get_pkg_ver
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .literal.esp_efuse_disable_basic_rom_console
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .literal.esp_efuse_disable_rom_download_mode
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .literal.esp_efuse_write_random_key
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .literal.esp_efuse_burn_new_values
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .text.esp_efuse_get_chip_ver
                0x0000000000000000       0x4a zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .text.esp_efuse_get_pkg_ver
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .text.esp_efuse_disable_basic_rom_console
                0x0000000000000000       0x1b zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .text.esp_efuse_disable_rom_download_mode
                0x0000000000000000       0x38 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .text.esp_efuse_set_rom_log_scheme
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .text.esp_efuse_write_random_key
                0x0000000000000000       0x53 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .text.esp_efuse_burn_new_values
                0x0000000000000000        0xb zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .rodata.CSWTCH$3
                0x0000000000000000        0x7 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .debug_frame   0x0000000000000000       0xb8 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .debug_info    0x0000000000000000      0x623 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .debug_abbrev  0x0000000000000000      0x240 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .debug_loc     0x0000000000000000       0xb9 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .debug_aranges
                0x0000000000000000       0x50 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .debug_ranges  0x0000000000000000       0x58 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .debug_line    0x0000000000000000      0x8b1 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .debug_str     0x0000000000000000      0x748 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SECURE_VERSION
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ADC2_TP_HIGH
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ADC1_TP_HIGH
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ADC2_TP_LOW
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ADC1_TP_LOW
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ADC_VREF_AND_SDIO_DREF
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SDIO_FORCE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SDIO_TIEH
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_XPD_SDIO_REG
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_CHIP_VER_REV2
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_CHIP_VER_REV1
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_CHIP_CPU_FREQ_RATED
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_CHIP_CPU_FREQ_LOW
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_CHIP_VER_PKG
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_CHIP_VER_DIS_BT
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_CHIP_VER_DIS_APP_CPU
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_RD_DIS_BLK3
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_RD_DIS_BLK2
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_RD_DIS_BLK1
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLK3
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLK2
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLK1
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_FLASH_CRYPT_CNT
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_EFUSE_RD_DISABLE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_UART_DOWNLOAD_DIS
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_CONSOLE_DEBUG_DISABLE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DISABLE_JTAG
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_FLASH_CRYPT_CNT
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DISABLE_DL_CACHE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DISABLE_DL_DECRYPT
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DISABLE_DL_ENCRYPT
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ENCRYPT_CONFIG
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ENCRYPT_FLASH_KEY
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ABS_DONE_1
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ABS_DONE_0
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SECURE_BOOT_KEY
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_MAC_CUSTOM_VER
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_MAC_CUSTOM
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_MAC_CUSTOM_CRC
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_MAC_FACTORY_CRC
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_MAC_FACTORY
                0x0000000000000000       0x1c zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SECURE_VERSION
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC2_TP_HIGH
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC1_TP_HIGH
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC2_TP_LOW
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC1_TP_LOW
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC_VREF_AND_SDIO_DREF
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SDIO_FORCE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SDIO_TIEH
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.XPD_SDIO_REG
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.CHIP_VER_REV2
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.CHIP_VER_REV1
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.CHIP_CPU_FREQ_RATED
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.CHIP_CPU_FREQ_LOW
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.CHIP_VER_PKG
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.CHIP_VER_DIS_BT
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.CHIP_VER_DIS_APP_CPU
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.RD_DIS_BLK3
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.RD_DIS_BLK2
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.RD_DIS_BLK1
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLK3
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLK2
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLK1
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_FLASH_CRYPT_CNT
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_EFUSE_RD_DISABLE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.UART_DOWNLOAD_DIS
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.CONSOLE_DEBUG_DISABLE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DISABLE_JTAG
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.FLASH_CRYPT_CNT
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DISABLE_DL_CACHE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DISABLE_DL_DECRYPT
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DISABLE_DL_ENCRYPT
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ENCRYPT_CONFIG
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ENCRYPT_FLASH_KEY
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ABS_DONE_1
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ABS_DONE_0
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SECURE_BOOT_KEY
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.MAC_CUSTOM_VER
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.MAC_CUSTOM
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.MAC_CUSTOM_CRC
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.MAC_FACTORY_CRC
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.MAC_FACTORY
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .debug_info    0x0000000000000000      0x98c zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .debug_abbrev  0x0000000000000000       0xf5 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .debug_line    0x0000000000000000      0x249 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .debug_str     0x0000000000000000      0x993 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .literal.esp_efuse_utility_clear_program_registers
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_burn_chip
                0x0000000000000000       0x28 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_apply_34_encoding
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_apply_new_coding_scheme
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_clear_program_registers
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_burn_chip
                0x0000000000000000       0xc0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_apply_34_encoding
                0x0000000000000000       0x8e zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_apply_new_coding_scheme
                0x0000000000000000      0x15a zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .rodata.range_write_addr_blocks
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .rodata.range_read_addr_blocks
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_info    0x0000000000000000      0x86a zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_abbrev  0x0000000000000000      0x30a zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_loc     0x0000000000000000      0x4a1 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_ranges  0x0000000000000000       0xc0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_line    0x0000000000000000      0xce6 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_str     0x0000000000000000      0x633 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.k_mutex_unlock$constprop$0$isra$0
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_read_field_blob
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_read_field_bit
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_read_field_cnt
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_write_field_blob
                0x0000000000000000       0x28 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_write_field_cnt
                0x0000000000000000       0x30 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_write_field_bit
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_write_reg
                0x0000000000000000       0x24 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_read_block
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_read_reg
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_write_block
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_batch_write_begin
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_batch_write_cancel
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_batch_write_commit
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.k_mutex_unlock$constprop$0$isra$0
                0x0000000000000000        0xe zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_read_field_blob
                0x0000000000000000       0x5c zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_read_field_bit
                0x0000000000000000       0x29 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_read_field_cnt
                0x0000000000000000       0x40 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_write_field_blob
                0x0000000000000000       0x70 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_write_field_cnt
                0x0000000000000000       0x8c zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_write_field_bit
                0x0000000000000000       0x3d zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_get_field_size
                0x0000000000000000       0x1e zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_write_reg
                0x0000000000000000       0x52 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_read_block
                0x0000000000000000       0x44 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_read_reg
                0x0000000000000000       0x22 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_write_block
                0x0000000000000000       0x44 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_batch_write_begin
                0x0000000000000000       0x30 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_batch_write_cancel
                0x0000000000000000       0x2a zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_batch_write_commit
                0x0000000000000000       0x3a zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .bss.s_batch_writing_mode
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 ._k_mutex.static.s_efuse_lock_
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .debug_frame   0x0000000000000000      0x178 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .debug_info    0x0000000000000000     0x1284 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .debug_abbrev  0x0000000000000000      0x47b zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .debug_loc     0x0000000000000000      0x58d zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .debug_aranges
                0x0000000000000000       0x90 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .debug_ranges  0x0000000000000000       0x98 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .debug_line    0x0000000000000000     0x1276 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .debug_str     0x0000000000000000      0xb35 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_get_coding_scheme$part$0
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .literal.esp_efuse_set_write_protect
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .literal.esp_efuse_set_read_protect
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .literal.esp_efuse_get_coding_scheme
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .literal.esp_efuse_block_is_empty
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .literal.esp_efuse_get_key_dis_read
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .literal.esp_efuse_set_key_dis_read
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .literal.esp_efuse_get_key_dis_write
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .literal.esp_efuse_set_key_dis_write
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .literal.esp_efuse_key_block_unused
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .literal.esp_efuse_get_key_purpose
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .literal.esp_efuse_find_purpose
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .literal.esp_efuse_write_key
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .literal.esp_efuse_write_keys
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .text.esp_efuse_get_coding_scheme$part$0
                0x0000000000000000       0x22 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .text.esp_efuse_set_write_protect
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .text.esp_efuse_set_read_protect
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .text.esp_efuse_get_coding_scheme
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .text.esp_efuse_block_is_empty
                0x0000000000000000       0x4b zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .text.esp_efuse_get_key_dis_read
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .text.esp_efuse_set_key_dis_read
                0x0000000000000000       0x1d zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .text.esp_efuse_get_key_dis_write
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .text.esp_efuse_set_key_dis_write
                0x0000000000000000       0x1d zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .text.esp_efuse_key_block_unused
                0x0000000000000000       0x30 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .text.esp_efuse_get_key_purpose
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .text.esp_efuse_get_keypurpose_dis_write
                0x0000000000000000        0x7 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .text.esp_efuse_find_purpose
                0x0000000000000000       0x25 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .text.esp_efuse_write_key
                0x0000000000000000       0x82 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .text.esp_efuse_write_keys
                0x0000000000000000       0x84 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .rodata.CSWTCH$10
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .rodata.s_table
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .debug_frame   0x0000000000000000      0x178 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .debug_info    0x0000000000000000      0xbe9 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .debug_abbrev  0x0000000000000000      0x31d zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .debug_loc     0x0000000000000000      0x5f8 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .debug_aranges
                0x0000000000000000       0x90 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .debug_ranges  0x0000000000000000       0xc8 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .debug_line    0x0000000000000000      0xd3c zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .debug_str     0x0000000000000000      0x84a zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .literal.write_reg
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_process
                0x0000000000000000       0x30 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_reset
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_burn_efuses
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_update_virt_blocks
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_debug_dump_blocks
                0x0000000000000000       0x28 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_read_reg
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_fill_buff
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_count_once
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_write_cnt
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_write_reg
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_write_blob
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_get_read_register_address
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.write_reg
                0x0000000000000000       0x3b zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .rodata.esp_efuse_utility_process.str1.1
                0x0000000000000000       0x41 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_process
                0x0000000000000000      0x16c zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_reset
                0x0000000000000000       0x47 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_burn_efuses
                0x0000000000000000       0x26 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_erase_virt_blocks
                0x0000000000000000        0x5 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .rodata.esp_efuse_utility_update_virt_blocks.str1.1
                0x0000000000000000       0x26 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_update_virt_blocks
                0x0000000000000000       0x22 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .rodata.esp_efuse_utility_debug_dump_blocks.str1.1
                0x0000000000000000       0x1c zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_debug_dump_blocks
                0x0000000000000000       0x53 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_get_number_of_items
                0x0000000000000000       0x16 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_read_reg
                0x0000000000000000       0x29 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_fill_buff
                0x0000000000000000       0xb1 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_count_once
                0x0000000000000000       0x3c zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_write_cnt
                0x0000000000000000       0x6f zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .rodata.esp_efuse_utility_write_reg.str1.1
                0x0000000000000000       0x51 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_write_reg
                0x0000000000000000       0x48 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_write_blob
                0x0000000000000000       0x9e zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_get_read_register_address
                0x0000000000000000       0x16 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .bss.s_burn_counter
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_frame   0x0000000000000000      0x178 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_info    0x0000000000000000     0x1284 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_abbrev  0x0000000000000000      0x418 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_loc     0x0000000000000000      0xd9e zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_aranges
                0x0000000000000000       0x90 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_ranges  0x0000000000000000      0x200 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_line    0x0000000000000000     0x155a zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_str     0x0000000000000000      0x9a2 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.bootloader_flash_update_id
                0x0000000000000000        0x8 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .literal.bootloader_flash_update_size
                0x0000000000000000        0x4 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .iram1.0.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .iram1.1.literal
                0x0000000000000000        0xc zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .iram1.2.literal
                0x0000000000000000       0x54 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .iram1.3.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .literal.bootloader_flash_get_wp_pin
                0x0000000000000000        0x8 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .text.bootloader_flash_update_id
                0x0000000000000000       0x10 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .text.bootloader_flash_update_size
                0x0000000000000000        0xa zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .iram1.0       0x0000000000000000       0x6e zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .iram1.1       0x0000000000000000       0x28 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .iram1.2       0x0000000000000000      0x1d0 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .iram1.3       0x0000000000000000       0x95 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .text.bootloader_flash_get_wp_pin
                0x0000000000000000       0x36 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .rodata.CSWTCH$8
                0x0000000000000000       0x10 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .debug_frame   0x0000000000000000       0xb8 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .debug_info    0x0000000000000000      0x82b zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .debug_abbrev  0x0000000000000000      0x250 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .debug_loc     0x0000000000000000      0x34b zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .debug_aranges
                0x0000000000000000       0x50 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .debug_ranges  0x0000000000000000      0x130 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .debug_line    0x0000000000000000      0x991 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .debug_str     0x0000000000000000      0x725 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .literal.bootloader_common_get_chip_revision
                0x0000000000000000       0x10 zephyr/libzephyr.a(bootloader_efuse_esp32.c.obj)
 .literal.bootloader_common_get_chip_ver_pkg
                0x0000000000000000        0x4 zephyr/libzephyr.a(bootloader_efuse_esp32.c.obj)
 .literal.bootloader_clock_get_rated_freq_mhz
                0x0000000000000000        0x4 zephyr/libzephyr.a(bootloader_efuse_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_efuse_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_efuse_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_efuse_esp32.c.obj)
 .text.bootloader_common_get_chip_revision
                0x0000000000000000       0x40 zephyr/libzephyr.a(bootloader_efuse_esp32.c.obj)
 .text.bootloader_common_get_chip_ver_pkg
                0x0000000000000000       0x1f zephyr/libzephyr.a(bootloader_efuse_esp32.c.obj)
 .text.bootloader_clock_get_rated_freq_mhz
                0x0000000000000000       0x26 zephyr/libzephyr.a(bootloader_efuse_esp32.c.obj)
 .rodata.CSWTCH$1
                0x0000000000000000        0x7 zephyr/libzephyr.a(bootloader_efuse_esp32.c.obj)
 .debug_frame   0x0000000000000000       0x58 zephyr/libzephyr.a(bootloader_efuse_esp32.c.obj)
 .debug_info    0x0000000000000000      0x17d zephyr/libzephyr.a(bootloader_efuse_esp32.c.obj)
 .debug_abbrev  0x0000000000000000       0xb2 zephyr/libzephyr.a(bootloader_efuse_esp32.c.obj)
 .debug_loc     0x0000000000000000       0xa8 zephyr/libzephyr.a(bootloader_efuse_esp32.c.obj)
 .debug_aranges
                0x0000000000000000       0x30 zephyr/libzephyr.a(bootloader_efuse_esp32.c.obj)
 .debug_ranges  0x0000000000000000       0x20 zephyr/libzephyr.a(bootloader_efuse_esp32.c.obj)
 .debug_line    0x0000000000000000      0x2e7 zephyr/libzephyr.a(bootloader_efuse_esp32.c.obj)
 .debug_str     0x0000000000000000      0x313 zephyr/libzephyr.a(bootloader_efuse_esp32.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(bootloader_efuse_esp32.c.obj)
 .literal.esp_reset_reason
                0x0000000000000000        0x4 zephyr/libzephyr.a(reset_reason.c.obj)
 .iram1.0.literal
                0x0000000000000000        0xc zephyr/libzephyr.a(reset_reason.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(reset_reason.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(reset_reason.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(reset_reason.c.obj)
 .text.esp_reset_reason
                0x0000000000000000        0xa zephyr/libzephyr.a(reset_reason.c.obj)
 .iram1.0       0x0000000000000000       0x26 zephyr/libzephyr.a(reset_reason.c.obj)
 .literal.esp_register_shutdown_handler
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_system_api.c.obj)
 .literal.esp_unregister_shutdown_handler
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_system_api.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_system_api.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_system_api.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_system_api.c.obj)
 .text.esp_register_shutdown_handler
                0x0000000000000000       0x31 zephyr/libzephyr.a(esp_system_api.c.obj)
 .text.esp_unregister_shutdown_handler
                0x0000000000000000       0x29 zephyr/libzephyr.a(esp_system_api.c.obj)
 .bss.shutdown_handlers
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_info    0x0000000000000000      0x173 zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_abbrev  0x0000000000000000      0x103 zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_loc     0x0000000000000000       0xff zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_ranges  0x0000000000000000       0x30 zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_line    0x0000000000000000      0x2e3 zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_str     0x0000000000000000      0x2a4 zephyr/libzephyr.a(esp_system_api.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp_system_api.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(heap_caps.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(heap_caps.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(heap_caps.c.obj)
 ._k_heap.static._internal_heap_1_
                0x0000000000000000       0x14 zephyr/libzephyr.a(heap_caps.c.obj)
 .noinit.0      0x0000000000000000     0xc000 zephyr/libzephyr.a(heap_caps.c.obj)
 .debug_info    0x0000000000000000      0x255 zephyr/libzephyr.a(heap_caps.c.obj)
 .debug_abbrev  0x0000000000000000      0x11d zephyr/libzephyr.a(heap_caps.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 zephyr/libzephyr.a(heap_caps.c.obj)
 .debug_line    0x0000000000000000      0x1b6 zephyr/libzephyr.a(heap_caps.c.obj)
 .debug_str     0x0000000000000000      0x457 zephyr/libzephyr.a(heap_caps.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(heap_caps.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(dport_access.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(dport_access.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(dport_access.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(dport_access.c.obj)
 .iram1.3       0x0000000000000000       0x15 zephyr/libzephyr.a(dport_access.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/libzephyr.a(dport_access.c.obj)
 .debug_info    0x0000000000000000       0xce zephyr/libzephyr.a(dport_access.c.obj)
 .debug_abbrev  0x0000000000000000       0x87 zephyr/libzephyr.a(dport_access.c.obj)
 .debug_loc     0x0000000000000000       0x22 zephyr/libzephyr.a(dport_access.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/libzephyr.a(dport_access.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/libzephyr.a(dport_access.c.obj)
 .debug_line    0x0000000000000000      0x18d zephyr/libzephyr.a(dport_access.c.obj)
 .debug_str     0x0000000000000000      0x242 zephyr/libzephyr.a(dport_access.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(dport_access.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(stubs.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(stubs.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(stubs.c.obj)
 .debug_info    0x0000000000000000       0x6b zephyr/libzephyr.a(stubs.c.obj)
 .debug_abbrev  0x0000000000000000       0x26 zephyr/libzephyr.a(stubs.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 zephyr/libzephyr.a(stubs.c.obj)
 .debug_line    0x0000000000000000       0x6d zephyr/libzephyr.a(stubs.c.obj)
 .debug_str     0x0000000000000000      0x206 zephyr/libzephyr.a(stubs.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(stubs.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .literal.arch_cpu_atomic_idle
                0x0000000000000000        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .text.arch_cpu_atomic_idle
                0x0000000000000000       0x14 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .literal.arch_syscall_oops
                0x0000000000000000        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .text.arch_syscall_oops
                0x0000000000000000        0xd zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .literal.z_arch_irq_connect_dynamic
                0x0000000000000000        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text.z_irq_priority_set
                0x0000000000000000        0x5 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text.z_arch_irq_connect_dynamic
                0x0000000000000000       0x12 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text.xtensa_irq_is_enabled
                0x0000000000000000       0x18 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .literal.__stdin_hook_install
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal._exit
                0x0000000000000000        0x8 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_init_recursive
                0x0000000000000000        0x8 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_init
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_close_recursive
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_close
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_acquire_recursive
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_acquire
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_try_acquire_recursive
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_try_acquire
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_release_recursive
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_release
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__chk_fail
                0x0000000000000000        0xc zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.z_errno_wrap
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__stdin_hook_install
                0x0000000000000000       0x15 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .rodata._exit.str1.1
                0x0000000000000000        0x6 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text._exit    0x0000000000000000        0xf zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_init_recursive
                0x0000000000000000       0x16 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_init
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_close_recursive
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_close
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_acquire_recursive
                0x0000000000000000       0x12 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_acquire
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_try_acquire_recursive
                0x0000000000000000       0x18 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_try_acquire
                0x0000000000000000       0x10 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_release_recursive
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_release
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .rodata.__chk_fail.str1.1
                0x0000000000000000       0x1e zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__chk_fail
                0x0000000000000000       0x14 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.z_errno_wrap
                0x0000000000000000        0xd zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 ._k_mutex.static.__lock___libc_recursive_mutex_
                0x0000000000000000       0x14 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .rodata.stdout
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .rodata.stdin  0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .bss.__stdin   0x0000000000000000       0x10 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .literal.malloc_lock
                0x0000000000000000        0x8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.malloc_unlock
                0x0000000000000000        0x8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.malloc
                0x0000000000000000       0x14 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.aligned_alloc
                0x0000000000000000       0x14 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.realloc
                0x0000000000000000       0x14 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.free  0x0000000000000000       0x10 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.calloc
                0x0000000000000000        0xc zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.reallocarray
                0x0000000000000000        0x8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.malloc_lock
                0x0000000000000000       0x12 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.malloc_unlock
                0x0000000000000000        0xe zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.malloc   0x0000000000000000       0x30 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.aligned_alloc
                0x0000000000000000       0x30 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.realloc  0x0000000000000000       0x30 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.free     0x0000000000000000       0x1c zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.calloc   0x0000000000000000       0x33 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.reallocarray
                0x0000000000000000       0x27 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .data.z_malloc_heap_mutex
                0x0000000000000000       0x14 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.rand_get
                0x0000000000000000        0xc zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .literal.z_impl_sys_rand32_get
                0x0000000000000000        0x8 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .literal.z_impl_sys_rand_get
                0x0000000000000000        0x4 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .literal.z_impl_sys_csrand_get
                0x0000000000000000        0x4 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .text          0x0000000000000000        0x0 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .data          0x0000000000000000        0x0 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .text.rand_get
                0x0000000000000000       0x4a zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .text.z_impl_sys_rand32_get
                0x0000000000000000       0x20 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .text.z_impl_sys_rand_get
                0x0000000000000000       0x12 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .text.z_impl_sys_csrand_get
                0x0000000000000000       0x18 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .debug_info    0x0000000000000000      0x630 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .debug_abbrev  0x0000000000000000      0x346 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .debug_loc     0x0000000000000000      0x1e5 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .debug_ranges  0x0000000000000000       0x40 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .debug_line    0x0000000000000000      0x6df zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .debug_str     0x0000000000000000      0x412 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .literal.esp_intr_mark_shared
                0x0000000000000000       0x10 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.esp_intr_reserve
                0x0000000000000000       0x10 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.6.literal
                0x0000000000000000        0xc zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.7.literal
                0x0000000000000000       0x10 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.esp_intr_free
                0x0000000000000000       0x24 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.9.literal
                0x0000000000000000       0x14 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.10.literal
                0x0000000000000000       0x10 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_mark_shared
                0x0000000000000000       0x4e zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_reserve
                0x0000000000000000       0x44 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.6       0x0000000000000000       0x78 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_get_intno
                0x0000000000000000        0xc zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_get_cpu
                0x0000000000000000        0xc zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.7       0x0000000000000000       0x70 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_free
                0x0000000000000000       0xc0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.9       0x0000000000000000       0x45 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.10      0x0000000000000000       0x2e zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.non_iram_int_disabled_flag
                0x0000000000000000        0x1 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.non_iram_int_disabled
                0x0000000000000000        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .text.uart_register_input
                0x0000000000000000        0x5 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .text.sys_clock_set_timeout
                0x0000000000000000        0x5 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .text.sys_clock_idle_exit
                0x0000000000000000        0x5 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_info    0x0000000000000000       0xda zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_abbrev  0x0000000000000000       0x7e zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_ranges  0x0000000000000000       0x18 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_line    0x0000000000000000      0x171 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_str     0x0000000000000000      0x24f zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .literal.z_device_get_all_static
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(device.c.obj)
 .literal.z_impl_device_get_binding
                0x0000000000000000       0x14 zephyr/kernel/libkernel.a(device.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(device.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(device.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(device.c.obj)
 .text.z_device_get_all_static
                0x0000000000000000       0x19 zephyr/kernel/libkernel.a(device.c.obj)
 .text.z_impl_device_get_binding
                0x0000000000000000       0x5a zephyr/kernel/libkernel.a(device.c.obj)
 .literal.z_impl_z_errno
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(errno.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
 .text.z_impl_z_errno
                0x0000000000000000        0xd zephyr/kernel/libkernel.a(errno.c.obj)
 .rodata._k_neg_eagain
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_info    0x0000000000000000      0x5da zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_abbrev  0x0000000000000000      0x18d zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_line    0x0000000000000000      0x373 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_str     0x0000000000000000      0x639 zephyr/kernel/libkernel.a(errno.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/kernel/libkernel.a(errno.c.obj)
 .literal.k_fatal_halt
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text.coredump
                0x0000000000000000        0x5 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text.coredump_memory_dump
                0x0000000000000000        0x5 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text.coredump_buffer_output
                0x0000000000000000        0x5 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text.coredump_query
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text.coredump_cmd
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text.k_fatal_halt
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(fatal.c.obj)
 .literal.z_early_memcpy
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(init.c.obj)
 .literal.z_early_rand_get
                0x0000000000000000       0x20 zephyr/kernel/libkernel.a(init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .text.z_early_memcpy
                0x0000000000000000       0x12 zephyr/kernel/libkernel.a(init.c.obj)
 .text.z_early_rand_get
                0x0000000000000000       0x8f zephyr/kernel/libkernel.a(init.c.obj)
 .data.state$1  0x0000000000000000        0x8 zephyr/kernel/libkernel.a(init.c.obj)
 .literal.z_thread_essential_set
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.z_thread_essential_clear
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.z_is_thread_essential
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.k_thread_state_str
                0x0000000000000000       0x14 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.k_thread_user_mode_enter
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(thread.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_foreach
                0x0000000000000000        0x5 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_foreach_unlocked
                0x0000000000000000        0x5 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_thread_essential_set
                0x0000000000000000       0x15 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_thread_essential_clear
                0x0000000000000000       0x15 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_is_thread_essential
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_name_copy
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(thread.c.obj)
 .rodata.k_thread_state_str.str1.1
                0x0000000000000000        0x3 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_state_str
                0x0000000000000000       0x89 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_init_thread_base
                0x0000000000000000       0x19 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_user_mode_enter
                0x0000000000000000       0x28 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_float_disable
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_float_enable
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_runtime_stats_get
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_runtime_stats_all_get
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(thread.c.obj)
 .rodata.str1.1
                0x0000000000000000       0x4d zephyr/kernel/libkernel.a(thread.c.obj)
 .rodata.state_string$0
                0x0000000000000000       0x40 zephyr/kernel/libkernel.a(thread.c.obj)
 ._llext_const_symbol.static.k_is_in_isr_sym_
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.k_sched_time_slice_set
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_move_thread_to_end_of_prio_q
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_pend_thread
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_pend_curr_irqlock
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_set_prio
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_thread_resume
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_thread_priority_set
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_priq_dumb_remove
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_priq_rb_add
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_priq_rb_remove
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_priq_rb_best
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_thread_priority_set
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.k_can_yield
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_usleep
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_wakeup
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_is_preempt_thread
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_thread_join
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(sched.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_sched_prio_cmp
                0x0000000000000000       0x1a zephyr/kernel/libkernel.a(sched.c.obj)
 .text.k_sched_time_slice_set
                0x0000000000000000       0x28 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_move_thread_to_end_of_prio_q
                0x0000000000000000       0x16 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_pend_thread
                0x0000000000000000       0x1c zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_pend_curr_irqlock
                0x0000000000000000       0x20 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_set_prio
                0x0000000000000000       0x8e zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_resume
                0x0000000000000000       0x36 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_thread_priority_set
                0x0000000000000000       0x24 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_priq_dumb_remove
                0x0000000000000000        0xe zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_priq_dumb_best
                0x0000000000000000        0xe zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_priq_rb_lessthan
                0x0000000000000000       0x31 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_priq_rb_add
                0x0000000000000000       0x60 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_priq_rb_remove
                0x0000000000000000       0x16 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_priq_rb_best
                0x0000000000000000       0x11 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_priq_mq_best
                0x0000000000000000       0x28 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.init_ready_q
                0x0000000000000000        0xb zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_priority_get
                0x0000000000000000        0xb zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_priority_set
                0x0000000000000000        0xf zephyr/kernel/libkernel.a(sched.c.obj)
 .text.k_can_yield
                0x0000000000000000       0x2c zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_usleep
                0x0000000000000000       0x31 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_wakeup
                0x0000000000000000       0x42 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_is_preempt_thread
                0x0000000000000000       0x22 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_join
                0x0000000000000000       0x76 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_sched_waitq_walk
                0x0000000000000000       0x30 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_pm_save_idle_exit
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(idle.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .text.z_pm_save_idle_exit
                0x0000000000000000        0xb zephyr/kernel/libkernel.a(idle.c.obj)
 .text.arch_spin_relax
                0x0000000000000000        0x7 zephyr/kernel/libkernel.a(idle.c.obj)
 .literal.adjust_owner_prio$isra$0
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(mutex.c.obj)
 .literal.z_impl_k_mutex_unlock
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(mutex.c.obj)
 .literal.z_impl_k_mutex_lock
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(mutex.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .text.adjust_owner_prio$isra$0
                0x0000000000000000       0x1c zephyr/kernel/libkernel.a(mutex.c.obj)
 .text.z_impl_k_mutex_unlock
                0x0000000000000000       0x70 zephyr/kernel/libkernel.a(mutex.c.obj)
 .text.z_impl_k_mutex_lock
                0x0000000000000000       0xcc zephyr/kernel/libkernel.a(mutex.c.obj)
 .text.z_impl_k_mutex_init
                0x0000000000000000       0x11 zephyr/kernel/libkernel.a(mutex.c.obj)
 .rodata.str1.1
                0x0000000000000000       0x2a zephyr/kernel/libkernel.a(mutex.c.obj)
 ._llext_const_symbol.static.z_impl_k_mutex_unlock_sym_
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(mutex.c.obj)
 ._llext_const_symbol.static.z_impl_k_mutex_lock_sym_
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(mutex.c.obj)
 .bss.lock      0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_info    0x0000000000000000     0x61d5 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_abbrev  0x0000000000000000      0x492 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_loc     0x0000000000000000      0x573 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_ranges  0x0000000000000000       0x70 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_line    0x0000000000000000      0xdff zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_str     0x0000000000000000      0xbae zephyr/kernel/libkernel.a(mutex.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/kernel/libkernel.a(mutex.c.obj)
 .literal.z_impl_k_sem_reset
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(sem.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .text.z_impl_k_sem_reset
                0x0000000000000000       0x2f zephyr/kernel/libkernel.a(sem.c.obj)
 .literal.unschedule_locked
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(work.c.obj)
 .literal.cancel_async_locked
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(work.c.obj)
 .literal.cancel_sync_locked
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(work.c.obj)
 .literal.work_timeout
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(work.c.obj)
 .literal.k_work_init
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(work.c.obj)
 .literal.work_flush_locked
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(work.c.obj)
 .literal.k_work_flush
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(work.c.obj)
 .literal.k_work_cancel
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(work.c.obj)
 .literal.k_work_cancel_sync
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(work.c.obj)
 .literal.k_work_queue_init
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(work.c.obj)
 .literal.k_work_queue_drain
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(work.c.obj)
 .literal.k_work_queue_unplug
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(work.c.obj)
 .literal.k_work_init_delayable
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(work.c.obj)
 .literal.k_work_delayable_busy_get
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(work.c.obj)
 .literal.k_work_schedule_for_queue
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(work.c.obj)
 .literal.k_work_schedule
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(work.c.obj)
 .literal.k_work_reschedule_for_queue
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(work.c.obj)
 .literal.k_work_reschedule
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(work.c.obj)
 .literal.k_work_cancel_delayable
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(work.c.obj)
 .literal.k_work_cancel_delayable_sync
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(work.c.obj)
 .literal.k_work_flush_delayable
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(work.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(work.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(work.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(work.c.obj)
 .text.handle_flush
                0x0000000000000000        0x5 zephyr/kernel/libkernel.a(work.c.obj)
 .text.unschedule_locked
                0x0000000000000000       0x26 zephyr/kernel/libkernel.a(work.c.obj)
 .text.cancel_async_locked
                0x0000000000000000       0x6a zephyr/kernel/libkernel.a(work.c.obj)
 .text.cancel_sync_locked
                0x0000000000000000       0x33 zephyr/kernel/libkernel.a(work.c.obj)
 .text.work_timeout
                0x0000000000000000       0x30 zephyr/kernel/libkernel.a(work.c.obj)
 .text.k_work_init
                0x0000000000000000       0x14 zephyr/kernel/libkernel.a(work.c.obj)
 .text.work_flush_locked
                0x0000000000000000       0x92 zephyr/kernel/libkernel.a(work.c.obj)
 .text.k_work_busy_get
                0x0000000000000000       0x13 zephyr/kernel/libkernel.a(work.c.obj)
 .text.k_work_flush
                0x0000000000000000       0x2a zephyr/kernel/libkernel.a(work.c.obj)
 .text.k_work_cancel
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(work.c.obj)
 .text.k_work_cancel_sync
                0x0000000000000000       0x4a zephyr/kernel/libkernel.a(work.c.obj)
 .text.k_work_queue_init
                0x0000000000000000       0x12 zephyr/kernel/libkernel.a(work.c.obj)
 .text.k_work_queue_drain
                0x0000000000000000       0x62 zephyr/kernel/libkernel.a(work.c.obj)
 .text.k_work_queue_unplug
                0x0000000000000000       0x21 zephyr/kernel/libkernel.a(work.c.obj)
 .text.k_work_init_delayable
                0x0000000000000000       0x19 zephyr/kernel/libkernel.a(work.c.obj)
 .text.k_work_delayable_busy_get
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(work.c.obj)
 .text.k_work_schedule_for_queue
                0x0000000000000000       0x4e zephyr/kernel/libkernel.a(work.c.obj)
 .text.k_work_schedule
                0x0000000000000000       0x16 zephyr/kernel/libkernel.a(work.c.obj)
 .text.k_work_reschedule_for_queue
                0x0000000000000000       0x4d zephyr/kernel/libkernel.a(work.c.obj)
 .text.k_work_reschedule
                0x0000000000000000       0x16 zephyr/kernel/libkernel.a(work.c.obj)
 .text.k_work_cancel_delayable
                0x0000000000000000       0x20 zephyr/kernel/libkernel.a(work.c.obj)
 .text.k_work_cancel_delayable_sync
                0x0000000000000000       0x52 zephyr/kernel/libkernel.a(work.c.obj)
 .text.k_work_flush_delayable
                0x0000000000000000       0x56 zephyr/kernel/libkernel.a(work.c.obj)
 .literal.timeout_rem
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.z_timeout_remaining
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.z_timeout_expires
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.z_get_next_timeout_expiry
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.timeout_rem
                0x0000000000000000       0x62 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.z_timeout_remaining
                0x0000000000000000       0x1a zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.z_timeout_expires
                0x0000000000000000       0x46 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.z_get_next_timeout_expiry
                0x0000000000000000       0x16 zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.z_impl_k_timer_status_sync
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(timer.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timer.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timer.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timer.c.obj)
 .text.z_impl_k_timer_status_get
                0x0000000000000000       0x16 zephyr/kernel/libkernel.a(timer.c.obj)
 .text.z_impl_k_timer_status_sync
                0x0000000000000000       0x33 zephyr/kernel/libkernel.a(timer.c.obj)
 .bss.lock      0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timer.c.obj)
 .literal.k_calloc
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(mempool.c.obj)
 .literal.z_thread_aligned_alloc
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(mempool.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
 .text.k_calloc
                0x0000000000000000       0x2a zephyr/kernel/libkernel.a(mempool.c.obj)
 .text.z_thread_aligned_alloc
                0x0000000000000000       0x2a zephyr/kernel/libkernel.a(mempool.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .literal.k_heap_alloc
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(kheap.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .text.k_heap_alloc
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(kheap.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(system_work_q.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(system_work_q.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(system_work_q.c.obj)
 .text          0x0000000000000000       0x18 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
 .text          0x0000000000000000       0x18 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
 .literal       0x0000000000000000       0x10 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
 .text          0x0000000000000000      0x312 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
 .literal       0x0000000000000000        0xc /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
 .text          0x0000000000000000      0x1ff /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
 .literal       0x0000000000000000       0x10 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
 .text          0x0000000000000000      0x213 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
 .literal       0x0000000000000000        0x4 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
 .text          0x0000000000000000       0x6c /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
 .text          0x0000000000000000       0x3d /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
 .text          0x0000000000000000       0x81 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
 .literal       0x0000000000000000        0x8 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
 .text          0x0000000000000000       0xa4 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
 .literal       0x0000000000000000        0x8 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
 .text          0x0000000000000000       0x62 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
 .literal       0x0000000000000000        0xc /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .text          0x0000000000000000       0x37 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .debug_frame   0x0000000000000000       0x28 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .text          0x0000000000000000      0x2ae /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .text          0x0000000000000000      0x270 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .text          0x0000000000000000      0x25e /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
 .text          0x0000000000000000        0x0 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
 .literal       0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
 .text          0x0000000000000000      0x135 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
 .literal       0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
 .text          0x0000000000000000       0x74 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
 .literal       0x0000000000000000       0x1c /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
 .text          0x0000000000000000      0x123 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
 .literal       0x0000000000000000        0xc /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
 .text          0x0000000000000000       0x63 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
 .text          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_ctype_ctype_.c.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_ctype_ctype_.c.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_ctype_ctype_.c.o)
 .rodata._ctype_
                0x0000000000000000      0x101 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_ctype_ctype_.c.o)
 .text          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .text.memcmp   0x0000000000000000       0x26 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .text          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .text.strnlen  0x0000000000000000       0x1a /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .literal.fprintf
                0x0000000000000000        0x4 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .text          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .text.fprintf  0x0000000000000000       0x28 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .text          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .text.fputs    0x0000000000000000       0x2a /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .text          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .text          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .literal.scanf_getc
                0x0000000000000000        0x4 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .literal.scanf_ungetc$isra$0
                0x0000000000000000        0x4 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .literal.skip_spaces
                0x0000000000000000        0x8 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .literal.__l_vfscanf
                0x0000000000000000       0x50 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text.scanf_getc
                0x0000000000000000       0x19 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text.putval   0x0000000000000000       0x32 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text.scanf_ungetc$isra$0
                0x0000000000000000       0x18 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text.skip_spaces
                0x0000000000000000       0x34 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .rodata.__l_vfscanf.str1.1
                0x0000000000000000        0xc /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text.__l_vfscanf
                0x0000000000000000      0x4a2 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .debug_frame   0x0000000000000000       0x88 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .literal.vprintf
                0x0000000000000000        0x8 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .text          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .text.vprintf  0x0000000000000000       0x1a /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .text          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .text.strchr   0x0000000000000000       0x1d /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .literal.fgetc
                0x0000000000000000        0x4 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .text          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .text.fgetc    0x0000000000000000       0x9a /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .text          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
 .literal.ungetc
                0x0000000000000000        0x4 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
 .text          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
 .data          0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
 .bss           0x0000000000000000        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
 .text.ungetc   0x0000000000000000       0x78 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)

Memory Configuration

Name             Origin             Length             Attributes
mcuboot_hdr      0x0000000000000000 0x0000000000000020 xr
metadata         0x0000000000000020 0x0000000000000020 xr
ROM              0x0000000000000040 0x00000000003fffc0 xr
iram0_0_seg      0x0000000040080000 0x0000000000020000 xr
irom0_0_seg      0x00000000400d0020 0x00000000003fffe0 xr
dram0_0_seg      0x000000003ffb0000 0x000000000002c200 rw
dram0_1_seg      0x000000003ffe5230 0x000000000001add0 rw
drom0_0_seg      0x000000003f400040 0x00000000003fffc0 r
rtc_iram_seg     0x00000000400c0000 0x0000000000002000 xrw
rtc_slow_seg     0x0000000050000000 0x0000000000001000 rw
IDT_LIST         0x000000003ebfe010 0x0000000000002000 rw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000040083a28                vfprintf = __l_vfprintf
                0x0000000000000000                vfscanf = __l_vfscanf
LOAD zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
LOAD zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
LOAD app/libapp.a
LOAD zephyr/libzephyr.a
LOAD zephyr/arch/common/libarch__common.a
LOAD zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a
LOAD zephyr/lib/libc/picolibc/liblib__libc__picolibc.a
LOAD zephyr/lib/libc/common/liblib__libc__common.a
LOAD zephyr/subsys/random/libsubsys__random.a
LOAD zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a
LOAD zephyr/drivers/clock_control/libdrivers__clock_control.a
LOAD zephyr/drivers/console/libdrivers__console.a
LOAD zephyr/drivers/entropy/libdrivers__entropy.a
LOAD zephyr/drivers/gpio/libdrivers__gpio.a
LOAD zephyr/drivers/pinctrl/libdrivers__pinctrl.a
LOAD zephyr/drivers/serial/libdrivers__serial.a
LOAD zephyr/drivers/timer/libdrivers__timer.a
LOAD zephyr/kernel/libkernel.a
LOAD /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a
LOAD zephyr/arch/common/libisr_tables.a
LOAD /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a
LOAD /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a
LOAD /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a
                [!provide]                        PROVIDE (_ResetVector = 0x40000400)
                0x0000000000000000                _rom_store_table = 0x0
                [!provide]                        PROVIDE (_memmap_vecbase_reset = 0x40000450)
                [!provide]                        PROVIDE (_memmap_reset_vector = 0x40000400)

.mcuboot_header
                0x0000000000000000       0x20
                0x0000000000000000        0x8 QUAD 0x0
                0x0000000000000008        0x8 QUAD 0x0
                0x0000000000000010        0x8 QUAD 0x0
                0x0000000000000018        0x8 QUAD 0x0

.metadata       0x0000000000000020       0x1c
                0x0000000000000020        0x4 LONG 0xace637d3
 *(SORT_BY_ALIGNMENT(.entry_addr))
                0x0000000000000024        0x4 LONG 0x40080000 ADDR (.iram0.vectors)
                0x0000000000000028        0x4 LONG 0x1b74 LOADADDR (.iram0.vectors)
                0x000000000000002c        0x4 LONG 0x411c ((LOADADDR (text) + SIZEOF (text)) - LOADADDR (.iram0.vectors))
                0x0000000000000030        0x4 LONG 0x3ffb0000 ADDR (.dram0.data)
                0x0000000000000034        0x4 LONG 0x11fc LOADADDR (.dram0.data)
                0x0000000000000038        0x4 LONG 0x978 ((LOADADDR (.dram0.end) + SIZEOF (.dram0.end)) - LOADADDR (.dram0.data))

.rel.plt        0x0000000000000000        0x0
 *(SORT_BY_ALIGNMENT(.rel.plt))
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(SORT_BY_ALIGNMENT(.rel.iplt))
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.rela.plt       0x0000000000000000        0x0
 *(SORT_BY_ALIGNMENT(.rela.plt))
                [!provide]                        PROVIDE (__rela_iplt_start = .)
 *(SORT_BY_ALIGNMENT(.rela.iplt))
                [!provide]                        PROVIDE (__rela_iplt_end = .)

.rel.dyn
 *(SORT_BY_ALIGNMENT(.rel.*))

.rela.dyn
 *(SORT_BY_ALIGNMENT(.rela.*))
                0x0000000000000040                _image_drom_start = LOADADDR (rodata)
                0x00000000000011bc                _image_drom_size = ((LOADADDR (_RODATA_SECTION_END) + SIZEOF (_RODATA_SECTION_END)) - _image_drom_start)
                0x000000003f400040                _image_drom_vaddr = ADDR (rodata)

rodata          0x000000003f400040     0x1100 load address 0x0000000000000040
                0x000000003f400040                __rodata_region_start = ABSOLUTE (.)
                0x000000003f400040                . = ALIGN (0x4)
                0x000000003f400040                . = ALIGN (0x4)
 *(SORT_BY_ALIGNMENT(EXCLUDE_FILE(*libzephyr.a:spi_flash_rom_patch.* *libdrivers__serial.a:uart_esp32.* *libdrivers__flash.a:flash_esp32.* *libzephyr.a:loader.* *libzephyr.a:log_output.* *libdrivers__flash.a:esp32_mp.* *libzephyr.a:log_backend_uart.* *libzephyr.a:log_core.* *libzephyr.a:cbprintf_complete* *libkernel.a:init.* *libkernel.a:fatal.* *libarch__xtensa__core.a:*) .rodata))
 .rodata        0x000000003f400040        0x4 zephyr/libzephyr.a(clk.c.obj)
 .rodata        0x000000003f400044        0x8 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 *(SORT_BY_ALIGNMENT(EXCLUDE_FILE(*libzephyr.a:spi_flash_rom_patch.* *libdrivers__serial.a:uart_esp32.* *libdrivers__flash.a:flash_esp32.* *libzephyr.a:loader.* *libzephyr.a:log_output.* *libdrivers__flash.a:esp32_mp.* *libzephyr.a:log_backend_uart.* *libzephyr.a:log_core.* *libzephyr.a:cbprintf_complete* *libkernel.a:init.* *libkernel.a:fatal.* *libarch__xtensa__core.a:*) .rodata.*))
 .rodata.sw     0x000000003f40004c        0x8 app/libapp.a(main.c.obj)
 .rodata.led    0x000000003f400054        0x8 app/libapp.a(main.c.obj)
 .rodata.cbvprintf_package
                0x000000003f40005c       0xbc zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .rodata.GPIO_PIN_MUX_REG
                0x000000003f400118       0xa0 zephyr/libzephyr.a(gpio_periph.c.obj)
                0x000000003f400118                GPIO_PIN_MUX_REG
 .rodata.rtc_io_desc
                0x000000003f4001b8      0x3f0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
                0x000000003f4001b8                rtc_io_desc
 .rodata.rtc_io_num_map
                0x000000003f4005a8       0xa0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
                0x000000003f4005a8                rtc_io_num_map
 .rodata.periph_ll_get_rst_en_mask
                0x000000003f400648       0x84 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .rodata.CSWTCH$6
                0x000000003f4006cc       0x84 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .rodata.interrupt_descriptor_table
                0x000000003f400750      0x200 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .rodata.esp_reset_reason_init
                0x000000003f400950       0x20 zephyr/libzephyr.a(reset_reason.c.obj)
 .rodata.CSWTCH$7
                0x000000003f400970       0x84 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.esp32_clock_config0
                0x000000003f4009f4       0x10 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.clock_control_esp32_api
                0x000000003f400a04       0x1c zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.entropy_esp32_api_funcs
                0x000000003f400a20        0x8 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .rodata.gpio_esp32_driver_api
                0x000000003f400a28       0x24 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .rodata.esp32_gpio_ports_addrs
                0x000000003f400a4c        0x8 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .rodata.__l_vfprintf
                0x000000003f400a54       0x90 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .rodata.button_action_work_handler.str1.1
                0x000000003f400ae4       0x2a app/libapp.a(main.c.obj)
 .rodata.main.str1.1
                0x000000003f400b0e       0x6f app/libapp.a(main.c.obj)
 .rodata.str1.1
                0x000000003f400b7d        0x5 app/libapp.a(main.c.obj)
 .rodata.cbprintf_package_convert.str1.1
                0x000000003f400b82       0xa3 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .rodata.str1.1
                0x000000003f400c25       0x11 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .rodata.str1.1
                0x000000003f400c36        0x9 zephyr/libzephyr.a(log_mgmt.c.obj)
 .rodata.z_impl_z_log_msg_static_create.str1.1
                0x000000003f400c3f       0x3f zephyr/libzephyr.a(log_msg.c.obj)
 .rodata.select_rtc_slow_clk.str1.1
                0x000000003f400c7e       0x4c zephyr/libzephyr.a(clk.c.obj)
                                         0x50 (size before relaxing)
 .rodata.rtc_clk_cpu_freq_to_pll_mhz.str1.1
                0x000000003f400cca       0x26 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.rtc_clk_cpu_freq_get_config.str1.1
                0x000000003f400cf0       0x30 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$54
                0x000000003f400d20       0x11 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$52
                0x000000003f400d31       0x11 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$51
                0x000000003f400d42       0x11 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$50
                0x000000003f400d53       0x11 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$49
                0x000000003f400d64       0x11 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$48
                0x000000003f400d75       0x11 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$47
                0x000000003f400d86       0x11 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.rtc_clk_cal_internal.str1.1
                0x000000003f400d97       0x47 zephyr/libzephyr.a(rtc_time.c.obj)
 .rodata.rtc_clk_xtal_freq_estimate.str1.1
                0x000000003f400dde       0xc2 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .rodata.rtc_clk_init.str1.1
                0x000000003f400ea0       0xb8 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .rodata.esp_timer_init.str1.1
                0x000000003f400f58       0x24 zephyr/libzephyr.a(esp_timer.c.obj)
 .rodata.abort.str1.1
                0x000000003f400f7c        0x9 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .rodata.default_intr_handler.str1.1
                0x000000003f400f85       0x23 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .rodata.CSWTCH$269
                0x000000003f400fa8        0x6 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .rodata.str1.1
                0x000000003f400fae        0xb zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .rodata.str1.1
                0x000000003f400fb9        0xd zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.xtal_freq
                0x000000003f400fc6        0x4 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.str1.1
                0x000000003f400fca        0xe zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .rodata.gpio_esp32_config.str1.1
                0x000000003f400fd8       0x6b zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .rodata.str1.1
                0x000000003f401043       0x27 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .rodata.boot_banner.str1.1
                0x000000003f40106a       0x42 zephyr/kernel/libkernel.a(banner.c.obj)
 .rodata.k_sys_work_q_init.str1.1
                0x000000003f4010ac        0x9 zephyr/kernel/libkernel.a(system_work_q.c.obj)
 .rodata.__l_vfprintf.str1.1
                0x000000003f4010b5        0xf /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 *(SORT_BY_ALIGNMENT(.irom1.text))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.r.*))
 *(SORT_BY_ALIGNMENT(.rodata1))
                0x000000003f4010c4                __XT_EXCEPTION_TABLE_ = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.xt_except_table))
 *(SORT_BY_ALIGNMENT(.gcc_except_table) SORT_BY_ALIGNMENT(.gcc_except_table.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.e.*))
 *(SORT_BY_ALIGNMENT(.gnu.version_r))
                0x000000003f4010c4                . = ((. + 0x3) & 0xfffffffffffffffc)
                0x000000003f4010c4                __eh_frame = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.eh_frame))
 .eh_frame      0x000000003f4010c4       0x28 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .eh_frame      0x000000003f4010ec       0x28 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .eh_frame      0x000000003f401114       0x28 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
                0x000000003f401140                . = ((. + 0x7) & 0xfffffffffffffffc)
 *fill*         0x000000003f40113c        0x4 
                0x000000003f401140                __XT_EXCEPTION_DESCS_ = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.xt_except_desc))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.h.*))
                0x000000003f401140                __XT_EXCEPTION_DESCS_END__ = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.xt_except_desc_end))
 *(SORT_BY_ALIGNMENT(.dynamic))
 *(SORT_BY_ALIGNMENT(.gnu.version_d))
                0x000000003f401140                . = ALIGN (0x4)
                0x000000003f401140                __rodata_region_end = ABSOLUTE (.)
                0x000000003f401140                _lit4_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(*.lit4))
 *(SORT_BY_ALIGNMENT(.lit4.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.lit4.*))
                0x000000003f401140                _lit4_end = ABSOLUTE (.)
                0x000000003f401140                . = ALIGN (0x4)
 *(SORT_BY_ALIGNMENT(.rodata_wlog))
 *(SORT_BY_ALIGNMENT(.rodata_wlog*))
                0x000000003f401140                . = ALIGN (0x4)

initlevel       0x000000003f401140       0x58 load address 0x0000000000001140
                0x000000003f401140                __init_start = .
                0x000000003f401140                __init_EARLY_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_EARLY?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_EARLY??_*)))
                0x000000003f401140                __init_PRE_KERNEL_1_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_1?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_1??_*)))
 .z_init_PRE_KERNEL_130_00005_
                0x000000003f401140        0x8 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .z_init_PRE_KERNEL_130_0_
                0x000000003f401148        0x8 zephyr/kernel/libkernel.a(kheap.c.obj)
 .z_init_PRE_KERNEL_140_00010_
                0x000000003f401150        0x8 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .z_init_PRE_KERNEL_140_00078_
                0x000000003f401158        0x8 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .z_init_PRE_KERNEL_150_00064_
                0x000000003f401160        0x8 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .z_init_PRE_KERNEL_150_00065_
                0x000000003f401168        0x8 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .z_init_PRE_KERNEL_160_0_
                0x000000003f401170        0x8 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                0x000000003f401178                __init_PRE_KERNEL_2_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_2?_*)))
 .z_init_PRE_KERNEL_20_0_
                0x000000003f401178        0x8 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_2??_*)))
                0x000000003f401180                __init_POST_KERNEL_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_POST_KERNEL?_*)))
 .z_init_POST_KERNEL0_0_
                0x000000003f401180        0x8 zephyr/libzephyr.a(log_core.c.obj)
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_POST_KERNEL??_*)))
 .z_init_POST_KERNEL40_0_
                0x000000003f401188        0x8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .z_init_POST_KERNEL40_0_
                0x000000003f401190        0x8 zephyr/kernel/libkernel.a(system_work_q.c.obj)
                0x000000003f401198                __init_APPLICATION_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_APPLICATION?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_APPLICATION??_*)))
                0x000000003f401198                __init_SMP_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_SMP?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_SMP??_*)))
                0x000000003f401198                __init_end = .

device_area     0x000000003f401198       0x64 load address 0x0000000000001198
                0x000000003f401198                _device_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._device.static.*_?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._device.static.*_??_*)))
 ._device.static.1_30_
                0x000000003f401198       0x14 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                0x000000003f401198                __device_dts_ord_5
 ._device.static.1_40_
                0x000000003f4011ac       0x28 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                0x000000003f4011ac                __device_dts_ord_78
                0x000000003f4011c0                __device_dts_ord_10
 ._device.static.1_50_
                0x000000003f4011d4       0x14 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
                0x000000003f4011d4                __device_dts_ord_64
 ._device.static.1_50_
                0x000000003f4011e8       0x14 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                0x000000003f4011e8                __device_dts_ord_65
                0x000000003f4011fc                _device_list_end = .

initlevel_error
                0x000000000000003c        0x0
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_[_A-Z0-9]*)))
                0x0000000000000001                ASSERT ((SIZEOF (initlevel_error) == 0x0), Undefined initialization levels used.)

app_shmem_regions
                0x000000003f4011fc        0x0 load address 0x00000000000011fc
                0x000000003f4011fc                __app_shmem_regions_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.app_regions.*)))
                0x000000003f4011fc                __app_shmem_regions_end = .

k_p4wq_initparam_area
                0x000000003f4011fc        0x0 load address 0x00000000000011fc
                0x000000003f4011fc                _k_p4wq_initparam_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_p4wq_initparam.static.*)))
                0x000000003f4011fc                _k_p4wq_initparam_list_end = .

_static_thread_data_area
                0x000000003f4011fc        0x0 load address 0x00000000000011fc
                0x000000003f4011fc                __static_thread_data_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.__static_thread_data.static.*)))
                0x000000003f4011fc                __static_thread_data_list_end = .

device_deps     0x000000003f4011fc        0x0 load address 0x00000000000011fc
                0x000000003f4011fc                __device_deps_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.__device_deps_pass2*)))
                0x000000003f4011fc                __device_deps_end = .

ztest           0x000000003f4011fc        0x0 load address 0x00000000000011fc
                0x000000003f4011fc                _ztest_expected_result_entry_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_expected_result_entry.static.*)))
                0x000000003f4011fc                _ztest_expected_result_entry_list_end = .
                0x000000003f4011fc                _ztest_suite_node_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_suite_node.static.*)))
                0x000000003f4011fc                _ztest_suite_node_list_end = .
                0x000000003f4011fc                _ztest_unit_test_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_unit_test.static.*)))
                0x000000003f4011fc                _ztest_unit_test_list_end = .
                0x000000003f4011fc                _ztest_test_rule_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_test_rule.static.*)))
                0x000000003f4011fc                _ztest_test_rule_list_end = .

bt_l2cap_fixed_chan_area
                0x000000003f4011fc        0x0 load address 0x00000000000011fc
                0x000000003f4011fc                _bt_l2cap_fixed_chan_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._bt_l2cap_fixed_chan.static.*)))
                0x000000003f4011fc                _bt_l2cap_fixed_chan_list_end = .

bt_gatt_service_static_area
                0x000000003f4011fc        0x0 load address 0x00000000000011fc
                0x000000003f4011fc                _bt_gatt_service_static_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._bt_gatt_service_static.static.*)))
                0x000000003f4011fc                _bt_gatt_service_static_list_end = .

tracing_backend_area
                0x000000003f4011fc        0x0 load address 0x00000000000011fc
                0x000000003f4011fc                _tracing_backend_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._tracing_backend.static.*)))
                0x000000003f4011fc                _tracing_backend_list_end = .

zephyr_dbg_info
 *(SORT_BY_ALIGNMENT(.dbg_thread_info))

symbol_to_keep  0x000000003f4011fc        0x0 load address 0x00000000000011fc
                0x000000003f4011fc                __symbol_to_keep_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.symbol_to_keep*)))
                0x000000003f4011fc                __symbol_to_keep_end = .

shell_area      0x000000003f4011fc        0x0 load address 0x00000000000011fc
                0x000000003f4011fc                _shell_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell.static.*)))
                0x000000003f4011fc                _shell_list_end = .

shell_root_cmds_area
                0x000000003f4011fc        0x0 load address 0x00000000000011fc
                0x000000003f4011fc                _shell_root_cmds_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell_root_cmds.static.*)))
                0x000000003f4011fc                _shell_root_cmds_list_end = .

shell_subcmds_area
                0x000000003f4011fc        0x0 load address 0x00000000000011fc
                0x000000003f4011fc                _shell_subcmds_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell_subcmds.static.*)))
                0x000000003f4011fc                _shell_subcmds_list_end = .

shell_dynamic_subcmds_area
                0x000000003f4011fc        0x0 load address 0x00000000000011fc
                0x000000003f4011fc                _shell_dynamic_subcmds_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell_dynamic_subcmds.static.*)))
                0x000000003f4011fc                _shell_dynamic_subcmds_list_end = .

cfb_font_area   0x000000003f4011fc        0x0 load address 0x00000000000011fc
                0x000000003f4011fc                _cfb_font_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._cfb_font.static.*)))
                0x000000003f4011fc                _cfb_font_list_end = .

.intList        0x000000003f4011fc       0x18 load address 0x000000003ebfe010
 *(SORT_BY_ALIGNMENT(.irq_info*))
 .irq_info      0x000000003f4011fc        0x8 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
                0x000000003f4011fc                _iheader
 *(SORT_BY_ALIGNMENT(.intList*))
 .intList       0x000000003f401204       0x10 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)

_RODATA_SECTION_END
                0x000000003f401214        0x0 load address 0x00000000000011fc
                0x000000003f401214                . = ALIGN (0x4)
                0x000000003f401214                _image_rodata_end = ABSOLUTE (.)
                0x00000000000011fc                _image_dram_start = LOADADDR (.dram0.data)
                0x0000000000000978                _image_dram_size = ((LOADADDR (.dram0.end) + SIZEOF (.dram0.end)) - _image_dram_start)
                0x000000003ffb0000                _image_dram_vaddr = ADDR (.dram0.data)

.dram0.data     0x000000003ffb0000      0x7ac load address 0x00000000000011fc
                0x000000003ffb0000                __data_start = ABSOLUTE (.)
                0x000000003ffb0000                _btdm_data_start = ABSOLUTE (.)
 *libbtdm_app.a:(SORT_BY_ALIGNMENT(.data) SORT_BY_ALIGNMENT(.data.*))
                0x000000003ffb0000                . = ALIGN (0x4)
                0x000000003ffb0000                _btdm_data_end = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.data))
 *(SORT_BY_ALIGNMENT(.data.*))
 .data.button_action_work
                0x000000003ffb0000       0x10 app/libapp.a(main.c.obj)
                0x000000003ffb0000                button_action_work
 .data._char_out
                0x000000003ffb0010        0x4 zephyr/libzephyr.a(printk.c.obj)
                0x000000003ffb0010                _char_out
 .data.timestamp_func
                0x000000003ffb0014        0x4 zephyr/libzephyr.a(log_core.c.obj)
 .data.backend_cb_log_backend_uart
                0x000000003ffb0018        0x8 zephyr/libzephyr.a(log_backend_uart.c.obj)
 .data.esp_log_default_level
                0x000000003ffb0020        0x4 zephyr/libzephyr.a(log.c.obj)
                0x000000003ffb0020                esp_log_default_level
 .data.__stdout
                0x000000003ffb0024       0x10 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .data.gpio_config_1
                0x000000003ffb0034       0x10 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .data.gpio_config_0
                0x000000003ffb0044       0x10 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .data.uart_esp32_data_0
                0x000000003ffb0054        0xc zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .data.timeout_list
                0x000000003ffb0060        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.d.*))
 *(SORT_BY_ALIGNMENT(.data1))
 *(SORT_BY_ALIGNMENT(.sdata))
 *(SORT_BY_ALIGNMENT(.sdata.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.s.*))
 *(SORT_BY_ALIGNMENT(.sdata2))
 *(SORT_BY_ALIGNMENT(.sdata2.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.s2.*))
 *libarch__xtensa__core.a:(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.CSWTCH$3
                0x000000003ffb0068      0x104 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .rodata.xtensa_exccause.str1.1
                0x000000003ffb016c       0x11 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .rodata.str1.1
                0x000000003ffb017d      0x1c9 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .rodata.z_irq_spurious.str1.1
                0x000000003ffb0346       0x2d zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .rodata.xtensa_dump_stack.str1.1
                0x000000003ffb0373       0xa9 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .rodata.xtensa_excint1_c.str1.1
                0x000000003ffb041c       0xae zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                         0xaf (size before relaxing)
 .rodata.xtensa_backtrace_print.str1.1
                0x000000003ffb04ca       0x3f zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 *libkernel.a:fatal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003ffb0509        0x3 
 .rodata.CSWTCH$403
                0x000000003ffb050c       0x14 zephyr/kernel/libkernel.a(fatal.c.obj)
 .rodata.k_sys_fatal_error_handler.str1.1
                0x000000003ffb0520        0xf zephyr/kernel/libkernel.a(fatal.c.obj)
 .rodata.z_fatal_error.str1.1
                0x000000003ffb052f       0x56 zephyr/kernel/libkernel.a(fatal.c.obj)
 .rodata.str1.1
                0x000000003ffb0585       0x4a zephyr/kernel/libkernel.a(fatal.c.obj)
 *libkernel.a:init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003ffb05cf        0x1 
 .rodata.levels$0
                0x000000003ffb05d0       0x18 zephyr/kernel/libkernel.a(init.c.obj)
 .rodata.z_cstart.str1.1
                0x000000003ffb05e8        0x5 zephyr/kernel/libkernel.a(init.c.obj)
 .rodata.str1.1
                0x000000003ffb05ed        0x3 zephyr/kernel/libkernel.a(init.c.obj)
 *libzephyr.a:cbprintf_complete*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:log_core.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.mpsc_config
                0x000000003ffb05f0       0x14 zephyr/libzephyr.a(log_core.c.obj)
 .rodata.format_table
                0x000000003ffb0604       0x10 zephyr/libzephyr.a(log_core.c.obj)
 .rodata.enable_logger.str1.1
                0x000000003ffb0614        0x8 zephyr/libzephyr.a(log_core.c.obj)
 .rodata.str1.1
                0x000000003ffb061c        0x4 zephyr/libzephyr.a(log_core.c.obj)
 *libzephyr.a:log_backend_uart.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.lbu_cb_ctx
                0x000000003ffb0620        0x8 zephyr/libzephyr.a(log_backend_uart.c.obj)
 .rodata.lbu_output
                0x000000003ffb0628       0x10 zephyr/libzephyr.a(log_backend_uart.c.obj)
 .rodata.log_backend_uart_api
                0x000000003ffb0638       0x1c zephyr/libzephyr.a(log_backend_uart.c.obj)
                0x000000003ffb0638                log_backend_uart_api
 .rodata.str1.1
                0x000000003ffb0654       0x1a zephyr/libzephyr.a(log_backend_uart.c.obj)
 *libzephyr.a:log_output.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003ffb066e        0x2 
 .rodata.colors
                0x000000003ffb0670       0x14 zephyr/libzephyr.a(log_output.c.obj)
 .rodata.severity
                0x000000003ffb0684       0x14 zephyr/libzephyr.a(log_output.c.obj)
 .rodata.newline_print.str1.1
                0x000000003ffb0698        0x4 zephyr/libzephyr.a(log_output.c.obj)
                                          0x5 (size before relaxing)
 .rodata.log_output_process.str1.1
                0x000000003ffb0698       0x4c zephyr/libzephyr.a(log_output.c.obj)
                                         0x51 (size before relaxing)
 .rodata.log_output_dropped_process.str1.1
                0x000000003ffb06e4       0x4c zephyr/libzephyr.a(log_output.c.obj)
                                          0x3 (size before relaxing)
 .rodata.postfix$0
                0x000000003ffb06e4       0x1c zephyr/libzephyr.a(log_output.c.obj)
 .rodata.prefix$1
                0x000000003ffb0700        0xc zephyr/libzephyr.a(log_output.c.obj)
 .rodata.str1.1
                0x000000003ffb070c       0x20 zephyr/libzephyr.a(log_output.c.obj)
 *libzephyr.a:loader.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libdrivers__flash.a:flash_esp32.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:spi_flash_rom_patch.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libdrivers__serial.a:uart_esp32.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.__pinctrl_dev_config__device_dts_ord_65
                0x000000003ffb072c        0x8 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .rodata.__pinctrl_states__device_dts_ord_65
                0x000000003ffb0734        0x8 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .rodata.__pinctrl_state_pins_0__device_dts_ord_65
                0x000000003ffb073c       0x10 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .rodata.uart_esp32_init.str1.1
                0x000000003ffb074c       0x1c zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .rodata.str1.1
                0x000000003ffb0768       0x19 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *(SORT_BY_ALIGNMENT(.jcr))
 *(SORT_BY_ALIGNMENT(.dram1) SORT_BY_ALIGNMENT(.dram1.*))
 *fill*         0x000000003ffb0781        0x3 
 .dram1.5       0x000000003ffb0784       0x14 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .dram1.4       0x000000003ffb0798       0x14 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                0x000000003ffb07ac                . = ALIGN (0x4)

sw_isr_table    0x000000003ffb07ac      0x100 load address 0x00000000000019a8
                0x000000003ffb07ac                . = ALIGN (0x4)
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.sw_isr_table*))
 .gnu.linkonce.sw_isr_table
                0x000000003ffb07ac      0x100 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
                0x000000003ffb07ac                _sw_isr_table

device_states   0x000000003ffb08ac        0xa load address 0x0000000000001aa8
                0x000000003ffb08ac                __device_states_start = .
 *(SORT_BY_ALIGNMENT(.z_devstate))
 .z_devstate    0x000000003ffb08ac        0x2 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .z_devstate    0x000000003ffb08ae        0x2 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .z_devstate    0x000000003ffb08b0        0x4 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .z_devstate    0x000000003ffb08b4        0x2 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *(SORT_BY_ALIGNMENT(.z_devstate.*))
                0x000000003ffb08b6                __device_states_end = .

log_mpsc_pbuf_area
                0x000000003ffb08b8       0x38 load address 0x0000000000001ab4
                0x000000003ffb08b8                _log_mpsc_pbuf_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_mpsc_pbuf.static.*)))
 ._log_mpsc_pbuf.static.log_buffer_
                0x000000003ffb08b8       0x38 zephyr/libzephyr.a(log_core.c.obj)
                0x000000003ffb08f0                _log_mpsc_pbuf_list_end = .

log_msg_ptr_area
                0x000000003ffb08f0        0x4 load address 0x0000000000001aec
                0x000000003ffb08f0                _log_msg_ptr_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_msg_ptr.static.*)))
 ._log_msg_ptr.static.log_msg_ptr_
                0x000000003ffb08f0        0x4 zephyr/libzephyr.a(log_core.c.obj)
                0x000000003ffb08f4                _log_msg_ptr_list_end = .

log_dynamic_area
                0x000000003ffb08f4        0x0 load address 0x0000000000001af0
                0x000000003ffb08f4                _log_dynamic_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_dynamic.static.*)))
                0x000000003ffb08f4                _log_dynamic_list_end = .

k_timer_area    0x000000003ffb08f4        0x0 load address 0x0000000000001af0
                0x000000003ffb08f4                _k_timer_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_timer.static.*)))
                0x000000003ffb08f4                _k_timer_list_end = .

k_mem_slab_area
                0x000000003ffb08f4        0x0 load address 0x0000000000001af0
                0x000000003ffb08f4                _k_mem_slab_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_mem_slab.static.*)))
                0x000000003ffb08f4                _k_mem_slab_list_end = .

k_heap_area     0x000000003ffb08f4       0x14 load address 0x0000000000001af0
                0x000000003ffb08f4                _k_heap_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_heap.static.*)))
 ._k_heap.static._system_heap_
                0x000000003ffb08f4       0x14 zephyr/kernel/libkernel.a(mempool.c.obj)
                0x000000003ffb08f4                _system_heap
                0x000000003ffb0908                _k_heap_list_end = .

k_mutex_area    0x000000003ffb0908        0x0 load address 0x0000000000001b04
                0x000000003ffb0908                _k_mutex_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_mutex.static.*)))
                0x000000003ffb0908                _k_mutex_list_end = .

k_stack_area    0x000000003ffb0908        0x0 load address 0x0000000000001b04
                0x000000003ffb0908                _k_stack_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_stack.static.*)))
                0x000000003ffb0908                _k_stack_list_end = .

k_msgq_area     0x000000003ffb0908        0x0 load address 0x0000000000001b04
                0x000000003ffb0908                _k_msgq_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_msgq.static.*)))
                0x000000003ffb0908                _k_msgq_list_end = .

k_mbox_area     0x000000003ffb0908        0x0 load address 0x0000000000001b04
                0x000000003ffb0908                _k_mbox_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_mbox.static.*)))
                0x000000003ffb0908                _k_mbox_list_end = .

k_pipe_area     0x000000003ffb0908        0x0 load address 0x0000000000001b04
                0x000000003ffb0908                _k_pipe_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_pipe.static.*)))
                0x000000003ffb0908                _k_pipe_list_end = .

k_sem_area      0x000000003ffb0908       0x10 load address 0x0000000000001b04
                0x000000003ffb0908                _k_sem_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_sem.static.*)))
 ._k_sem.static.log_process_thread_sem_
                0x000000003ffb0908       0x10 zephyr/libzephyr.a(log_core.c.obj)
                0x000000003ffb0908                log_process_thread_sem
                0x000000003ffb0918                _k_sem_list_end = .

k_event_area    0x000000003ffb0918        0x0 load address 0x0000000000001b14
                0x000000003ffb0918                _k_event_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_event.static.*)))
                0x000000003ffb0918                _k_event_list_end = .

k_queue_area    0x000000003ffb0918        0x0 load address 0x0000000000001b14
                0x000000003ffb0918                _k_queue_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_queue.static.*)))
                0x000000003ffb0918                _k_queue_list_end = .

k_fifo_area     0x000000003ffb0918        0x0 load address 0x0000000000001b14
                0x000000003ffb0918                _k_fifo_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_fifo.static.*)))
                0x000000003ffb0918                _k_fifo_list_end = .

k_lifo_area     0x000000003ffb0918        0x0 load address 0x0000000000001b14
                0x000000003ffb0918                _k_lifo_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_lifo.static.*)))
                0x000000003ffb0918                _k_lifo_list_end = .

k_condvar_area  0x000000003ffb0918        0x0 load address 0x0000000000001b14
                0x000000003ffb0918                _k_condvar_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_condvar.static.*)))
                0x000000003ffb0918                _k_condvar_list_end = .

sys_mem_blocks_ptr_area
                0x000000003ffb0918        0x0 load address 0x0000000000001b14
                0x000000003ffb0918                _sys_mem_blocks_ptr_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._sys_mem_blocks_ptr.static.*)))
                0x000000003ffb0918                _sys_mem_blocks_ptr_list_end = .

net_buf_pool_area
                0x000000003ffb0918        0x0 load address 0x0000000000001b14
                0x000000003ffb0918                _net_buf_pool_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._net_buf_pool.static.*)))
                0x000000003ffb0918                _net_buf_pool_list_end = .

log_strings_area
                0x000000003ffb0918        0x0 load address 0x0000000000001b14
                0x000000003ffb0918                _log_strings_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_strings.static.*)))
                0x000000003ffb0918                _log_strings_list_end = .

log_const_area  0x000000003ffb0918       0x50 load address 0x0000000000001b14
                0x000000003ffb0918                _log_const_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_const.static.*)))
 ._log_const.static.log_const_cbprintf_package_
                0x000000003ffb0918        0x8 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
                0x000000003ffb0918                log_const_cbprintf_package
 ._log_const.static.log_const_esp32_intc_
                0x000000003ffb0920        0x8 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                0x000000003ffb0920                log_const_esp32_intc
 ._log_const.static.log_const_esp_timer_
                0x000000003ffb0928        0x8 zephyr/libzephyr.a(esp_timer.c.obj)
                0x000000003ffb0928                log_const_esp_timer
 ._log_const.static.log_const_gpio_esp32_
                0x000000003ffb0930        0x8 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                0x000000003ffb0930                log_const_gpio_esp32
 ._log_const.static.log_const_log_
                0x000000003ffb0938        0x8 zephyr/libzephyr.a(log_core.c.obj)
                0x000000003ffb0938                log_const_log
 ._log_const.static.log_const_log_mgmt_
                0x000000003ffb0940        0x8 zephyr/libzephyr.a(log_mgmt.c.obj)
                0x000000003ffb0940                log_const_log_mgmt
 ._log_const.static.log_const_log_uart_
                0x000000003ffb0948        0x8 zephyr/libzephyr.a(log_backend_uart.c.obj)
                0x000000003ffb0948                log_const_log_uart
 ._log_const.static.log_const_main_
                0x000000003ffb0950        0x8 app/libapp.a(main.c.obj)
                0x000000003ffb0950                log_const_main
 ._log_const.static.log_const_os_
                0x000000003ffb0958        0x8 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003ffb0958                log_const_os
 ._log_const.static.log_const_uart_esp32_
                0x000000003ffb0960        0x8 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                0x000000003ffb0960                log_const_uart_esp32
                0x000000003ffb0968                _log_const_list_end = .

log_backend_area
                0x000000003ffb0968       0x10 load address 0x0000000000001b64
                0x000000003ffb0968                _log_backend_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_backend.static.*)))
 ._log_backend.static.log_backend_uart_
                0x000000003ffb0968       0x10 zephyr/libzephyr.a(log_backend_uart.c.obj)
                0x000000003ffb0978                _log_backend_list_end = .

log_link_area   0x000000003ffb0978        0x0 load address 0x0000000000001b74
                0x000000003ffb0978                _log_link_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_link.static.*)))
                0x000000003ffb0978                _log_link_list_end = .

.dram0.end      0x000000003ffb0978        0x0 load address 0x0000000000001b74
                0x000000003ffb0978                . = ALIGN (0x4)
                0x000000003ffb0978                . = ALIGN (0x4)
                0x000000003ffb2168                _end = ABSOLUTE (.)
                0x000000003ffb0978                __data_end = ABSOLUTE (.)
                0x0000000000001b74                _image_iram_start = LOADADDR (.iram0.vectors)
                0x000000000000411c                _image_iram_size = ((LOADADDR (text) + SIZEOF (text)) - _image_iram_start)
                0x0000000040080000                _image_iram_vaddr = ADDR (.iram0.vectors)

.iram0.vectors  0x0000000040080000      0x400 load address 0x0000000000001b74
                0x0000000040080000                _init_start = ABSOLUTE (.)
                0x0000000000000000                . = 0x0
 *(SORT_BY_ALIGNMENT(.WindowVectors.text))
 .WindowVectors.text
                0x0000000040080000      0x16a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
                0x0000000040080000                _WindowOverflow4
                0x0000000040080040                _WindowUnderflow4
                0x0000000040080050                _xt_alloca_exc
                0x0000000040080080                _WindowOverflow8
                0x00000000400800c0                _WindowUnderflow8
                0x0000000040080100                _WindowOverflow12
                0x0000000040080140                _WindowUnderflow12
                0x0000000000000180                . = 0x180
 *fill*         0x000000004008016a       0x16 
 *(SORT_BY_ALIGNMENT(.Level2InterruptVector.text))
 .Level2InterruptVector.text
                0x0000000040080180       0x29 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x0000000040080180                _Level2Vector
                0x00000000000001c0                . = 0x1c0
 *fill*         0x00000000400801a9       0x17 
 *(SORT_BY_ALIGNMENT(.Level3InterruptVector.text))
 .Level3InterruptVector.text
                0x00000000400801c0       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x00000000400801c0                _Level3Vector
                0x0000000000000200                . = 0x200
 *fill*         0x00000000400801e5       0x1b 
 *(SORT_BY_ALIGNMENT(.Level4InterruptVector.text))
 .Level4InterruptVector.text
                0x0000000040080200       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x0000000040080200                _Level4Vector
                0x0000000000000240                . = 0x240
 *fill*         0x0000000040080225       0x1b 
 *(SORT_BY_ALIGNMENT(.Level5InterruptVector.text))
 .Level5InterruptVector.text
                0x0000000040080240       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x0000000040080240                _Level5Vector
                0x0000000000000280                . = 0x280
 *fill*         0x0000000040080265       0x1b 
 *(SORT_BY_ALIGNMENT(.DebugExceptionVector.text))
 .DebugExceptionVector.text
                0x0000000040080280       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x0000000040080280                _Level6Vector
                0x00000000000002c0                . = 0x2c0
 *fill*         0x00000000400802a5       0x1b 
 *(SORT_BY_ALIGNMENT(.NMIExceptionVector.text))
 .NMIExceptionVector.text
                0x00000000400802c0       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x00000000400802c0                _Level7Vector
                0x0000000000000300                . = 0x300
 *fill*         0x00000000400802e5       0x1b 
 *(SORT_BY_ALIGNMENT(.KernelExceptionVector.text))
 .KernelExceptionVector.text
                0x0000000040080300        0x3 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x0000000040080300                _KernelExceptionVector
                0x0000000000000340                . = 0x340
 *fill*         0x0000000040080303       0x3d 
 *(SORT_BY_ALIGNMENT(.UserExceptionVector.text))
 .UserExceptionVector.text
                0x0000000040080340       0x16 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x0000000040080340                _Level1RealVector
                0x00000000000003c0                . = 0x3c0
 *fill*         0x0000000040080356       0x6a 
 *(SORT_BY_ALIGNMENT(.DoubleExceptionVector.text))
 .DoubleExceptionVector.text
                0x00000000400803c0        0x6 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x00000000400803c0                _DoubleExceptionVector
                0x0000000000000400                . = 0x400
 *fill*         0x00000000400803c6       0x3a 
 *(SORT_BY_ALIGNMENT(.*Vector.literal))
 *(SORT_BY_ALIGNMENT(.UserEnter.literal))
 *(SORT_BY_ALIGNMENT(.UserEnter.text))
                0x0000000040080400                . = ALIGN (0x10)
 *(SORT_BY_ALIGNMENT(.entry.text))
 *(SORT_BY_ALIGNMENT(.init.literal))
 *(.init)
                0x0000000040080400                _init_end = ABSOLUTE (.)
                0x0000000000000000                _iram_start = ABSOLUTE (0x0)

text            0x0000000040080400     0x3d1c load address 0x0000000000001f74
                0x0000000040080400                _iram_text_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.iram1) SORT_BY_ALIGNMENT(.iram1.*))
 .iram1.literal
                0x0000000040080400       0x10 zephyr/libzephyr.a(soc.c.obj)
                                         0x34 (size before relaxing)
 .iram1.11.literal
                0x0000000040080410        0x4 zephyr/libzephyr.a(soc.c.obj)
                                          0x8 (size before relaxing)
 .iram1.2.literal
                0x0000000040080414        0x8 zephyr/libzephyr.a(esp_clk.c.obj)
 .iram1.3.literal
                0x000000004008041c        0x4 zephyr/libzephyr.a(esp_clk.c.obj)
                                          0xc (size before relaxing)
 .iram1.5.literal
                0x0000000040080420        0x0 zephyr/libzephyr.a(esp_clk.c.obj)
                                          0x4 (size before relaxing)
 .iram1.2.literal
                0x0000000040080420        0x8 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.1.literal
                0x0000000040080428        0x4 zephyr/libzephyr.a(reset_reason.c.obj)
 .iram1.3.literal
                0x000000004008042c       0x1c zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .iram1.literal
                0x0000000040080448        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
                                          0x4 (size before relaxing)
 .iram1.5.literal
                0x0000000040080448        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x8 (size before relaxing)
 .iram1.8.literal
                0x0000000040080448        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x18 (size before relaxing)
 .iram1.4.literal
                0x000000004008044c        0x8 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x10 (size before relaxing)
 .literal.arch_cpu_idle
                0x0000000040080454        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                                          0x4 (size before relaxing)
 .literal.xtensa_exccause
                0x0000000040080454        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .literal.xtensa_fatal_error
                0x000000004008045c        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                          0xc (size before relaxing)
 .literal       0x000000004008045c        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                          0x8 (size before relaxing)
 .literal.z_irq_spurious
                0x0000000040080460        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                         0x10 (size before relaxing)
 .literal.arch_new_thread
                0x0000000040080468        0xc zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .literal.return_to
                0x0000000040080474        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_log_msg_static_create$constprop$0
                0x0000000040080474        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x4 (size before relaxing)
 .literal.xtensa_dump_stack
                0x0000000040080474       0x18 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                         0x34 (size before relaxing)
 .literal.xtensa_int2_c
                0x000000004008048c        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_int3_c
                0x0000000040080490        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0xc (size before relaxing)
 .literal.xtensa_int4_c
                0x0000000040080494        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_int5_c
                0x0000000040080494        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_int6_c
                0x0000000040080494        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x4 (size before relaxing)
 .literal.xtensa_int7_c
                0x0000000040080494        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_excint1_c
                0x0000000040080494       0x2c zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                         0x60 (size before relaxing)
 .literal.xtensa_cpu_process_stack_pc
                0x00000000400804c0        0xc zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .literal.xtensa_backtrace_get_next_frame
                0x00000000400804cc        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
                                         0x10 (size before relaxing)
 .literal.xtensa_backtrace_print
                0x00000000400804d4       0x14 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
                                         0x54 (size before relaxing)
 .literal.z_impl_k_busy_wait
                0x00000000400804e8        0x0 zephyr/kernel/libkernel.a(busy_wait.c.obj)
                                          0x8 (size before relaxing)
 .literal.k_sys_fatal_error_handler
                0x00000000400804e8        0x4 zephyr/kernel/libkernel.a(fatal.c.obj)
                                         0x14 (size before relaxing)
 .literal.z_fatal_error
                0x00000000400804ec       0x18 zephyr/kernel/libkernel.a(fatal.c.obj)
                                         0x38 (size before relaxing)
 .literal.z_sys_init_run_level
                0x0000000040080504        0x4 zephyr/kernel/libkernel.a(init.c.obj)
 .literal.bg_thread_main
                0x0000000040080508        0x8 zephyr/kernel/libkernel.a(init.c.obj)
                                         0x1c (size before relaxing)
 .literal.z_early_memset
                0x0000000040080510        0x0 zephyr/kernel/libkernel.a(init.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_bss_zero
                0x0000000040080510        0x8 zephyr/kernel/libkernel.a(init.c.obj)
                                          0xc (size before relaxing)
 .literal.z_init_cpu
                0x0000000040080518       0x14 zephyr/kernel/libkernel.a(init.c.obj)
                                         0x1c (size before relaxing)
 .literal.z_cstart
                0x000000004008052c        0xc zephyr/kernel/libkernel.a(init.c.obj)
                                         0x48 (size before relaxing)
 .literal.z_impl_k_thread_start
                0x0000000040080538        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_setup_new_thread
                0x0000000040080538        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_impl_k_thread_create
                0x0000000040080538        0x4 zephyr/kernel/libkernel.a(thread.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_init_static_threads
                0x000000004008053c        0x4 zephyr/kernel/libkernel.a(thread.c.obj)
                                         0x20 (size before relaxing)
 .literal.sliceable
                0x0000000040080540        0x8 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.slice_timeout
                0x0000000040080548        0xc zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.unpend_thread_no_timeout
                0x0000000040080554        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_reset_time_slice
                0x0000000040080554        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x20 (size before relaxing)
 .literal.z_swap_irqlock
                0x0000000040080558        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_swap
                0x0000000040080558        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.update_cache
                0x000000004008055c        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.move_thread_to_end_of_prio_q
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.ready_thread
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.unready_thread
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.add_to_waitq_locked
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.pend_locked
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_thread_halt
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x28 (size before relaxing)
 .literal.z_time_slice
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x14 (size before relaxing)
 .literal.z_ready_thread
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_impl_k_thread_suspend
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_unpend_thread_no_timeout
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_sched_wake_thread
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_thread_timeout
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_pend_curr
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_unpend1_no_timeout
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_unpend_first_thread
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_unpend_thread
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_reschedule
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_sched_start
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_reschedule_irqlock
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.k_sched_lock
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.k_sched_unlock
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_swap_next_thread
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_get_next_switch_handle
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_unpend_all
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_sched_init
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_impl_k_yield
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x18 (size before relaxing)
 .literal.z_tick_sleep
                0x0000000040080560        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x24 (size before relaxing)
 .literal.z_impl_k_sleep
                0x0000000040080560        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_impl_k_sched_current_thread_query
                0x0000000040080564        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_thread_abort
                0x0000000040080564        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_impl_k_thread_abort
                0x0000000040080564        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_sched_wake
                0x0000000040080564        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_sched_wait
                0x0000000040080564        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.idle  0x0000000040080564        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_impl_k_sem_give
                0x0000000040080564        0x4 zephyr/kernel/libkernel.a(sem.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_impl_k_sem_take
                0x0000000040080568        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
                                          0x8 (size before relaxing)
 .literal.notify_queue_locked$isra$0
                0x0000000040080568        0x0 zephyr/kernel/libkernel.a(work.c.obj)
                                          0x4 (size before relaxing)
 .literal.work_queue_main
                0x0000000040080568        0x8 zephyr/kernel/libkernel.a(work.c.obj)
                                         0x20 (size before relaxing)
 .literal.submit_to_queue_locked
                0x0000000040080570        0x0 zephyr/kernel/libkernel.a(work.c.obj)
                                          0xc (size before relaxing)
 .literal.z_work_submit_to_queue
                0x0000000040080570        0x0 zephyr/kernel/libkernel.a(work.c.obj)
                                          0x4 (size before relaxing)
 .literal.k_work_submit_to_queue
                0x0000000040080570        0x0 zephyr/kernel/libkernel.a(work.c.obj)
                                          0x8 (size before relaxing)
 .literal.k_work_submit
                0x0000000040080570        0x4 zephyr/kernel/libkernel.a(work.c.obj)
                                          0x8 (size before relaxing)
 .literal.k_work_queue_start
                0x0000000040080574        0x4 zephyr/kernel/libkernel.a(work.c.obj)
                                         0x10 (size before relaxing)
 .literal.elapsed
                0x0000000040080578        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x8 (size before relaxing)
 .literal.next_timeout
                0x000000004008057c        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x10 (size before relaxing)
 .literal.remove_timeout
                0x0000000040080584        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_add_timeout
                0x0000000040080584        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x14 (size before relaxing)
 .literal.z_abort_timeout
                0x0000000040080588        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.sys_clock_announce
                0x0000000040080588        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x1c (size before relaxing)
 .literal.sys_clock_tick_get
                0x0000000040080588        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x8 (size before relaxing)
 .literal.sys_clock_tick_get_32
                0x0000000040080588        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_impl_k_uptime_ticks
                0x0000000040080588        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.sys_timepoint_calc
                0x0000000040080588        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.sys_timepoint_timeout
                0x0000000040080588        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_timer_expiration_handler
                0x0000000040080588        0x4 zephyr/kernel/libkernel.a(timer.c.obj)
                                         0x18 (size before relaxing)
 .literal.z_impl_k_timer_start
                0x000000004008058c        0x0 zephyr/kernel/libkernel.a(timer.c.obj)
                                          0xc (size before relaxing)
 .literal.z_impl_k_timer_stop
                0x000000004008058c        0x0 zephyr/kernel/libkernel.a(timer.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_heap_aligned_alloc
                0x000000004008058c        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
                                          0x4 (size before relaxing)
 .literal.k_free
                0x000000004008058c        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
                                          0x4 (size before relaxing)
 .literal.k_aligned_alloc
                0x000000004008058c        0x4 zephyr/kernel/libkernel.a(mempool.c.obj)
                                          0x8 (size before relaxing)
 .literal.k_malloc
                0x0000000040080590        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
                                          0x4 (size before relaxing)
 .literal.k_thread_system_pool_assign
                0x0000000040080590        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
                                          0x4 (size before relaxing)
 .literal.boot_banner
                0x0000000040080590        0x4 zephyr/kernel/libkernel.a(banner.c.obj)
                                          0x8 (size before relaxing)
 .literal.k_heap_init
                0x0000000040080594        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
                                          0x4 (size before relaxing)
 .literal.statics_init
                0x0000000040080594        0x8 zephyr/kernel/libkernel.a(kheap.c.obj)
                                          0xc (size before relaxing)
 .literal.k_heap_aligned_alloc
                0x000000004008059c        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
                                         0x10 (size before relaxing)
 .literal.k_heap_free
                0x000000004008059c        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
                                          0xc (size before relaxing)
 .literal.k_sys_work_q_init
                0x000000004008059c        0x8 zephyr/kernel/libkernel.a(system_work_q.c.obj)
                                         0x10 (size before relaxing)
 .literal       0x00000000400805a4        0x4 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .literal.esp_log_early_timestamp
                0x00000000400805a8        0x4 zephyr/libzephyr.a(log_noos.c.obj)
 .literal.ccompare_isr
                0x00000000400805ac        0x8 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                          0xc (size before relaxing)
 .literal.sys_clock_set_timeout
                0x00000000400805b4        0xc zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                         0x14 (size before relaxing)
 .literal.sys_clock_elapsed
                0x00000000400805c0        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                          0x8 (size before relaxing)
 .literal.activate_foreach_backend
                0x00000000400805c0        0x4 zephyr/libzephyr.a(log_core.c.obj)
                                          0x8 (size before relaxing)
 .literal.enable_logger
                0x00000000400805c4       0x18 zephyr/libzephyr.a(log_core.c.obj)
                                         0x24 (size before relaxing)
 .literal.default_lf_get_timestamp
                0x00000000400805dc        0x0 zephyr/libzephyr.a(log_core.c.obj)
                                          0x8 (size before relaxing)
 .literal.log_process_thread_timer_expiry_fn
                0x00000000400805dc        0x4 zephyr/libzephyr.a(log_core.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_log_init
                0x00000000400805e0        0x8 zephyr/libzephyr.a(log_core.c.obj)
                                         0x18 (size before relaxing)
 .literal.log_format_func_t_get
                0x00000000400805e8        0x4 zephyr/libzephyr.a(log_core.c.obj)
 .literal.z_log_vprintk
                0x00000000400805ec        0x0 zephyr/libzephyr.a(log_core.c.obj)
                                          0x4 (size before relaxing)
 .literal.log_set_timestamp_func
                0x00000000400805ec        0x4 zephyr/libzephyr.a(log_core.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_log_notify_backend_enabled
                0x00000000400805f0        0x4 zephyr/libzephyr.a(log_core.c.obj)
                                          0xc (size before relaxing)
 .literal.z_log_dropped
                0x00000000400805f4        0x8 zephyr/libzephyr.a(log_core.c.obj)
 .literal.z_log_notify_drop
                0x00000000400805fc        0x0 zephyr/libzephyr.a(log_core.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_log_dropped_read_and_clear
                0x00000000400805fc        0x0 zephyr/libzephyr.a(log_core.c.obj)
                                          0x4 (size before relaxing)
 .literal.dropped_notify
                0x00000000400805fc        0x0 zephyr/libzephyr.a(log_core.c.obj)
                                          0xc (size before relaxing)
 .literal.z_log_msg_init
                0x00000000400805fc        0xc zephyr/libzephyr.a(log_core.c.obj)
                                         0x10 (size before relaxing)
 .literal.log_core_init
                0x0000000040080608        0x8 zephyr/libzephyr.a(log_core.c.obj)
                                         0x18 (size before relaxing)
 .literal.z_log_msg_alloc
                0x0000000040080610        0x0 zephyr/libzephyr.a(log_core.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_log_msg_local_claim
                0x0000000040080610        0x0 zephyr/libzephyr.a(log_core.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_log_msg_free
                0x0000000040080610        0x0 zephyr/libzephyr.a(log_core.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_log_msg_pending
                0x0000000040080610        0x0 zephyr/libzephyr.a(log_core.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_impl_log_process
                0x0000000040080610        0x4 zephyr/libzephyr.a(log_core.c.obj)
                                         0x30 (size before relaxing)
 .literal.z_impl_log_panic
                0x0000000040080614        0x0 zephyr/libzephyr.a(log_core.c.obj)
                                         0x14 (size before relaxing)
 .literal.log_process_thread_func
                0x0000000040080614        0x4 zephyr/libzephyr.a(log_core.c.obj)
                                         0x2c (size before relaxing)
 .literal.z_log_msg_post_finalize
                0x0000000040080618        0x0 zephyr/libzephyr.a(log_core.c.obj)
                                         0x24 (size before relaxing)
 .literal.z_log_msg_commit
                0x0000000040080618        0x0 zephyr/libzephyr.a(log_core.c.obj)
                                         0x10 (size before relaxing)
 .literal.printk
                0x0000000040080618        0x0 zephyr/libzephyr.a(printk.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_cbprintf_cpy
                0x0000000040080618        0x4 zephyr/libzephyr.a(log_msg.c.obj)
 .literal.z_log_msg_finalize
                0x000000004008061c        0x0 zephyr/libzephyr.a(log_msg.c.obj)
                                          0xc (size before relaxing)
 .literal.z_log_msg_simple_create
                0x000000004008061c        0x4 zephyr/libzephyr.a(log_msg.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_impl_z_log_msg_static_create
                0x0000000040080620       0x10 zephyr/libzephyr.a(log_msg.c.obj)
                                         0x28 (size before relaxing)
 .literal.z_impl_z_log_msg_simple_create_0
                0x0000000040080630        0x0 zephyr/libzephyr.a(log_msg.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_impl_z_log_msg_simple_create_1
                0x0000000040080630        0x0 zephyr/libzephyr.a(log_msg.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_impl_z_log_msg_simple_create_2
                0x0000000040080630        0x0 zephyr/libzephyr.a(log_msg.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_log_msg_runtime_vcreate
                0x0000000040080630        0x0 zephyr/libzephyr.a(log_msg.c.obj)
                                         0x10 (size before relaxing)
 .literal.console_out
                0x0000000040080630        0x4 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .literal.print_formatted
                0x0000000040080634        0x4 zephyr/libzephyr.a(log_output.c.obj)
                                          0x8 (size before relaxing)
 .literal.newline_print
                0x0000000040080638        0x8 zephyr/libzephyr.a(log_output.c.obj)
                                          0xc (size before relaxing)
 .literal.log_output_flush
                0x0000000040080640        0x0 zephyr/libzephyr.a(log_output.c.obj)
                                          0x4 (size before relaxing)
 .literal.out_func
                0x0000000040080640        0x0 zephyr/libzephyr.a(log_output.c.obj)
                                          0x4 (size before relaxing)
 .literal.cr_out_func
                0x0000000040080640        0x0 zephyr/libzephyr.a(log_output.c.obj)
                                          0x8 (size before relaxing)
 .literal.log_output_process
                0x0000000040080640       0x58 zephyr/libzephyr.a(log_output.c.obj)
                                         0xb4 (size before relaxing)
 .literal.log_output_msg_process
                0x0000000040080698        0x4 zephyr/libzephyr.a(log_output.c.obj)
                                          0xc (size before relaxing)
 .literal.log_output_dropped_process
                0x000000004008069c       0x10 zephyr/libzephyr.a(log_output.c.obj)
                                         0x20 (size before relaxing)
 .literal.log_output_timestamp_freq_set
                0x00000000400806ac        0x0 zephyr/libzephyr.a(log_output.c.obj)
                                          0xc (size before relaxing)
 .literal.panic
                0x00000000400806ac        0x0 zephyr/libzephyr.a(log_backend_uart.c.obj)
                                          0x4 (size before relaxing)
 .literal.dropped
                0x00000000400806ac        0x0 zephyr/libzephyr.a(log_backend_uart.c.obj)
                                          0x4 (size before relaxing)
 .literal.process
                0x00000000400806ac        0x0 zephyr/libzephyr.a(log_backend_uart.c.obj)
                                          0x4 (size before relaxing)
 .literal.char_out
                0x00000000400806ac        0x0 zephyr/libzephyr.a(log_backend_uart.c.obj)
                                          0x4 (size before relaxing)
 .literal.__start
                0x00000000400806ac        0x0 zephyr/libzephyr.a(loader.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_impl_zephyr_fputc
                0x00000000400806ac        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.picolibc_put
                0x00000000400806b0        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                                          0x4 (size before relaxing)
 .literal.__stdout_hook_install
                0x00000000400806b0        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                                          0x8 (size before relaxing)
 .literal.cbvprintf
                0x00000000400806b4        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                                          0xc (size before relaxing)
 .literal.snprintf
                0x00000000400806b8        0x4 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
                                          0xc (size before relaxing)
 .literal.__l_vfprintf
                0x00000000400806bc       0x14 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
                                         0x18 (size before relaxing)
 .iram1         0x00000000400806d0       0x45 zephyr/libzephyr.a(soc.c.obj)
                                         0x5d (size before relaxing)
                0x00000000400806d0                __esp_platform_start
 *fill*         0x0000000040080715        0x3 
 .iram1.11      0x0000000040080718       0x1b zephyr/libzephyr.a(soc.c.obj)
                0x0000000040080718                arch_printk_char_out
 *fill*         0x0000000040080733        0x1 
 .iram1.2       0x0000000040080734       0x10 zephyr/libzephyr.a(esp_clk.c.obj)
                0x0000000040080734                esp_clk_cpu_freq
 .iram1.3       0x0000000040080744       0x18 zephyr/libzephyr.a(esp_clk.c.obj)
                0x0000000040080744                esp_clk_apb_freq
 .iram1.5       0x000000004008075c        0xa zephyr/libzephyr.a(esp_clk.c.obj)
                0x000000004008075c                ets_update_cpu_frequency
 *fill*         0x0000000040080766        0x2 
 .iram1.2       0x0000000040080768       0x27 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                0x0000000040080768                regi2c_ctrl_write_reg
 *fill*         0x000000004008078f        0x1 
 .iram1.1       0x0000000040080790       0x1c zephyr/libzephyr.a(reset_reason.c.obj)
                0x0000000040080790                esp_reset_reason_get_hint
 .iram1.3       0x00000000400807ac       0x41 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 *fill*         0x00000000400807ed        0x3 
 .iram1         0x00000000400807f0       0x1a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
                0x00000000400807f0                xtensa_backtrace_get_start
 *fill*         0x000000004008080a        0x2 
 .iram1.5       0x000000004008080c       0x33 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x3a (size before relaxing)
 *fill*         0x000000004008083f        0x1 
 .iram1.8       0x0000000040080840       0xae zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0xb2 (size before relaxing)
                0x0000000040080840                esp_intr_disable
 *fill*         0x00000000400808ee        0x2 
 .iram1.4       0x00000000400808f0       0x11 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x17 (size before relaxing)
 *fill*         0x0000000040080901        0x0 
 *fill*         0x0000000040080901        0x0 
 *fill*         0x0000000040080901        0x0 
 *fill*         0x0000000040080901        0x0 
 *fill*         0x0000000040080901        0x0 
 *fill*         0x0000000040080901        0x0 
 *fill*         0x0000000040080901        0x0 
 *fill*         0x0000000040080901        0x3 
 .iram1.3       0x0000000040080904       0xa6 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400809aa        0x0 
 *(SORT_BY_ALIGNMENT(.iram0.literal) SORT_BY_ALIGNMENT(.iram.literal) SORT_BY_ALIGNMENT(.iram.text.literal) SORT_BY_ALIGNMENT(.iram0.text) SORT_BY_ALIGNMENT(.iram.text))
 *fill*         0x00000000400809aa        0x2 
 .iram0.text    0x00000000400809ac       0x2d zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x00000000400809ac                _Level1Vector
 *fill*         0x00000000400809d9        0x0 
 *libesp32.a:panic.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *librtc.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libarch__xtensa__core.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x00000000400809d9        0x3 
 .text.arch_cpu_idle
                0x00000000400809dc        0xb zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                                          0xe (size before relaxing)
                0x00000000400809dc                arch_cpu_idle
 *fill*         0x00000000400809e7        0x1 
 .text.xtensa_exccause
                0x00000000400809e8       0x17 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                0x00000000400809e8                xtensa_exccause
 *fill*         0x00000000400809ff        0x1 
 .text.xtensa_fatal_error
                0x0000000040080a00       0x26 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                         0x2e (size before relaxing)
                0x0000000040080a00                xtensa_fatal_error
 *fill*         0x0000000040080a26        0x2 
 .text          0x0000000040080a28      0x21c zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x0000000040080a28                xtensa_spill_reg_windows
                0x0000000040080a48                xtensa_save_high_regs
                0x0000000040080a90                xtensa_restore_high_regs
                0x0000000040080ac5                _restore_context
                0x0000000040080afc                xtensa_arch_except
                0x0000000040080aff                xtensa_arch_except_epc
                0x0000000040080b04                xtensa_arch_kernel_oops
                0x0000000040080b07                xtensa_arch_kernel_oops_epc
                0x0000000040080b0c                xtensa_switch
 .text.z_irq_spurious
                0x0000000040080c44       0x42 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                         0x46 (size before relaxing)
                0x0000000040080c44                z_irq_spurious
 *fill*         0x0000000040080c86        0x2 
 .text.arch_new_thread
                0x0000000040080c88       0x38 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
                0x0000000040080c88                arch_new_thread
 .text.return_to
                0x0000000040080cc0       0x14 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                         0x18 (size before relaxing)
 .text.z_log_msg_static_create$constprop$0
                0x0000000040080cd4       0x13 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 *fill*         0x0000000040080ce7        0x1 
 .text.xtensa_dump_stack
                0x0000000040080ce8      0x180 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                        0x194 (size before relaxing)
                0x0000000040080ce8                xtensa_dump_stack
 .text.xtensa_int2_c
                0x0000000040080e68       0x5a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040080e68                xtensa_int2_c
 *fill*         0x0000000040080ec2        0x2 
 .text.xtensa_int3_c
                0x0000000040080ec4       0x82 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040080ec4                xtensa_int3_c
 *fill*         0x0000000040080f46        0x2 
 .text.xtensa_int4_c
                0x0000000040080f48       0x6a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040080f48                xtensa_int4_c
 *fill*         0x0000000040080fb2        0x2 
 .text.xtensa_int5_c
                0x0000000040080fb4       0x5e zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040080fb4                xtensa_int5_c
 *fill*         0x0000000040081012        0x2 
 .text.xtensa_int6_c
                0x0000000040081014       0x15 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040081014                xtensa_int6_c
 *fill*         0x0000000040081029        0x3 
 .text.xtensa_int7_c
                0x000000004008102c       0x36 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x000000004008102c                xtensa_int7_c
 *fill*         0x0000000040081062        0x2 
 .text.xtensa_excint1_c
                0x0000000040081064      0x2e4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                        0x300 (size before relaxing)
                0x0000000040081064                xtensa_excint1_c
 .text.xtensa_cpu_process_stack_pc
                0x0000000040081348       0x2b zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 *fill*         0x0000000040081373        0x1 
 .text.xtensa_backtrace_get_next_frame
                0x0000000040081374       0x39 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
                                         0x3d (size before relaxing)
                0x0000000040081374                xtensa_backtrace_get_next_frame
 *fill*         0x00000000400813ad        0x3 
 .text.xtensa_backtrace_print
                0x00000000400813b0       0xd6 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
                                         0xfa (size before relaxing)
                0x00000000400813b0                xtensa_backtrace_print
 *fill*         0x0000000040081486        0x0 
 *fill*         0x0000000040081486        0x0 
 *fill*         0x0000000040081486        0x0 
 *fill*         0x0000000040081486        0x0 
 *fill*         0x0000000040081486        0x0 
 *fill*         0x0000000040081486        0x0 
 *fill*         0x0000000040081486        0x0 
 *fill*         0x0000000040081486        0x0 
 *fill*         0x0000000040081486        0x0 
 *fill*         0x0000000040081486        0x0 
 *fill*         0x0000000040081486        0x0 
 *fill*         0x0000000040081486        0x0 
 *fill*         0x0000000040081486        0x0 
 *fill*         0x0000000040081486        0x0 
 *libkernel.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040081486        0x2 
 .text.z_impl_k_busy_wait
                0x0000000040081488       0x1f zephyr/kernel/libkernel.a(busy_wait.c.obj)
                                         0x26 (size before relaxing)
                0x0000000040081488                z_impl_k_busy_wait
 *fill*         0x00000000400814a7        0x1 
 .text.k_sys_fatal_error_handler
                0x00000000400814a8       0x18 zephyr/kernel/libkernel.a(fatal.c.obj)
                                         0x20 (size before relaxing)
                0x00000000400814a8                k_sys_fatal_error_handler
 .text.z_fatal_error
                0x00000000400814c0       0xaa zephyr/kernel/libkernel.a(fatal.c.obj)
                                         0xbe (size before relaxing)
                0x00000000400814c0                z_fatal_error
 *fill*         0x000000004008156a        0x2 
 .text.z_sys_init_run_level
                0x000000004008156c       0x4b zephyr/kernel/libkernel.a(init.c.obj)
 *fill*         0x00000000400815b7        0x1 
 .text.bg_thread_main
                0x00000000400815b8       0x2e zephyr/kernel/libkernel.a(init.c.obj)
                                         0x3e (size before relaxing)
 *fill*         0x00000000400815e6        0x2 
 .text.z_early_memset
                0x00000000400815e8       0x12 zephyr/kernel/libkernel.a(init.c.obj)
                0x00000000400815e8                z_early_memset
 *fill*         0x00000000400815fa        0x2 
 .text.z_bss_zero
                0x00000000400815fc       0x13 zephyr/kernel/libkernel.a(init.c.obj)
                                         0x16 (size before relaxing)
                0x00000000400815fc                z_bss_zero
 *fill*         0x000000004008160f        0x1 
 .text.z_init_cpu
                0x0000000040081610       0x69 zephyr/kernel/libkernel.a(init.c.obj)
                                         0x6d (size before relaxing)
                0x0000000040081610                z_init_cpu
 *fill*         0x0000000040081679        0x3 
 .text.z_cstart
                0x000000004008167c       0x97 zephyr/kernel/libkernel.a(init.c.obj)
                                         0xc3 (size before relaxing)
                0x000000004008167c                z_cstart
 *fill*         0x0000000040081713        0x1 
 .text.z_impl_k_thread_start
                0x0000000040081714        0xa zephyr/kernel/libkernel.a(thread.c.obj)
                                          0xe (size before relaxing)
                0x0000000040081714                z_impl_k_thread_start
 *fill*         0x000000004008171e        0x2 
 .text.z_setup_new_thread
                0x0000000040081720       0x51 zephyr/kernel/libkernel.a(thread.c.obj)
                                         0x55 (size before relaxing)
                0x0000000040081720                z_setup_new_thread
 *fill*         0x0000000040081771        0x3 
 .text.z_impl_k_thread_create
                0x0000000040081774       0x56 zephyr/kernel/libkernel.a(thread.c.obj)
                                         0x5a (size before relaxing)
                0x0000000040081774                z_impl_k_thread_create
 *fill*         0x00000000400817ca        0x2 
 .text.z_init_static_threads
                0x00000000400817cc       0x70 zephyr/kernel/libkernel.a(thread.c.obj)
                                         0x7a (size before relaxing)
                0x00000000400817cc                z_init_static_threads
 *fill*         0x000000004008183c        0x0 
 .text.sliceable
                0x000000004008183c       0x45 zephyr/kernel/libkernel.a(sched.c.obj)
 *fill*         0x0000000040081881        0x3 
 .text.slice_timeout
                0x0000000040081884       0x1e zephyr/kernel/libkernel.a(sched.c.obj)
 *fill*         0x00000000400818a2        0x2 
 .text.unpend_thread_no_timeout
                0x00000000400818a4       0x19 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x1d (size before relaxing)
 *fill*         0x00000000400818bd        0x3 
 .text.z_reset_time_slice
                0x00000000400818c0       0x3f zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x47 (size before relaxing)
                0x00000000400818c0                z_reset_time_slice
 *fill*         0x00000000400818ff        0x1 
 .text.z_swap_irqlock
                0x0000000040081900       0x35 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x39 (size before relaxing)
 *fill*         0x0000000040081935        0x3 
 .text.z_swap   0x0000000040081938       0x3a zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x3e (size before relaxing)
 *fill*         0x0000000040081972        0x2 
 .text.update_cache
                0x0000000040081974       0x4a zephyr/kernel/libkernel.a(sched.c.obj)
 *fill*         0x00000000400819be        0x2 
 .text.move_thread_to_end_of_prio_q
                0x00000000400819c0       0x78 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x7c (size before relaxing)
 .text.ready_thread
                0x0000000040081a38       0x6e zephyr/kernel/libkernel.a(sched.c.obj)
 *fill*         0x0000000040081aa6        0x2 
 .text.unready_thread
                0x0000000040081aa8       0x2e zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x32 (size before relaxing)
 *fill*         0x0000000040081ad6        0x2 
 .text.add_to_waitq_locked
                0x0000000040081ad8       0x58 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x5c (size before relaxing)
 .text.pend_locked
                0x0000000040081b30       0x22 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x26 (size before relaxing)
 *fill*         0x0000000040081b52        0x2 
 .text.z_thread_halt
                0x0000000040081b54       0xa0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0xb4 (size before relaxing)
 .text.z_time_slice
                0x0000000040081bf4       0x3b zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x42 (size before relaxing)
                0x0000000040081bf4                z_time_slice
 *fill*         0x0000000040081c2f        0x1 
 .text.z_ready_thread
                0x0000000040081c30       0x13 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x16 (size before relaxing)
                0x0000000040081c30                z_ready_thread
 *fill*         0x0000000040081c43        0x1 
 .text.z_impl_k_thread_suspend
                0x0000000040081c44       0x29 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x2c (size before relaxing)
                0x0000000040081c44                z_impl_k_thread_suspend
 *fill*         0x0000000040081c6d        0x3 
 .text.z_unpend_thread_no_timeout
                0x0000000040081c70       0x18 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x1c (size before relaxing)
                0x0000000040081c70                z_unpend_thread_no_timeout
 .text.z_sched_wake_thread
                0x0000000040081c88       0x39 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x40 (size before relaxing)
                0x0000000040081c88                z_sched_wake_thread
 *fill*         0x0000000040081cc1        0x3 
 .text.z_thread_timeout
                0x0000000040081cc4        0xd zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
                0x0000000040081cc4                z_thread_timeout
 *fill*         0x0000000040081cd1        0x3 
 .text.z_pend_curr
                0x0000000040081cd4       0x20 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x28 (size before relaxing)
                0x0000000040081cd4                z_pend_curr
 .text.z_unpend1_no_timeout
                0x0000000040081cf4       0x22 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x26 (size before relaxing)
                0x0000000040081cf4                z_unpend1_no_timeout
 *fill*         0x0000000040081d16        0x2 
 .text.z_unpend_first_thread
                0x0000000040081d18       0x2a zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x2e (size before relaxing)
                0x0000000040081d18                z_unpend_first_thread
 *fill*         0x0000000040081d42        0x2 
 .text.z_unpend_thread
                0x0000000040081d44       0x1e zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x26 (size before relaxing)
                0x0000000040081d44                z_unpend_thread
 *fill*         0x0000000040081d62        0x2 
 .text.z_reschedule
                0x0000000040081d64       0x2c zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x30 (size before relaxing)
                0x0000000040081d64                z_reschedule
 .text.z_sched_start
                0x0000000040081d90       0x32 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x36 (size before relaxing)
                0x0000000040081d90                z_sched_start
 *fill*         0x0000000040081dc2        0x2 
 .text.z_reschedule_irqlock
                0x0000000040081dc4       0x2c zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040081dc4                z_reschedule_irqlock
 .text.k_sched_lock
                0x0000000040081df0       0x1b zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040081df0                k_sched_lock
 *fill*         0x0000000040081e0b        0x1 
 .text.k_sched_unlock
                0x0000000040081e0c       0x26 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x2e (size before relaxing)
                0x0000000040081e0c                k_sched_unlock
 *fill*         0x0000000040081e32        0x2 
 .text.z_swap_next_thread
                0x0000000040081e34        0xa zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040081e34                z_swap_next_thread
 *fill*         0x0000000040081e3e        0x2 
 .text.z_get_next_switch_handle
                0x0000000040081e40       0x14 zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040081e40                z_get_next_switch_handle
 .text.z_unpend_all
                0x0000000040081e54       0x24 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x28 (size before relaxing)
                0x0000000040081e54                z_unpend_all
 .text.z_sched_init
                0x0000000040081e78        0xf zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040081e78                z_sched_init
 *fill*         0x0000000040081e87        0x1 
 .text.z_impl_k_yield
                0x0000000040081e88       0x7a zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x7e (size before relaxing)
                0x0000000040081e88                z_impl_k_yield
 *fill*         0x0000000040081f02        0x2 
 .text.z_tick_sleep
                0x0000000040081f04       0x6a zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x7a (size before relaxing)
 *fill*         0x0000000040081f6e        0x2 
 .text.z_impl_k_sleep
                0x0000000040081f70       0x42 zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040081f70                z_impl_k_sleep
 *fill*         0x0000000040081fb2        0x2 
 .text.z_impl_k_sched_current_thread_query
                0x0000000040081fb4        0xa zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040081fb4                z_impl_k_sched_current_thread_query
 *fill*         0x0000000040081fbe        0x2 
 .text.z_thread_abort
                0x0000000040081fc0       0x2f zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x36 (size before relaxing)
                0x0000000040081fc0                z_thread_abort
 *fill*         0x0000000040081fef        0x1 
 .text.z_impl_k_thread_abort
                0x0000000040081ff0        0xa zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xe (size before relaxing)
                0x0000000040081ff0                z_impl_k_thread_abort
 *fill*         0x0000000040081ffa        0x2 
 .text.z_sched_wake
                0x0000000040081ffc       0x3d zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x45 (size before relaxing)
                0x0000000040081ffc                z_sched_wake
 *fill*         0x0000000040082039        0x3 
 .text.z_sched_wait
                0x000000004008203c       0x24 zephyr/kernel/libkernel.a(sched.c.obj)
                0x000000004008203c                z_sched_wait
 .text.idle     0x0000000040082060        0xc zephyr/kernel/libkernel.a(idle.c.obj)
                                          0xf (size before relaxing)
                0x0000000040082060                idle
 *fill*         0x000000004008206c        0x0 
 .text.z_impl_k_sem_give
                0x000000004008206c       0x3c zephyr/kernel/libkernel.a(sem.c.obj)
                                         0x44 (size before relaxing)
                0x000000004008206c                z_impl_k_sem_give
 .text.z_impl_k_sem_take
                0x00000000400820a8       0x3a zephyr/kernel/libkernel.a(sem.c.obj)
                                         0x3d (size before relaxing)
                0x00000000400820a8                z_impl_k_sem_take
 *fill*         0x00000000400820e2        0x2 
 .text.notify_queue_locked$isra$0
                0x00000000400820e4       0x14 zephyr/kernel/libkernel.a(work.c.obj)
 .text.work_queue_main
                0x00000000400820f8      0x124 zephyr/kernel/libkernel.a(work.c.obj)
                                        0x12f (size before relaxing)
 *fill*         0x000000004008221c        0x0 
 .text.submit_to_queue_locked
                0x000000004008221c       0xa7 zephyr/kernel/libkernel.a(work.c.obj)
 *fill*         0x00000000400822c3        0x1 
 .text.z_work_submit_to_queue
                0x00000000400822c4       0x1a zephyr/kernel/libkernel.a(work.c.obj)
                                         0x1e (size before relaxing)
                0x00000000400822c4                z_work_submit_to_queue
 *fill*         0x00000000400822de        0x2 
 .text.k_work_submit_to_queue
                0x00000000400822e0       0x1a zephyr/kernel/libkernel.a(work.c.obj)
                                         0x1e (size before relaxing)
                0x00000000400822e0                k_work_submit_to_queue
 *fill*         0x00000000400822fa        0x2 
 .text.k_work_submit
                0x00000000400822fc       0x12 zephyr/kernel/libkernel.a(work.c.obj)
                0x00000000400822fc                k_work_submit
 *fill*         0x000000004008230e        0x2 
 .text.k_work_queue_start
                0x0000000040082310       0x5e zephyr/kernel/libkernel.a(work.c.obj)
                                         0x66 (size before relaxing)
                0x0000000040082310                k_work_queue_start
 *fill*         0x000000004008236e        0x2 
 .text.elapsed  0x0000000040082370       0x14 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x18 (size before relaxing)
 .text.next_timeout
                0x0000000040082384       0x4b zephyr/kernel/libkernel.a(timeout.c.obj)
 *fill*         0x00000000400823cf        0x1 
 .text.remove_timeout
                0x00000000400823d0       0x3a zephyr/kernel/libkernel.a(timeout.c.obj)
 *fill*         0x000000004008240a        0x2 
 .text.z_add_timeout
                0x000000004008240c      0x104 zephyr/kernel/libkernel.a(timeout.c.obj)
                                        0x10c (size before relaxing)
                0x000000004008240c                z_add_timeout
 .text.z_abort_timeout
                0x0000000040082510       0x1e zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x22 (size before relaxing)
                0x0000000040082510                z_abort_timeout
 *fill*         0x000000004008252e        0x2 
 .text.sys_clock_announce
                0x0000000040082530       0xd5 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0xdd (size before relaxing)
                0x0000000040082530                sys_clock_announce
 *fill*         0x0000000040082605        0x3 
 .text.sys_clock_tick_get
                0x0000000040082608       0x28 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x2c (size before relaxing)
                0x0000000040082608                sys_clock_tick_get
 .text.sys_clock_tick_get_32
                0x0000000040082630        0xa zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0xd (size before relaxing)
                0x0000000040082630                sys_clock_tick_get_32
 *fill*         0x000000004008263a        0x2 
 .text.z_impl_k_uptime_ticks
                0x000000004008263c        0xf zephyr/kernel/libkernel.a(timeout.c.obj)
                0x000000004008263c                z_impl_k_uptime_ticks
 *fill*         0x000000004008264b        0x1 
 .text.sys_timepoint_calc
                0x000000004008264c       0x4a zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x4e (size before relaxing)
                0x000000004008264c                sys_timepoint_calc
 *fill*         0x0000000040082696        0x2 
 .text.sys_timepoint_timeout
                0x0000000040082698       0x4a zephyr/kernel/libkernel.a(timeout.c.obj)
                0x0000000040082698                sys_timepoint_timeout
 *fill*         0x00000000400826e2        0x2 
 .text.z_timer_expiration_handler
                0x00000000400826e4       0xf6 zephyr/kernel/libkernel.a(timer.c.obj)
                                        0x106 (size before relaxing)
                0x00000000400826e4                z_timer_expiration_handler
 *fill*         0x00000000400827da        0x2 
 .text.z_impl_k_timer_start
                0x00000000400827dc       0x63 zephyr/kernel/libkernel.a(timer.c.obj)
                                         0x67 (size before relaxing)
                0x00000000400827dc                z_impl_k_timer_start
 *fill*         0x000000004008283f        0x1 
 .text.z_impl_k_timer_stop
                0x0000000040082840       0x28 zephyr/kernel/libkernel.a(timer.c.obj)
                                         0x34 (size before relaxing)
                0x0000000040082840                z_impl_k_timer_stop
 .text.z_heap_aligned_alloc
                0x0000000040082868       0x25 zephyr/kernel/libkernel.a(mempool.c.obj)
                                         0x29 (size before relaxing)
 *fill*         0x000000004008288d        0x3 
 .text.k_free   0x0000000040082890       0x14 zephyr/kernel/libkernel.a(mempool.c.obj)
                0x0000000040082890                k_free
 .text.k_aligned_alloc
                0x00000000400828a4       0x14 zephyr/kernel/libkernel.a(mempool.c.obj)
                0x00000000400828a4                k_aligned_alloc
 .text.k_malloc
                0x00000000400828b8       0x11 zephyr/kernel/libkernel.a(mempool.c.obj)
                0x00000000400828b8                k_malloc
 *fill*         0x00000000400828c9        0x3 
 .text.k_thread_system_pool_assign
                0x00000000400828cc        0xb zephyr/kernel/libkernel.a(mempool.c.obj)
                0x00000000400828cc                k_thread_system_pool_assign
 *fill*         0x00000000400828d7        0x1 
 .text.boot_banner
                0x00000000400828d8        0xb zephyr/kernel/libkernel.a(banner.c.obj)
                                          0xe (size before relaxing)
                0x00000000400828d8                boot_banner
 *fill*         0x00000000400828e3        0x1 
 .text.k_heap_init
                0x00000000400828e4       0x17 zephyr/kernel/libkernel.a(kheap.c.obj)
                0x00000000400828e4                k_heap_init
 *fill*         0x00000000400828fb        0x1 
 .text.statics_init
                0x00000000400828fc       0x22 zephyr/kernel/libkernel.a(kheap.c.obj)
 *fill*         0x000000004008291e        0x2 
 .text.k_heap_aligned_alloc
                0x0000000040082920       0x5a zephyr/kernel/libkernel.a(kheap.c.obj)
                                         0x62 (size before relaxing)
                0x0000000040082920                k_heap_aligned_alloc
 *fill*         0x000000004008297a        0x2 
 .text.k_heap_free
                0x000000004008297c       0x28 zephyr/kernel/libkernel.a(kheap.c.obj)
                                         0x30 (size before relaxing)
                0x000000004008297c                k_heap_free
 .text.k_sys_work_q_init
                0x00000000400829a4       0x24 zephyr/kernel/libkernel.a(system_work_q.c.obj)
 *fill*         0x00000000400829c8        0x0 
 *fill*         0x00000000400829c8        0x0 
 .text.z_device_state_init
                0x00000000400829c8        0x5 zephyr/kernel/libkernel.a(device.c.obj)
                0x00000000400829c8                z_device_state_init
 *fill*         0x00000000400829cd        0x3 
 .text.z_device_is_ready
                0x00000000400829d0       0x1a zephyr/kernel/libkernel.a(device.c.obj)
                0x00000000400829d0                z_device_is_ready
 *fill*         0x00000000400829ea        0x2 
 .text.arch_system_halt
                0x00000000400829ec        0x9 zephyr/kernel/libkernel.a(fatal.c.obj)
                0x00000000400829ec                arch_system_halt
 *fill*         0x00000000400829f5        0x0 
 *fill*         0x00000000400829f5        0x0 
 *fill*         0x00000000400829f5        0x0 
 *fill*         0x00000000400829f5        0x0 
 *fill*         0x00000000400829f5        0x0 
 *fill*         0x00000000400829f5        0x0 
 *fill*         0x00000000400829f5        0x0 
 *fill*         0x00000000400829f5        0x3 
 .text.k_is_in_isr
                0x00000000400829f8       0x11 zephyr/kernel/libkernel.a(thread.c.obj)
                0x00000000400829f8                k_is_in_isr
 *fill*         0x0000000040082a09        0x3 
 .text.z_impl_k_thread_name_set
                0x0000000040082a0c        0x8 zephyr/kernel/libkernel.a(thread.c.obj)
                0x0000000040082a0c                z_impl_k_thread_name_set
 .text.k_thread_name_get
                0x0000000040082a14        0x7 zephyr/kernel/libkernel.a(thread.c.obj)
                0x0000000040082a14                k_thread_name_get
 *fill*         0x0000000040082a1b        0x0 
 *fill*         0x0000000040082a1b        0x0 
 *fill*         0x0000000040082a1b        0x0 
 *fill*         0x0000000040082a1b        0x0 
 *fill*         0x0000000040082a1b        0x1 
 .text.sys_dlist_remove
                0x0000000040082a1c       0x13 zephyr/kernel/libkernel.a(sched.c.obj)
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x0 
 *fill*         0x0000000040082a2f        0x1 
 .text.z_impl_k_sem_init
                0x0000000040082a30       0x24 zephyr/kernel/libkernel.a(sem.c.obj)
                0x0000000040082a30                z_impl_k_sem_init
 *fill*         0x0000000040082a54        0x0 
 .text.flag_test_and_clear
                0x0000000040082a54       0x1d zephyr/kernel/libkernel.a(work.c.obj)
 *fill*         0x0000000040082a71        0x0 
 *fill*         0x0000000040082a71        0x0 
 *fill*         0x0000000040082a71        0x0 
 *fill*         0x0000000040082a71        0x0 
 *fill*         0x0000000040082a71        0x0 
 *fill*         0x0000000040082a71        0x0 
 *fill*         0x0000000040082a71        0x0 
 *fill*         0x0000000040082a71        0x0 
 *fill*         0x0000000040082a71        0x0 
 *fill*         0x0000000040082a71        0x0 
 *fill*         0x0000000040082a71        0x0 
 *fill*         0x0000000040082a71        0x0 
 *fill*         0x0000000040082a71        0x0 
 *fill*         0x0000000040082a71        0x0 
 *fill*         0x0000000040082a71        0x0 
 *fill*         0x0000000040082a71        0x3 
 .text.k_timer_init
                0x0000000040082a74       0x1a zephyr/kernel/libkernel.a(timer.c.obj)
                0x0000000040082a74                k_timer_init
 *fill*         0x0000000040082a8e        0x0 
 *fill*         0x0000000040082a8e        0x0 
 *fill*         0x0000000040082a8e        0x0 
 *fill*         0x0000000040082a8e        0x0 
 *fill*         0x0000000040082a8e        0x0 
 *fill*         0x0000000040082a8e        0x0 
 *fill*         0x0000000040082a8e        0x0 
 *fill*         0x0000000040082a8e        0x0 
 *fill*         0x0000000040082a8e        0x0 
 *libsoc.a:rtc_*.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libsoc.a:cpu_util.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libgcc.a:lib2funcs.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libdrivers__flash.a:flash_esp32.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:spi_flash_rom_patch.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:windowspill_asm.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040082a8e        0x2 
 .text          0x0000000040082a90      0x137 zephyr/libzephyr.a(windowspill_asm.S.obj)
                0x0000000040082a90                xthal_window_spill_nw
                0x0000000040082a90                xthal_spill_registers_into_stack_nw
                0x0000000040082ba4                xthal_window_spill
 *libzephyr.a:log_noos.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040082bc7        0x1 
 .text.esp_log_early_timestamp
                0x0000000040082bc8       0x1d zephyr/libzephyr.a(log_noos.c.obj)
                0x0000000040082bc8                esp_log_timestamp
                0x0000000040082bc8                esp_log_early_timestamp
 *fill*         0x0000000040082be5        0x0 
 *libdrivers__timer.a:xtensa_sys_timer.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040082be5        0x3 
 .text.ccompare_isr
                0x0000000040082be8       0x32 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                         0x36 (size before relaxing)
 *fill*         0x0000000040082c1a        0x2 
 .text.sys_clock_set_timeout
                0x0000000040082c1c       0x68 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                0x0000000040082c1c                sys_clock_set_timeout
 .text.sys_clock_elapsed
                0x0000000040082c84       0x22 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                0x0000000040082c84                sys_clock_elapsed
 *fill*         0x0000000040082ca6        0x0 
 *fill*         0x0000000040082ca6        0x2 
 .text.sys_clock_driver_init
                0x0000000040082ca8       0x23 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 *fill*         0x0000000040082ccb        0x0 
 *fill*         0x0000000040082ccb        0x1 
 .text.sys_clock_cycle_get_32
                0x0000000040082ccc        0x8 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                0x0000000040082ccc                sys_clock_cycle_get_32
 *libzephyr.a:log_core.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.activate_foreach_backend
                0x0000000040082cd4       0x61 zephyr/libzephyr.a(log_core.c.obj)
                                         0x65 (size before relaxing)
 *fill*         0x0000000040082d35        0x3 
 .text.enable_logger
                0x0000000040082d38       0x3b zephyr/libzephyr.a(log_core.c.obj)
                                         0x43 (size before relaxing)
 *fill*         0x0000000040082d73        0x1 
 .text.default_lf_get_timestamp
                0x0000000040082d74       0x14 zephyr/libzephyr.a(log_core.c.obj)
                                         0x18 (size before relaxing)
 .text.log_process_thread_timer_expiry_fn
                0x0000000040082d88        0xb zephyr/libzephyr.a(log_core.c.obj)
                                          0xe (size before relaxing)
 *fill*         0x0000000040082d93        0x1 
 .text.z_log_init
                0x0000000040082d94       0x8e zephyr/libzephyr.a(log_core.c.obj)
                                         0x92 (size before relaxing)
 *fill*         0x0000000040082e22        0x2 
 .text.log_format_func_t_get
                0x0000000040082e24        0xd zephyr/libzephyr.a(log_core.c.obj)
                0x0000000040082e24                log_format_func_t_get
 *fill*         0x0000000040082e31        0x3 
 .text.z_log_vprintk
                0x0000000040082e34       0x1f zephyr/libzephyr.a(log_core.c.obj)
                0x0000000040082e34                z_log_vprintk
 *fill*         0x0000000040082e53        0x1 
 .text.log_set_timestamp_func
                0x0000000040082e54       0x1a zephyr/libzephyr.a(log_core.c.obj)
                0x0000000040082e54                log_set_timestamp_func
 *fill*         0x0000000040082e6e        0x2 
 .text.z_log_notify_backend_enabled
                0x0000000040082e70       0x1b zephyr/libzephyr.a(log_core.c.obj)
                0x0000000040082e70                z_log_notify_backend_enabled
 *fill*         0x0000000040082e8b        0x1 
 .text.z_log_dropped
                0x0000000040082e8c       0x2e zephyr/libzephyr.a(log_core.c.obj)
                0x0000000040082e8c                z_log_dropped
 *fill*         0x0000000040082eba        0x2 
 .text.z_log_notify_drop
                0x0000000040082ebc        0xa zephyr/libzephyr.a(log_core.c.obj)
                                          0xe (size before relaxing)
 *fill*         0x0000000040082ec6        0x2 
 .text.z_log_dropped_read_and_clear
                0x0000000040082ec8       0x19 zephyr/libzephyr.a(log_core.c.obj)
                0x0000000040082ec8                z_log_dropped_read_and_clear
 *fill*         0x0000000040082ee1        0x3 
 .text.dropped_notify
                0x0000000040082ee4       0x30 zephyr/libzephyr.a(log_core.c.obj)
                0x0000000040082ee4                dropped_notify
 .text.z_log_msg_init
                0x0000000040082f14       0x18 zephyr/libzephyr.a(log_core.c.obj)
                0x0000000040082f14                z_log_msg_init
 .text.log_core_init
                0x0000000040082f2c       0x28 zephyr/libzephyr.a(log_core.c.obj)
                                         0x2c (size before relaxing)
                0x0000000040082f2c                log_core_init
 .text.z_log_msg_alloc
                0x0000000040082f54       0x16 zephyr/libzephyr.a(log_core.c.obj)
                0x0000000040082f54                z_log_msg_alloc
 *fill*         0x0000000040082f6a        0x2 
 .text.z_log_msg_local_claim
                0x0000000040082f6c        0xd zephyr/libzephyr.a(log_core.c.obj)
                                         0x10 (size before relaxing)
                0x0000000040082f6c                z_log_msg_local_claim
 *fill*         0x0000000040082f79        0x3 
 .text.z_log_msg_free
                0x0000000040082f7c       0x12 zephyr/libzephyr.a(log_core.c.obj)
                0x0000000040082f7c                z_log_msg_free
 *fill*         0x0000000040082f8e        0x2 
 .text.z_log_msg_pending
                0x0000000040082f90        0xd zephyr/libzephyr.a(log_core.c.obj)
                                         0x10 (size before relaxing)
                0x0000000040082f90                z_log_msg_pending
 *fill*         0x0000000040082f9d        0x3 
 .text.z_impl_log_process
                0x0000000040082fa0       0xa6 zephyr/libzephyr.a(log_core.c.obj)
                                         0xae (size before relaxing)
                0x0000000040082fa0                z_impl_log_process
 *fill*         0x0000000040083046        0x2 
 .text.z_impl_log_panic
                0x0000000040083048       0x3e zephyr/libzephyr.a(log_core.c.obj)
                                         0x46 (size before relaxing)
                0x0000000040083048                z_impl_log_panic
 *fill*         0x0000000040083086        0x2 
 .text.log_process_thread_func
                0x0000000040083088       0x8d zephyr/libzephyr.a(log_core.c.obj)
                                         0x9d (size before relaxing)
 *fill*         0x0000000040083115        0x3 
 .text.z_log_msg_post_finalize
                0x0000000040083118       0x64 zephyr/libzephyr.a(log_core.c.obj)
                                         0x6b (size before relaxing)
 *fill*         0x000000004008317c        0x0 
 .text.z_log_msg_commit
                0x000000004008317c       0x1d zephyr/libzephyr.a(log_core.c.obj)
                                         0x21 (size before relaxing)
                0x000000004008317c                z_log_msg_commit
 *fill*         0x0000000040083199        0x3 
 .text.log_msg_generic_get_wlen
                0x000000004008319c       0x24 zephyr/libzephyr.a(log_core.c.obj)
 .text.dummy_timestamp
                0x00000000400831c0        0x7 zephyr/libzephyr.a(log_core.c.obj)
 *fill*         0x00000000400831c7        0x0 
 *fill*         0x00000000400831c7        0x0 
 *fill*         0x00000000400831c7        0x0 
 *fill*         0x00000000400831c7        0x0 
 *fill*         0x00000000400831c7        0x0 
 *fill*         0x00000000400831c7        0x0 
 *fill*         0x00000000400831c7        0x0 
 *fill*         0x00000000400831c7        0x0 
 *fill*         0x00000000400831c7        0x0 
 *fill*         0x00000000400831c7        0x0 
 *fill*         0x00000000400831c7        0x0 
 *fill*         0x00000000400831c7        0x0 
 *fill*         0x00000000400831c7        0x0 
 *fill*         0x00000000400831c7        0x0 
 *fill*         0x00000000400831c7        0x0 
 *fill*         0x00000000400831c7        0x0 
 *fill*         0x00000000400831c7        0x0 
 *fill*         0x00000000400831c7        0x0 
 *fill*         0x00000000400831c7        0x1 
 .text.z_log_get_tag
                0x00000000400831c8        0x7 zephyr/libzephyr.a(log_core.c.obj)
                0x00000000400831c8                z_log_get_tag
 *libzephyr.a:cbprintf_complete.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:printk.*(SORT_BY_ALIGNMENT(.literal.printk) SORT_BY_ALIGNMENT(.literal.vprintk) SORT_BY_ALIGNMENT(.literal.char_out) SORT_BY_ALIGNMENT(.text.printk) SORT_BY_ALIGNMENT(.text.vprintk) SORT_BY_ALIGNMENT(.text.char_out))
 *fill*         0x00000000400831cf        0x1 
 .text.printk   0x00000000400831d0       0x2b zephyr/libzephyr.a(printk.c.obj)
                0x00000000400831d0                printk
 *fill*         0x00000000400831fb        0x0 
 *libzephyr.a:log_msg.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x00000000400831fb        0x1 
 .text.z_cbprintf_cpy
                0x00000000400831fc       0x27 zephyr/libzephyr.a(log_msg.c.obj)
 *fill*         0x0000000040083223        0x1 
 .text.z_log_msg_finalize
                0x0000000040083224       0x32 zephyr/libzephyr.a(log_msg.c.obj)
                                         0x36 (size before relaxing)
                0x0000000040083224                z_log_msg_finalize
 *fill*         0x0000000040083256        0x2 
 .text.z_log_msg_simple_create
                0x0000000040083258       0x5b zephyr/libzephyr.a(log_msg.c.obj)
                                         0x5f (size before relaxing)
 *fill*         0x00000000400832b3        0x1 
 .text.z_impl_z_log_msg_static_create
                0x00000000400832b4      0x106 zephyr/libzephyr.a(log_msg.c.obj)
                                        0x10e (size before relaxing)
                0x00000000400832b4                z_impl_z_log_msg_static_create
 *fill*         0x00000000400833ba        0x2 
 .text.z_impl_z_log_msg_simple_create_0
                0x00000000400833bc       0x12 zephyr/libzephyr.a(log_msg.c.obj)
                                         0x16 (size before relaxing)
                0x00000000400833bc                z_impl_z_log_msg_simple_create_0
 *fill*         0x00000000400833ce        0x2 
 .text.z_impl_z_log_msg_simple_create_1
                0x00000000400833d0       0x17 zephyr/libzephyr.a(log_msg.c.obj)
                0x00000000400833d0                z_impl_z_log_msg_simple_create_1
 *fill*         0x00000000400833e7        0x1 
 .text.z_impl_z_log_msg_simple_create_2
                0x00000000400833e8       0x16 zephyr/libzephyr.a(log_msg.c.obj)
                                         0x1a (size before relaxing)
                0x00000000400833e8                z_impl_z_log_msg_simple_create_2
 *fill*         0x00000000400833fe        0x2 
 .text.z_log_msg_runtime_vcreate
                0x0000000040083400       0xa2 zephyr/libzephyr.a(log_msg.c.obj)
                                         0xaa (size before relaxing)
                0x0000000040083400                z_log_msg_runtime_vcreate
 *fill*         0x00000000400834a2        0x0 
 *fill*         0x00000000400834a2        0x0 
 *fill*         0x00000000400834a2        0x0 
 *fill*         0x00000000400834a2        0x0 
 *fill*         0x00000000400834a2        0x0 
 *fill*         0x00000000400834a2        0x0 
 *fill*         0x00000000400834a2        0x0 
 *fill*         0x00000000400834a2        0x0 
 *libzephyr.a:log_list.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libdrivers__console.a:uart_console.*(SORT_BY_ALIGNMENT(.literal.console_out) SORT_BY_ALIGNMENT(.text.console_out))
 *fill*         0x00000000400834a2        0x2 
 .text.console_out
                0x00000000400834a4       0x22 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 *fill*         0x00000000400834c6        0x0 
 *libzephyr.a:log_output.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x00000000400834c6        0x2 
 .text.print_formatted
                0x00000000400834c8       0x2a zephyr/libzephyr.a(log_output.c.obj)
 *fill*         0x00000000400834f2        0x2 
 .text.newline_print
                0x00000000400834f4       0x16 zephyr/libzephyr.a(log_output.c.obj)
                                         0x19 (size before relaxing)
 *fill*         0x000000004008350a        0x2 
 .text.log_output_flush
                0x000000004008350c       0x18 zephyr/libzephyr.a(log_output.c.obj)
                                         0x1c (size before relaxing)
                0x000000004008350c                log_output_flush
 .text.out_func
                0x0000000040083524       0x30 zephyr/libzephyr.a(log_output.c.obj)
 .text.cr_out_func
                0x0000000040083554       0x1a zephyr/libzephyr.a(log_output.c.obj)
                                         0x1e (size before relaxing)
 *fill*         0x000000004008356e        0x2 
 .text.log_output_process
                0x0000000040083570      0x273 zephyr/libzephyr.a(log_output.c.obj)
                                        0x2ab (size before relaxing)
                0x0000000040083570                log_output_process
 *fill*         0x00000000400837e3        0x1 
 .text.log_output_msg_process
                0x00000000400837e4       0x50 zephyr/libzephyr.a(log_output.c.obj)
                                         0x54 (size before relaxing)
                0x00000000400837e4                log_output_msg_process
 .text.log_output_dropped_process
                0x0000000040083834       0x43 zephyr/libzephyr.a(log_output.c.obj)
                                         0x4f (size before relaxing)
                0x0000000040083834                log_output_dropped_process
 *fill*         0x0000000040083877        0x1 
 .text.log_output_timestamp_freq_set
                0x0000000040083878       0x2a zephyr/libzephyr.a(log_output.c.obj)
                0x0000000040083878                log_output_timestamp_freq_set
 *fill*         0x00000000400838a2        0x2 
 .text.buffer_write
                0x00000000400838a4       0x16 zephyr/libzephyr.a(log_output.c.obj)
 *fill*         0x00000000400838ba        0x0 
 *fill*         0x00000000400838ba        0x0 
 *fill*         0x00000000400838ba        0x0 
 *fill*         0x00000000400838ba        0x0 
 *fill*         0x00000000400838ba        0x0 
 *fill*         0x00000000400838ba        0x0 
 *libzephyr.a:log_backend_uart.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x00000000400838ba        0x2 
 .text.panic    0x00000000400838bc       0x1b zephyr/libzephyr.a(log_backend_uart.c.obj)
 *fill*         0x00000000400838d7        0x1 
 .text.dropped  0x00000000400838d8       0x13 zephyr/libzephyr.a(log_backend_uart.c.obj)
 *fill*         0x00000000400838eb        0x1 
 .text.process  0x00000000400838ec       0x1e zephyr/libzephyr.a(log_backend_uart.c.obj)
 *fill*         0x000000004008390a        0x2 
 .text.char_out
                0x000000004008390c       0x23 zephyr/libzephyr.a(log_backend_uart.c.obj)
 *fill*         0x000000004008392f        0x1 
 .text.format_set
                0x0000000040083930        0xf zephyr/libzephyr.a(log_backend_uart.c.obj)
 *fill*         0x000000004008393f        0x1 
 .text.log_backend_uart_init
                0x0000000040083940        0xf zephyr/libzephyr.a(log_backend_uart.c.obj)
 *fill*         0x000000004008394f        0x0 
 *fill*         0x000000004008394f        0x0 
 *fill*         0x000000004008394f        0x0 
 *fill*         0x000000004008394f        0x0 
 *libzephyr.a:loader.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004008394f        0x1 
 .text.__start  0x0000000040083950        0x8 zephyr/libzephyr.a(loader.c.obj)
                                          0xb (size before relaxing)
                0x0000000040083950                __start
 *fill*         0x0000000040083958        0x0 
 *liblib__libc__minimal.a:string.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *liblib__libc__newlib.a:string.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libc.a:*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040083958        0x0 
 .text.z_impl_zephyr_fputc
                0x0000000040083958       0x12 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                0x0000000040083958                z_impl_zephyr_fputc
 *fill*         0x000000004008396a        0x2 
 .text.picolibc_put
                0x000000004008396c       0x12 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 *fill*         0x000000004008397e        0x2 
 .text.__stdout_hook_install
                0x0000000040083980       0x18 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                0x0000000040083980                __stdout_hook_install
 .text.cbvprintf
                0x0000000040083998       0x2e zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                                         0x32 (size before relaxing)
                0x0000000040083998                cbvprintf
 *fill*         0x00000000400839c6        0x2 
 .text.snprintf
                0x00000000400839c8       0x5e /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
                0x00000000400839c8                snprintf
 *fill*         0x0000000040083a26        0x2 
 .text.__l_vfprintf
                0x0000000040083a28      0x5aa /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
                0x0000000040083a28                __l_vfprintf
 *fill*         0x0000000040083fd2        0x2 
 .text.cbputc   0x0000000040083fd4       0x11 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 *fill*         0x0000000040083fe5        0x0 
 *fill*         0x0000000040083fe5        0x0 
 *fill*         0x0000000040083fe5        0x0 
 *fill*         0x0000000040083fe5        0x3 
 .text.__assert_no_args
                0x0000000040083fe8        0x3 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                0x0000000040083fe8                __assert_no_args
 *fill*         0x0000000040083feb        0x0 
 *fill*         0x0000000040083feb        0x1 
 .text.__ultoa_invert
                0x0000000040083fec      0x116 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 *fill*         0x0000000040084102        0x0 
 *fill*         0x0000000040084102        0x2 
 .text.__file_str_put
                0x0000000040084104       0x16 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
                0x0000000040084104                __file_str_put
 *libphy.a:(SORT_BY_ALIGNMENT(.phyiram) SORT_BY_ALIGNMENT(.phyiram.*))
 *libgcov.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
                0x000000004008411a                _iram_text_end = ABSOLUTE (.)
                0x000000004008411c                . = ALIGN (0x4)
 *fill*         0x000000004008411a        0x2 
                0x000000004008411c                _iram_end = ABSOLUTE (.)

.rtc.text       0x00000000400c0000        0x0 load address 0x0000000000005c90
                0x00000000400c0000                . = ALIGN (0x4)
 *(SORT_BY_ALIGNMENT(.rtc.literal) SORT_BY_ALIGNMENT(.rtc.text))
 *rtc_wake_stub*.o(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))

.rtc.data       0x0000000050000000        0x0 load address 0x0000000000005c90
                0x0000000050000000                _rtc_data_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.rtc.data))
 *(SORT_BY_ALIGNMENT(.rtc.rodata))
 *rtc_wake_stub*.o(SORT_BY_ALIGNMENT(.data) SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.data.*) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.bss) SORT_BY_ALIGNMENT(.bss.*))
                0x0000000050000000                _rtc_data_end = ABSOLUTE (.)

.rtc.bss        0x0000000050000000        0x0 load address 0x0000000000005c90
                0x0000000050000000                _rtc_bss_start = ABSOLUTE (.)
 *rtc_wake_stub*.o(SORT_BY_ALIGNMENT(.bss) SORT_BY_ALIGNMENT(.bss.*))
 *rtc_wake_stub*.o(SORT_BY_ALIGNMENT(COMMON))
                0x0000000050000000                _rtc_bss_end = ABSOLUTE (.)

.rtc.force_slow
                0x0000000050000000        0x0 load address 0x0000000000005c90
                0x0000000050000000                . = ALIGN (0x4)
                0x0000000050000000                _rtc_force_slow_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.rtc.force_slow) SORT_BY_ALIGNMENT(.rtc.force_slow.*))
                0x0000000050000000                . = ALIGN (0x4)
                0x0000000050000000                _rtc_force_slow_end = ABSOLUTE (.)
                0x0000000000000000                _rtc_slow_length = (_rtc_force_slow_end - _rtc_data_start)

bss             0x000000003ffb0980     0x17e8
                0x000000003ffb0980                . = ALIGN (0x8)
                0x000000003ffb0980                _bss_start = ABSOLUTE (.)
                0x000000003ffb0980                __bss_start = ABSOLUTE (.)
                0x000000003ffb0980                _btdm_bss_start = ABSOLUTE (.)
 *libbtdm_app.a:(SORT_BY_ALIGNMENT(.bss) SORT_BY_ALIGNMENT(.bss.*) SORT_BY_ALIGNMENT(COMMON))
                0x000000003ffb0980                . = ALIGN (0x4)
                0x000000003ffb0980                _btdm_bss_end = ABSOLUTE (.)
 *libkernel.a:mempool.*(SORT_BY_ALIGNMENT(.noinit.kheap_buf__system_heap) SORT_BY_ALIGNMENT(.noinit.*.kheap_buf__system_heap))
 .noinit."WEST_TOPDIR/zephyr/kernel/mempool.c".kheap_buf__system_heap
                0x000000003ffb0980     0x1000 zephyr/kernel/libkernel.a(mempool.c.obj)
                0x000000003ffb0980                kheap__system_heap
 *(SORT_BY_ALIGNMENT(.dynsbss))
 *(SORT_BY_ALIGNMENT(.sbss))
 *(SORT_BY_ALIGNMENT(.sbss.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.sb.*))
 *(SORT_BY_ALIGNMENT(.scommon))
 *(SORT_BY_ALIGNMENT(.sbss2))
 *(SORT_BY_ALIGNMENT(.sbss2.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.sb2.*))
 *(SORT_BY_ALIGNMENT(.dynbss))
 *(SORT_BY_ALIGNMENT(.bss))
 *(SORT_BY_ALIGNMENT(.bss.*))
 .bss.buf32     0x000000003ffb1980      0x400 zephyr/libzephyr.a(log_core.c.obj)
 .bss.logging_thread
                0x000000003ffb1d80       0x58 zephyr/libzephyr.a(log_core.c.obj)
                0x000000003ffb1d80                logging_thread
 .bss.last_failure_report
                0x000000003ffb1dd8        0x8 zephyr/libzephyr.a(log_core.c.obj)
 .bss.log_process_thread_timer
                0x000000003ffb1de0       0x38 zephyr/libzephyr.a(log_core.c.obj)
 .bss.z_idle_threads
                0x000000003ffb1e18       0x58 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003ffb1e18                z_idle_threads
 .bss.z_main_thread
                0x000000003ffb1e70       0x58 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003ffb1e70                z_main_thread
 .bss.slice_timeouts
                0x000000003ffb1ec8       0x18 zephyr/kernel/libkernel.a(sched.c.obj)
 .bss.curr_tick
                0x000000003ffb1ee0        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)
 .bss.k_sys_work_q
                0x000000003ffb1ee8       0x78 zephyr/kernel/libkernel.a(system_work_q.c.obj)
                0x000000003ffb1ee8                k_sys_work_q
 .bss.sw_cb_data
                0x000000003ffb1f60        0xc app/libapp.a(main.c.obj)
                0x000000003ffb1f60                sw_cb_data
 .bss.curr_log_buffer
                0x000000003ffb1f6c        0x4 zephyr/libzephyr.a(log_core.c.obj)
 .bss.proc_tid  0x000000003ffb1f70        0x4 zephyr/libzephyr.a(log_core.c.obj)
 .bss.dropped_cnt
                0x000000003ffb1f74        0x4 zephyr/libzephyr.a(log_core.c.obj)
 .bss.buffered_cnt
                0x000000003ffb1f78        0x4 zephyr/libzephyr.a(log_core.c.obj)
 .bss.initialized
                0x000000003ffb1f7c        0x4 zephyr/libzephyr.a(log_core.c.obj)
 .bss.timestamp_div
                0x000000003ffb1f80        0x4 zephyr/libzephyr.a(log_output.c.obj)
 .bss.freq      0x000000003ffb1f84        0x4 zephyr/libzephyr.a(log_output.c.obj)
 .bss.lbu_data  0x000000003ffb1f88       0x18 zephyr/libzephyr.a(log_backend_uart.c.obj)
 .bss.lbu_output_control_block
                0x000000003ffb1fa0        0xc zephyr/libzephyr.a(log_backend_uart.c.obj)
 .bss.s_cur_pll_freq
                0x000000003ffb1fac        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .bss.mux       0x000000003ffb1fb0        0x4 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .bss.periph_spinlock
                0x000000003ffb1fb4        0x4 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .bss.s_reset_reason
                0x000000003ffb1fb8        0x4 zephyr/libzephyr.a(reset_reason.c.obj)
 .bss.cause     0x000000003ffb1fbc        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .bss.mask      0x000000003ffb1fc0        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .bss._stdout_hook
                0x000000003ffb1fc4        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .bss.z_malloc_heap
                0x000000003ffb1fc8        0xc zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .bss.non_iram_int_mask
                0x000000003ffb1fd4        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.vector_desc_head
                0x000000003ffb1fd8        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.intr_alloc_table
                0x000000003ffb1fdc      0x100 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.esp_intc_csec
                0x000000003ffb20dc        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.last_ccount$0
                0x000000003ffb20e0        0x4 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .bss.gpio_data_1
                0x000000003ffb20e4        0xc zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss.gpio_data_0
                0x000000003ffb20f0        0xc zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss.last_count
                0x000000003ffb20fc        0x4 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .bss._cpus_active
                0x000000003ffb2100        0x4 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003ffb2100                _cpus_active
 .bss._kernel   0x000000003ffb2104       0x20 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003ffb2104                _kernel
 .bss.slice_max_prio
                0x000000003ffb2124        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .bss.slice_ticks
                0x000000003ffb2128        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .bss.pending_cancels
                0x000000003ffb212c        0x8 zephyr/kernel/libkernel.a(work.c.obj)
 .bss.announce_remaining
                0x000000003ffb2134        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
 .bss.fast      0x000000003ffb2138        0x1 app/libapp.a(main.c.obj)
                0x000000003ffb2138                fast
 .bss.backend_attached
                0x000000003ffb2139        0x1 zephyr/libzephyr.a(log_core.c.obj)
 .bss.panic_mode
                0x000000003ffb213a        0x1 zephyr/libzephyr.a(log_core.c.obj)
 .bss.lbu_buffer
                0x000000003ffb213b        0x1 zephyr/libzephyr.a(log_backend_uart.c.obj)
 .bss.ref_counts
                0x000000003ffb213c       0x23 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .bss.isr_connected$0
                0x000000003ffb215f        0x1 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss.z_sys_post_kernel
                0x000000003ffb2160        0x1 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003ffb2160                z_sys_post_kernel
 .bss.slice_expired
                0x000000003ffb2161        0x1 zephyr/kernel/libkernel.a(sched.c.obj)
 .bss.sched_spinlock
                0x000000003ffb2162        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                0x000000003ffb2162                sched_spinlock
 .bss.lock      0x000000003ffb2162        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .bss.lock      0x000000003ffb2162        0x0 zephyr/kernel/libkernel.a(work.c.obj)
 *(SORT_BY_ALIGNMENT(.share.mem))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.b.*))
 *(SORT_BY_ALIGNMENT(COMMON))
                0x000000003ffb2168                . = ALIGN (0x8)
 *fill*         0x000000003ffb2162        0x6 
                0x000000003ffb2168                __bss_end = ABSOLUTE (.)
                0x000000003ffb2168                _end = ABSOLUTE (.)
                0x0000000000000001                ASSERT (((__bss_end - ORIGIN (dram0_0_seg)) <= LENGTH (dram0_0_seg)), DRAM segment data does not fit.)

noinit          0x000000003ffe5230     0x1c00
                0x000000003ffe5230                . = ALIGN (0x8)
 *(SORT_BY_ALIGNMENT(.noinit))
 *(SORT_BY_ALIGNMENT(.noinit.*))
 .noinit."WEST_TOPDIR/zephyr/subsys/logging/log_core.c".0
                0x000000003ffe5230      0x400 zephyr/libzephyr.a(log_core.c.obj)
                0x000000003ffe5230                logging_stack
 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".2
                0x000000003ffe5630      0x800 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003ffe5630                z_interrupt_stacks
 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".1
                0x000000003ffe5e30      0x400 zephyr/kernel/libkernel.a(init.c.obj)
 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".0
                0x000000003ffe6230      0x800 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003ffe6230                z_main_stack
 .noinit."WEST_TOPDIR/zephyr/kernel/system_work_q.c".0
                0x000000003ffe6a30      0x400 zephyr/kernel/libkernel.a(system_work_q.c.obj)
                0x000000003ffe6e30                . = ALIGN (0x8)
                0x0000000000005c90                _image_irom_start = LOADADDR (.flash.text)
                0x0000000000004870                _image_irom_size = ((LOADADDR (.flash.text) + SIZEOF (.flash.text)) - _image_irom_start)
                0x00000000400d0020                _image_irom_vaddr = ADDR (.flash.text)

.flash.text     0x00000000400d0020     0x4870 load address 0x0000000000005c90
                0x00000000400d0020                _stext = .
                0x00000000400d0020                _text_start = ABSOLUTE (.)
 *libnet80211.a:(SORT_BY_ALIGNMENT(.wifi0iram) SORT_BY_ALIGNMENT(.wifi0iram.*) SORT_BY_ALIGNMENT(.wifislpiram) SORT_BY_ALIGNMENT(.wifislpiram.*))
 *libpp.a:(SORT_BY_ALIGNMENT(.wifi0iram) SORT_BY_ALIGNMENT(.wifi0iram.*) SORT_BY_ALIGNMENT(.wifislpiram) SORT_BY_ALIGNMENT(.wifislpiram.*) SORT_BY_ALIGNMENT(.wifiorslpiram) SORT_BY_ALIGNMENT(.wifiorslpiram.*))
 *libnet80211.a:(SORT_BY_ALIGNMENT(.wifirxiram) SORT_BY_ALIGNMENT(.wifirxiram.*) SORT_BY_ALIGNMENT(.wifislprxiram) SORT_BY_ALIGNMENT(.wifislprxiram.*))
 *libpp.a:(SORT_BY_ALIGNMENT(.wifirxiram) SORT_BY_ALIGNMENT(.wifirxiram.*) SORT_BY_ALIGNMENT(.wifislprxiram) SORT_BY_ALIGNMENT(.wifislprxiram.*))
 *(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .literal.gpio_pin_configure_dt
                0x00000000400d0020        0x4 app/libapp.a(main.c.obj)
 .literal.button_pressed
                0x00000000400d0024        0x4 app/libapp.a(main.c.obj)
                                          0x8 (size before relaxing)
 .literal.period
                0x00000000400d0028        0x4 app/libapp.a(main.c.obj)
 .literal.button_action_work_handler
                0x00000000400d002c        0x8 app/libapp.a(main.c.obj)
                                         0x18 (size before relaxing)
 .literal.main  0x00000000400d0034       0x2c app/libapp.a(main.c.obj)
                                         0x50 (size before relaxing)
 .literal.free_list_add
                0x00000000400d0060        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.free_list_remove
                0x00000000400d0060        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x8 (size before relaxing)
 .literal.alloc_chunk
                0x00000000400d0060        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x8 (size before relaxing)
 .literal.merge_chunks
                0x00000000400d0060        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0xc (size before relaxing)
 .literal.split_chunks
                0x00000000400d0060        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x8 (size before relaxing)
 .literal.free_chunk
                0x00000000400d0060        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x1c (size before relaxing)
 .literal.sys_heap_free
                0x00000000400d0060        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x8 (size before relaxing)
 .literal.sys_heap_alloc
                0x00000000400d0060        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x14 (size before relaxing)
 .literal.sys_heap_aligned_alloc
                0x00000000400d0060        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x20 (size before relaxing)
 .literal.sys_heap_init
                0x00000000400d0060        0x4 zephyr/libzephyr.a(heap.c.obj)
                                         0x10 (size before relaxing)
 .literal.cbvprintf_package
                0x00000000400d0064       0x18 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
                                         0x1c (size before relaxing)
 .literal.cbpprintf_external
                0x00000000400d007c        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
                                          0x4 (size before relaxing)
 .literal.cbprintf_package_convert
                0x00000000400d007c        0xc zephyr/libzephyr.a(cbprintf_packaged.c.obj)
                                         0x3c (size before relaxing)
 .literal.__printk_hook_install
                0x00000000400d0088        0x4 zephyr/libzephyr.a(printk.c.obj)
 .literal.z_thread_entry
                0x00000000400d008c        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
                                          0x8 (size before relaxing)
 .literal.get_usage
                0x00000000400d008c        0x0 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                                          0x4 (size before relaxing)
 .literal.rd_idx_inc
                0x00000000400d008c        0x0 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                                          0x4 (size before relaxing)
 .literal.add_skip_item
                0x00000000400d008c        0x0 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                                          0x8 (size before relaxing)
 .literal.drop_item_locked
                0x00000000400d008c        0x0 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                                         0x18 (size before relaxing)
 .literal.post_drop_action
                0x00000000400d008c        0x0 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                                          0x8 (size before relaxing)
 .literal.max_utilization_update
                0x00000000400d008c        0x0 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                                          0x4 (size before relaxing)
 .literal.mpsc_pbuf_init
                0x00000000400d008c        0x0 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                                          0x8 (size before relaxing)
 .literal.mpsc_pbuf_alloc
                0x00000000400d008c        0x0 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                                         0x1c (size before relaxing)
 .literal.mpsc_pbuf_commit
                0x00000000400d008c        0x0 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                                          0x8 (size before relaxing)
 .literal.mpsc_pbuf_claim
                0x00000000400d008c        0x0 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                                          0xc (size before relaxing)
 .literal.mpsc_pbuf_free
                0x00000000400d008c        0x0 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                                          0xc (size before relaxing)
 .literal.log_source_name_get
                0x00000000400d008c        0x8 zephyr/libzephyr.a(log_mgmt.c.obj)
 .literal.log_backend_enable
                0x00000000400d0094        0x4 zephyr/libzephyr.a(log_mgmt.c.obj)
                                          0x8 (size before relaxing)
 .literal.uart_hal_set_sclk
                0x00000000400d0098        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_baudrate
                0x00000000400d009c        0xc zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_get_baudrate
                0x00000000400d00a8        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
                                          0xc (size before relaxing)
 .literal.uart_hal_set_hw_flow_ctrl
                0x00000000400d00ac        0xc zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_txfifo_empty_thr
                0x00000000400d00b8        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_mode
                0x00000000400d00bc        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_rx_timeout
                0x00000000400d00c0        0x8 zephyr/libzephyr.a(uart_hal.c.obj)
                                          0xc (size before relaxing)
 .literal.uart_hal_rxfifo_rst
                0x00000000400d00c8       0x14 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .literal.uart_hal_write_txfifo
                0x00000000400d00dc        0x8 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                                         0x10 (size before relaxing)
 .literal.uart_hal_read_rxfifo
                0x00000000400d00e4        0x0 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                                         0x14 (size before relaxing)
 .literal.select_rtc_slow_clk
                0x00000000400d00e4       0x14 zephyr/libzephyr.a(clk.c.obj)
                                         0x2c (size before relaxing)
 .literal.esp_clk_init
                0x00000000400d00f8        0xc zephyr/libzephyr.a(clk.c.obj)
                                         0x2c (size before relaxing)
 .literal.esp_clk_slowclk_cal_set
                0x00000000400d0104        0x4 zephyr/libzephyr.a(esp_clk.c.obj)
 .literal.rtc_clk_cpu_freq_to_pll_mhz
                0x00000000400d0108       0x28 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x40 (size before relaxing)
 .literal.rtc_clk_bbpll_disable
                0x00000000400d0130        0xc zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_32k_enable_common$constprop$0
                0x00000000400d013c        0xc zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_32k_enable
                0x00000000400d0148        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x10 (size before relaxing)
 .literal.rtc_clk_8m_enable
                0x00000000400d0150        0xc zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x10 (size before relaxing)
 .literal.rtc_clk_8m_enabled
                0x00000000400d015c        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_8md256_enabled
                0x00000000400d015c        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_slow_freq_set
                0x00000000400d015c        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0xc (size before relaxing)
 .literal.rtc_clk_slow_freq_get
                0x00000000400d0160        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_fast_freq_set
                0x00000000400d0160        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0xc (size before relaxing)
 .literal.rtc_clk_fast_freq_get
                0x00000000400d0164        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_bbpll_configure
                0x00000000400d0164       0x1c zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x64 (size before relaxing)
 .literal.rtc_clk_xtal_freq_get
                0x00000000400d0180        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_cpu_freq_mhz_to_config
                0x00000000400d0188        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_cpu_freq_get_config
                0x00000000400d0188        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x28 (size before relaxing)
 .literal.rtc_clk_xtal_freq_update
                0x00000000400d0190        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x8 (size before relaxing)
 .literal.rtc_clk_apb_freq_update
                0x00000000400d0194        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_cpu_freq_to_xtal
                0x00000000400d0194        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x24 (size before relaxing)
 .literal.rtc_clk_cpu_freq_set_config
                0x00000000400d0198        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x60 (size before relaxing)
 .literal.rtc_clk_apb_freq_get
                0x00000000400d01a0        0xc zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x14 (size before relaxing)
 .literal.rtc_init
                0x00000000400d01ac       0x74 zephyr/libzephyr.a(rtc_init.c.obj)
                                         0xa0 (size before relaxing)
 .literal.rtc_clk_cal_internal
                0x00000000400d0220       0x28 zephyr/libzephyr.a(rtc_time.c.obj)
                                         0x58 (size before relaxing)
 .literal.rtc_clk_cal_ratio
                0x00000000400d0248        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
                                          0x8 (size before relaxing)
 .literal.rtc_clk_cal
                0x00000000400d0248        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
                                          0xc (size before relaxing)
 .literal.rtc_clk_wait_for_slow_cycle
                0x00000000400d0248        0x4 zephyr/libzephyr.a(rtc_time.c.obj)
                                         0x18 (size before relaxing)
 .literal.rtc_clk_xtal_freq_estimate
                0x00000000400d024c       0x18 zephyr/libzephyr.a(rtc_clk_init.c.obj)
                                         0x48 (size before relaxing)
 .literal.rtc_clk_init
                0x00000000400d0264       0x28 zephyr/libzephyr.a(rtc_clk_init.c.obj)
                                         0x9c (size before relaxing)
 .literal.esp_timer_early_init
                0x00000000400d028c        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
                                          0x4 (size before relaxing)
 .literal.esp_timer_impl_early_init
                0x00000000400d028c       0x24 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
                                         0x28 (size before relaxing)
 .literal.periph_ll_get_rst_en_mask
                0x00000000400d02b0        0x4 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .literal.periph_ll_get_rst_en_reg
                0x00000000400d02b4        0xc zephyr/libzephyr.a(periph_ctrl.c.obj)
 .literal.periph_module_enable
                0x00000000400d02c0       0x18 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x24 (size before relaxing)
 .literal.periph_module_disable
                0x00000000400d02d8        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x24 (size before relaxing)
 .literal.wdt_hal_write_protect_disable
                0x00000000400d02d8        0x4 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .literal.wdt_hal_disable
                0x00000000400d02dc        0x0 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                                          0x4 (size before relaxing)
 .literal.interrupt_controller_hal_desc_type
                0x00000000400d02dc        0x0 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.interrupt_controller_hal_desc_level
                0x00000000400d02dc        0x0 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.interrupt_controller_hal_desc_flags
                0x00000000400d02dc        0x0 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.interrupt_controller_hal_desc_table
                0x00000000400d02dc        0x4 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .literal.esp_reset_reason_init
                0x00000000400d02e0       0x10 zephyr/libzephyr.a(reset_reason.c.obj)
                                         0x14 (size before relaxing)
 .literal.z_isr_install
                0x00000000400d02f0        0x4 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                          0x8 (size before relaxing)
 .literal.arch_irq_connect_dynamic
                0x00000000400d02f4        0x0 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                          0x4 (size before relaxing)
 .literal.abort
                0x00000000400d02f4        0x4 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
                                          0xc (size before relaxing)
 .literal.malloc_prepare
                0x00000000400d02f8        0xc zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                         0x10 (size before relaxing)
 .literal.esp_intr_lock
                0x00000000400d0304        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.esp_intr_unlock
                0x00000000400d0308        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.find_desc_for_int
                0x00000000400d0308        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.default_intr_handler
                0x00000000400d030c        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x8 (size before relaxing)
 .literal.is_vect_desc_usable
                0x00000000400d0310        0x8 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x18 (size before relaxing)
 .literal.get_desc_for_int
                0x00000000400d0318        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x18 (size before relaxing)
 .literal.set_interrupt_handler
                0x00000000400d031c        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x10 (size before relaxing)
 .literal.esp_intr_initialize
                0x00000000400d031c        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x8 (size before relaxing)
 .literal.esp_intr_alloc_intrstatus
                0x00000000400d031c       0x20 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x8c (size before relaxing)
 .literal.esp_intr_alloc
                0x00000000400d033c        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.clock_control_esp32_get_status
                0x00000000400d033c        0x4 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x10 (size before relaxing)
 .literal.clock_control_esp32_get_rate
                0x00000000400d0340        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.clock_control_esp32_off
                0x00000000400d0340        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.clock_control_esp32_on
                0x00000000400d0340        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.clock_control_esp32_init
                0x00000000400d0340       0x2c zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x70 (size before relaxing)
 .literal.uart_console_init
                0x00000000400d036c        0x8 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                                         0x14 (size before relaxing)
 .literal.entropy_esp32_get_entropy
                0x00000000400d0374        0x8 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
                                         0x18 (size before relaxing)
 .literal.rtcio_ll_set_drive_capability
                0x00000000400d037c        0x4 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .literal.gpio_esp32_pin_interrupt_configure
                0x00000000400d0380        0x4 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .literal.gpio_esp32_init
                0x00000000400d0384        0x8 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                          0xc (size before relaxing)
 .literal.gpio_esp32_config
                0x00000000400d038c       0x30 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x48 (size before relaxing)
 .literal.pinctrl_configure_pins
                0x00000000400d03bc       0x10 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
                                         0x34 (size before relaxing)
 .literal.uart_esp32_config_get
                0x00000000400d03cc        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0x18 (size before relaxing)
 .literal.uart_esp32_poll_out
                0x00000000400d03cc        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.uart_esp32_poll_in
                0x00000000400d03cc        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.uart_esp32_configure
                0x00000000400d03cc        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0x3c (size before relaxing)
 .literal.uart_esp32_init
                0x00000000400d03cc        0x8 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0x10 (size before relaxing)
 .text.gpio_pin_configure_dt
                0x00000000400d03d4       0x50 app/libapp.a(main.c.obj)
 .text.button_pressed
                0x00000000400d0424        0xb app/libapp.a(main.c.obj)
                                          0xe (size before relaxing)
                0x00000000400d0424                button_pressed
 *fill*         0x00000000400d042f        0x1 
 .text.period   0x00000000400d0430       0x16 app/libapp.a(main.c.obj)
                0x00000000400d0430                period
 *fill*         0x00000000400d0446        0x2 
 .text.button_action_work_handler
                0x00000000400d0448       0x2c app/libapp.a(main.c.obj)
                                         0x34 (size before relaxing)
                0x00000000400d0448                button_action_work_handler
 .text.main     0x00000000400d0474       0xd9 app/libapp.a(main.c.obj)
                                         0xed (size before relaxing)
                0x00000000400d0474                main
 *fill*         0x00000000400d054d        0x3 
 .text.free_list_add
                0x00000000400d0550       0x5b zephyr/libzephyr.a(heap.c.obj)
 *fill*         0x00000000400d05ab        0x1 
 .text.free_list_remove
                0x00000000400d05ac       0x1e zephyr/libzephyr.a(heap.c.obj)
                                         0x22 (size before relaxing)
 *fill*         0x00000000400d05ca        0x2 
 .text.alloc_chunk
                0x00000000400d05cc       0x77 zephyr/libzephyr.a(heap.c.obj)
 *fill*         0x00000000400d0643        0x1 
 .text.merge_chunks
                0x00000000400d0644       0x2f zephyr/libzephyr.a(heap.c.obj)
                                         0x37 (size before relaxing)
 *fill*         0x00000000400d0673        0x1 
 .text.split_chunks
                0x00000000400d0674       0x38 zephyr/libzephyr.a(heap.c.obj)
                                         0x3c (size before relaxing)
 .text.free_chunk
                0x00000000400d06ac       0x5e zephyr/libzephyr.a(heap.c.obj)
                                         0x76 (size before relaxing)
 *fill*         0x00000000400d070a        0x2 
 .text.sys_heap_free
                0x00000000400d070c       0x24 zephyr/libzephyr.a(heap.c.obj)
                                         0x28 (size before relaxing)
                0x00000000400d070c                sys_heap_free
 .text.sys_heap_alloc
                0x00000000400d0730       0x58 zephyr/libzephyr.a(heap.c.obj)
                                         0x64 (size before relaxing)
                0x00000000400d0730                sys_heap_alloc
 .text.sys_heap_aligned_alloc
                0x00000000400d0788       0xc2 zephyr/libzephyr.a(heap.c.obj)
                                         0xd2 (size before relaxing)
                0x00000000400d0788                sys_heap_aligned_alloc
 *fill*         0x00000000400d084a        0x2 
 .text.sys_heap_init
                0x00000000400d084c       0x7e zephyr/libzephyr.a(heap.c.obj)
                                         0x86 (size before relaxing)
                0x00000000400d084c                sys_heap_init
 *fill*         0x00000000400d08ca        0x2 
 .text.cbvprintf_package
                0x00000000400d08cc      0x425 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
                0x00000000400d08cc                cbvprintf_package
 *fill*         0x00000000400d0cf1        0x3 
 .text.cbpprintf_external
                0x00000000400d0cf4       0x74 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
                0x00000000400d0cf4                cbpprintf_external
 .text.cbprintf_package_convert
                0x00000000400d0d68      0x3ec zephyr/libzephyr.a(cbprintf_packaged.c.obj)
                                        0x3f0 (size before relaxing)
                0x00000000400d0d68                cbprintf_package_convert
 .text.__printk_hook_install
                0x00000000400d1154        0xa zephyr/libzephyr.a(printk.c.obj)
                0x00000000400d1154                __printk_hook_install
 *fill*         0x00000000400d115e        0x2 
 .text.z_thread_entry
                0x00000000400d1160       0x14 zephyr/libzephyr.a(thread_entry.c.obj)
                                         0x18 (size before relaxing)
                0x00000000400d1160                z_thread_entry
 .text.get_usage
                0x00000000400d1174       0x24 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 .text.rd_idx_inc
                0x00000000400d1198       0x19 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                                         0x1d (size before relaxing)
 *fill*         0x00000000400d11b1        0x3 
 .text.add_skip_item
                0x00000000400d11b4       0x3c zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                                         0x40 (size before relaxing)
 .text.drop_item_locked
                0x00000000400d11f0       0xd4 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                                         0xe0 (size before relaxing)
 .text.post_drop_action
                0x00000000400d12c4       0x40 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                                         0x44 (size before relaxing)
 .text.max_utilization_update
                0x00000000400d1304       0x17 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                                         0x1b (size before relaxing)
 *fill*         0x00000000400d131b        0x1 
 .text.mpsc_pbuf_init
                0x00000000400d131c       0x46 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                0x00000000400d131c                mpsc_pbuf_init
 *fill*         0x00000000400d1362        0x2 
 .text.mpsc_pbuf_alloc
                0x00000000400d1364       0xe2 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                                         0xee (size before relaxing)
                0x00000000400d1364                mpsc_pbuf_alloc
 *fill*         0x00000000400d1446        0x2 
 .text.mpsc_pbuf_commit
                0x00000000400d1448       0x30 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                                         0x38 (size before relaxing)
                0x00000000400d1448                mpsc_pbuf_commit
 .text.mpsc_pbuf_claim
                0x00000000400d1478       0x92 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                                         0x96 (size before relaxing)
                0x00000000400d1478                mpsc_pbuf_claim
 *fill*         0x00000000400d150a        0x2 
 .text.mpsc_pbuf_free
                0x00000000400d150c       0x6a zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                                         0x6e (size before relaxing)
                0x00000000400d150c                mpsc_pbuf_free
 *fill*         0x00000000400d1576        0x2 
 .text.log_source_name_get
                0x00000000400d1578       0x1b zephyr/libzephyr.a(log_mgmt.c.obj)
                0x00000000400d1578                log_source_name_get
 *fill*         0x00000000400d1593        0x1 
 .text.log_backend_enable
                0x00000000400d1594       0x2b zephyr/libzephyr.a(log_mgmt.c.obj)
                0x00000000400d1594                log_backend_enable
 *fill*         0x00000000400d15bf        0x1 
 .text.uart_hal_set_sclk
                0x00000000400d15c0       0x24 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d15c0                uart_hal_set_sclk
 .text.uart_hal_set_baudrate
                0x00000000400d15e4       0x50 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d15e4                uart_hal_set_baudrate
 .text.uart_hal_get_baudrate
                0x00000000400d1634       0x41 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d1634                uart_hal_get_baudrate
 *fill*         0x00000000400d1675        0x3 
 .text.uart_hal_set_hw_flow_ctrl
                0x00000000400d1678       0x65 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d1678                uart_hal_set_hw_flow_ctrl
 *fill*         0x00000000400d16dd        0x3 
 .text.uart_hal_set_txfifo_empty_thr
                0x00000000400d16e0       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d16e0                uart_hal_set_txfifo_empty_thr
 .text.uart_hal_set_mode
                0x00000000400d1700      0x19b zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d1700                uart_hal_set_mode
 *fill*         0x00000000400d189b        0x1 
 .text.uart_hal_set_rx_timeout
                0x00000000400d189c       0x63 zephyr/libzephyr.a(uart_hal.c.obj)
                                         0x67 (size before relaxing)
                0x00000000400d189c                uart_hal_set_rx_timeout
 *fill*         0x00000000400d18ff        0x1 
 .text.uart_hal_rxfifo_rst
                0x00000000400d1900       0x57 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                0x00000000400d1900                uart_hal_rxfifo_rst
 *fill*         0x00000000400d1957        0x1 
 .text.uart_hal_write_txfifo
                0x00000000400d1958       0x5b zephyr/libzephyr.a(uart_hal_iram.c.obj)
                0x00000000400d1958                uart_hal_write_txfifo
 *fill*         0x00000000400d19b3        0x1 
 .text.uart_hal_read_rxfifo
                0x00000000400d19b4       0xbd zephyr/libzephyr.a(uart_hal_iram.c.obj)
                0x00000000400d19b4                uart_hal_read_rxfifo
 *fill*         0x00000000400d1a71        0x3 
 .text.select_rtc_slow_clk
                0x00000000400d1a74       0x67 zephyr/libzephyr.a(clk.c.obj)
                                         0x7b (size before relaxing)
 *fill*         0x00000000400d1adb        0x1 
 .text.esp_clk_init
                0x00000000400d1adc       0x59 zephyr/libzephyr.a(clk.c.obj)
                                         0x75 (size before relaxing)
                0x00000000400d1adc                esp_clk_init
 *fill*         0x00000000400d1b35        0x3 
 .text.esp_clk_slowclk_cal_set
                0x00000000400d1b38        0xd zephyr/libzephyr.a(esp_clk.c.obj)
                0x00000000400d1b38                esp_clk_slowclk_cal_set
 *fill*         0x00000000400d1b45        0x3 
 .text.rtc_clk_cpu_freq_to_pll_mhz
                0x00000000400d1b48       0xb5 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0xb9 (size before relaxing)
 *fill*         0x00000000400d1bfd        0x3 
 .text.rtc_clk_bbpll_disable
                0x00000000400d1c00       0x3c zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_32k_enable_common$constprop$0
                0x00000000400d1c3c       0x75 zephyr/libzephyr.a(rtc_clk.c.obj)
 *fill*         0x00000000400d1cb1        0x3 
 .text.rtc_clk_32k_enable
                0x00000000400d1cb4       0x39 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x3d (size before relaxing)
                0x00000000400d1cb4                rtc_clk_32k_enable
 *fill*         0x00000000400d1ced        0x3 
 .text.rtc_clk_8m_enable
                0x00000000400d1cf0       0x82 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d1cf0                rtc_clk_8m_enable
 *fill*         0x00000000400d1d72        0x2 
 .text.rtc_clk_8m_enabled
                0x00000000400d1d74       0x15 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d1d74                rtc_clk_8m_enabled
 *fill*         0x00000000400d1d89        0x3 
 .text.rtc_clk_8md256_enabled
                0x00000000400d1d8c       0x15 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d1d8c                rtc_clk_8md256_enabled
 *fill*         0x00000000400d1da1        0x3 
 .text.rtc_clk_slow_freq_set
                0x00000000400d1da4       0x46 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d1da4                rtc_clk_slow_freq_set
 *fill*         0x00000000400d1dea        0x2 
 .text.rtc_clk_slow_freq_get
                0x00000000400d1dec       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d1dec                rtc_clk_slow_freq_get
 .text.rtc_clk_fast_freq_set
                0x00000000400d1dfc       0x2e zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d1dfc                rtc_clk_fast_freq_set
 *fill*         0x00000000400d1e2a        0x2 
 .text.rtc_clk_fast_freq_get
                0x00000000400d1e2c       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d1e2c                rtc_clk_fast_freq_get
 .text.rtc_clk_bbpll_configure
                0x00000000400d1e3c      0x17e zephyr/libzephyr.a(rtc_clk.c.obj)
                                        0x18e (size before relaxing)
                0x00000000400d1e3c                rtc_clk_bbpll_configure
 *fill*         0x00000000400d1fba        0x2 
 .text.rtc_clk_xtal_freq_get
                0x00000000400d1fbc       0x26 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d1fbc                rtc_get_xtal
                0x00000000400d1fbc                rtc_clk_xtal_freq_get
 *fill*         0x00000000400d1fe2        0x2 
 .text.rtc_clk_cpu_freq_mhz_to_config
                0x00000000400d1fe4       0x56 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x5a (size before relaxing)
                0x00000000400d1fe4                rtc_clk_cpu_freq_mhz_to_config
 *fill*         0x00000000400d203a        0x2 
 .text.rtc_clk_cpu_freq_get_config
                0x00000000400d203c       0x8e zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d203c                rtc_clk_cpu_freq_get_config
 *fill*         0x00000000400d20ca        0x2 
 .text.rtc_clk_xtal_freq_update
                0x00000000400d20cc       0x29 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d20cc                rtc_clk_xtal_freq_update
 *fill*         0x00000000400d20f5        0x3 
 .text.rtc_clk_apb_freq_update
                0x00000000400d20f8       0x19 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d20f8                rtc_clk_apb_freq_update
 *fill*         0x00000000400d2111        0x3 
 .text.rtc_clk_cpu_freq_to_xtal
                0x00000000400d2114       0x74 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x78 (size before relaxing)
                0x00000000400d2114                rtc_clk_cpu_freq_to_xtal
 .text.rtc_clk_cpu_freq_set_config
                0x00000000400d2188      0x10a zephyr/libzephyr.a(rtc_clk.c.obj)
                                        0x132 (size before relaxing)
                0x00000000400d2188                rtc_clk_cpu_freq_set_config
 *fill*         0x00000000400d2292        0x2 
 .text.rtc_clk_apb_freq_get
                0x00000000400d2294       0x2a zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d2294                rtc_clk_apb_freq_get
 *fill*         0x00000000400d22be        0x2 
 .text.rtc_init
                0x00000000400d22c0      0x38c zephyr/libzephyr.a(rtc_init.c.obj)
                0x00000000400d22c0                rtc_init
 .text.rtc_clk_cal_internal
                0x00000000400d264c      0x184 zephyr/libzephyr.a(rtc_time.c.obj)
                                        0x188 (size before relaxing)
 .text.rtc_clk_cal_ratio
                0x00000000400d27d0       0x20 zephyr/libzephyr.a(rtc_time.c.obj)
                                         0x24 (size before relaxing)
                0x00000000400d27d0                rtc_clk_cal_ratio
 .text.rtc_clk_cal
                0x00000000400d27f0       0x4c zephyr/libzephyr.a(rtc_time.c.obj)
                                         0x54 (size before relaxing)
                0x00000000400d27f0                rtc_clk_cal
 .text.rtc_clk_wait_for_slow_cycle
                0x00000000400d283c       0x6a zephyr/libzephyr.a(rtc_time.c.obj)
                0x00000000400d283c                rtc_clk_wait_for_slow_cycle
 *fill*         0x00000000400d28a6        0x2 
 .text.rtc_clk_xtal_freq_estimate
                0x00000000400d28a8       0xcc zephyr/libzephyr.a(rtc_clk_init.c.obj)
                                         0xe0 (size before relaxing)
 .text.rtc_clk_init
                0x00000000400d2974      0x1f6 zephyr/libzephyr.a(rtc_clk_init.c.obj)
                                        0x21a (size before relaxing)
                0x00000000400d2974                rtc_clk_init
 *fill*         0x00000000400d2b6a        0x2 
 .text.esp_timer_early_init
                0x00000000400d2b6c        0xa zephyr/libzephyr.a(esp_timer.c.obj)
                                          0xd (size before relaxing)
                0x00000000400d2b6c                esp_timer_early_init
 *fill*         0x00000000400d2b76        0x2 
 .text.esp_timer_impl_early_init
                0x00000000400d2b78       0x7a zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
                                         0x7e (size before relaxing)
                0x00000000400d2b78                esp_timer_impl_early_init
 *fill*         0x00000000400d2bf2        0x2 
 .text.periph_ll_get_rst_en_mask
                0x00000000400d2bf4       0xc3 zephyr/libzephyr.a(periph_ctrl.c.obj)
 *fill*         0x00000000400d2cb7        0x1 
 .text.periph_ll_get_rst_en_reg
                0x00000000400d2cb8       0x2f zephyr/libzephyr.a(periph_ctrl.c.obj)
 *fill*         0x00000000400d2ce7        0x1 
 .text.periph_module_enable
                0x00000000400d2ce8       0x9b zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x9f (size before relaxing)
                0x00000000400d2ce8                periph_module_enable
 *fill*         0x00000000400d2d83        0x1 
 .text.periph_module_disable
                0x00000000400d2d84       0x99 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x9d (size before relaxing)
                0x00000000400d2d84                periph_module_disable
 *fill*         0x00000000400d2e1d        0x3 
 .text.wdt_hal_write_protect_disable
                0x00000000400d2e20       0x1d zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                0x00000000400d2e20                wdt_hal_write_protect_disable
 *fill*         0x00000000400d2e3d        0x3 
 .text.wdt_hal_disable
                0x00000000400d2e40       0x31 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                0x00000000400d2e40                wdt_hal_disable
 *fill*         0x00000000400d2e71        0x3 
 .text.interrupt_controller_hal_desc_type
                0x00000000400d2e74       0x12 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                0x00000000400d2e74                interrupt_controller_hal_desc_type
 *fill*         0x00000000400d2e86        0x2 
 .text.interrupt_controller_hal_desc_level
                0x00000000400d2e88       0x12 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                0x00000000400d2e88                interrupt_controller_hal_desc_level
 *fill*         0x00000000400d2e9a        0x2 
 .text.interrupt_controller_hal_desc_flags
                0x00000000400d2e9c       0x15 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                0x00000000400d2e9c                interrupt_controller_hal_desc_flags
 *fill*         0x00000000400d2eb1        0x3 
 .text.interrupt_controller_hal_desc_table
                0x00000000400d2eb4        0x8 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
                0x00000000400d2eb4                interrupt_controller_hal_desc_table
 .text.esp_reset_reason_init
                0x00000000400d2ebc       0x98 zephyr/libzephyr.a(reset_reason.c.obj)
                                         0x9c (size before relaxing)
                0x00000000400d2ebc                esp_reset_reason_init
 .text.z_isr_install
                0x00000000400d2f54       0x14 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                         0x18 (size before relaxing)
                0x00000000400d2f54                z_isr_install
 .text.arch_irq_connect_dynamic
                0x00000000400d2f68        0xe zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                         0x12 (size before relaxing)
                0x00000000400d2f68                arch_irq_connect_dynamic
 *fill*         0x00000000400d2f76        0x2 
 .text.abort    0x00000000400d2f78        0xe zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
                                         0x14 (size before relaxing)
                0x00000000400d2f78                abort
 *fill*         0x00000000400d2f86        0x2 
 .text.malloc_prepare
                0x00000000400d2f88       0x21 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 *fill*         0x00000000400d2fa9        0x3 
 .text.esp_intr_lock
                0x00000000400d2fac        0xd zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x00000000400d2fb9        0x3 
 .text.esp_intr_unlock
                0x00000000400d2fbc       0x10 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.find_desc_for_int
                0x00000000400d2fcc       0x23 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x00000000400d2fef        0x1 
 .text.default_intr_handler
                0x00000000400d2ff0       0x13 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x16 (size before relaxing)
                0x00000000400d2ff0                default_intr_handler
 *fill*         0x00000000400d3003        0x1 
 .text.is_vect_desc_usable
                0x00000000400d3004       0xa6 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0xae (size before relaxing)
 *fill*         0x00000000400d30aa        0x2 
 .text.get_desc_for_int
                0x00000000400d30ac       0x94 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x98 (size before relaxing)
 .text.set_interrupt_handler
                0x00000000400d3140       0x2e zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x36 (size before relaxing)
 *fill*         0x00000000400d316e        0x2 
 .text.esp_intr_initialize
                0x00000000400d3170       0x1a zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                0x00000000400d3170                esp_intr_initialize
 *fill*         0x00000000400d318a        0x2 
 .text.esp_intr_alloc_intrstatus
                0x00000000400d318c      0x377 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                        0x39f (size before relaxing)
                0x00000000400d318c                esp_intr_alloc_intrstatus
 *fill*         0x00000000400d3503        0x1 
 .text.esp_intr_alloc
                0x00000000400d3504       0x18 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x1c (size before relaxing)
                0x00000000400d3504                esp_intr_alloc
 .text.clock_control_esp32_get_status
                0x00000000400d351c       0x51 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 *fill*         0x00000000400d356d        0x3 
 .text.clock_control_esp32_get_rate
                0x00000000400d3570       0x10 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x14 (size before relaxing)
 .text.clock_control_esp32_off
                0x00000000400d3580        0xc zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x10 (size before relaxing)
 .text.clock_control_esp32_on
                0x00000000400d358c        0xc zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x10 (size before relaxing)
 .text.clock_control_esp32_init
                0x00000000400d3598      0x1a0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                        0x1b8 (size before relaxing)
 .text.uart_console_init
                0x00000000400d3738       0x20 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                                         0x28 (size before relaxing)
 .text.entropy_esp32_get_entropy
                0x00000000400d3758       0x55 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
                                         0x5d (size before relaxing)
 *fill*         0x00000000400d37ad        0x3 
 .text.rtcio_ll_set_drive_capability
                0x00000000400d37b0       0x3a zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d37ea        0x2 
 .text.gpio_esp32_pin_interrupt_configure
                0x00000000400d37ec      0x114 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .text.gpio_esp32_init
                0x00000000400d3900       0x21 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x25 (size before relaxing)
 *fill*         0x00000000400d3921        0x3 
 .text.gpio_esp32_config
                0x00000000400d3924      0x36e zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                        0x376 (size before relaxing)
 *fill*         0x00000000400d3c92        0x2 
 .text.pinctrl_configure_pins
                0x00000000400d3c94      0x40a zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
                0x00000000400d3c94                pinctrl_configure_pins
 *fill*         0x00000000400d409e        0x2 
 .text.uart_esp32_config_get
                0x00000000400d40a0       0x9a zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0xa6 (size before relaxing)
 *fill*         0x00000000400d413a        0x2 
 .text.uart_esp32_poll_out
                0x00000000400d413c       0x33 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *fill*         0x00000000400d416f        0x1 
 .text.uart_esp32_poll_in
                0x00000000400d4170       0x9a zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *fill*         0x00000000400d420a        0x2 
 .text.uart_esp32_configure
                0x00000000400d420c       0xe2 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                        0x10a (size before relaxing)
 *fill*         0x00000000400d42ee        0x2 
 .text.uart_esp32_init
                0x00000000400d42f0       0x24 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0x2c (size before relaxing)
 .text._OffsetAbsSyms
                0x00000000400d4314        0x5 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
                0x00000000400d4314                _OffsetAbsSyms
 *fill*         0x00000000400d4319        0x0 
 *fill*         0x00000000400d4319        0x0 
 *fill*         0x00000000400d4319        0x0 
 *fill*         0x00000000400d4319        0x3 
 .text.chunk_size
                0x00000000400d431c        0xe zephyr/libzephyr.a(heap.c.obj)
 *fill*         0x00000000400d432a        0x2 
 .text.set_chunk_used
                0x00000000400d432c       0x1a zephyr/libzephyr.a(heap.c.obj)
 *fill*         0x00000000400d4346        0x0 
 *fill*         0x00000000400d4346        0x2 
 .text.free_list_remove_bidx
                0x00000000400d4348       0x3e zephyr/libzephyr.a(heap.c.obj)
 *fill*         0x00000000400d4386        0x0 
 *fill*         0x00000000400d4386        0x0 
 *fill*         0x00000000400d4386        0x0 
 *fill*         0x00000000400d4386        0x0 
 *fill*         0x00000000400d4386        0x0 
 *fill*         0x00000000400d4386        0x0 
 *fill*         0x00000000400d4386        0x0 
 *fill*         0x00000000400d4386        0x2 
 .text.is_ptr   0x00000000400d4388       0x5e zephyr/libzephyr.a(cbprintf_packaged.c.obj)
                0x00000000400d4388                is_ptr
 *fill*         0x00000000400d43e6        0x0 
 *fill*         0x00000000400d43e6        0x2 
 .text.free_space
                0x00000000400d43e8       0x2d zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 *fill*         0x00000000400d4415        0x3 
 .text.idx_inc  0x00000000400d4418       0x1e zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 *fill*         0x00000000400d4436        0x0 
 *fill*         0x00000000400d4436        0x0 
 *fill*         0x00000000400d4436        0x0 
 *fill*         0x00000000400d4436        0x0 
 *fill*         0x00000000400d4436        0x0 
 *fill*         0x00000000400d4436        0x0 
 *fill*         0x00000000400d4436        0x2 
 .text.mpsc_pbuf_is_pending
                0x00000000400d4438       0x20 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                0x00000000400d4438                mpsc_pbuf_is_pending
 .text._ConfigAbsSyms
                0x00000000400d4458        0x5 zephyr/libzephyr.a(configs.c.obj)
                0x00000000400d4458                _ConfigAbsSyms
 *fill*         0x00000000400d445d        0x0 
 *fill*         0x00000000400d445d        0x0 
 *fill*         0x00000000400d445d        0x3 
 .text.sys_trace_idle
                0x00000000400d4460        0x5 zephyr/libzephyr.a(tracing_none.c.obj)
                0x00000000400d4460                sys_trace_idle
 *fill*         0x00000000400d4465        0x0 
 *fill*         0x00000000400d4465        0x3 
 .text.uart_hal_set_stop_bits
                0x00000000400d4468       0x55 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d4468                uart_hal_set_stop_bits
 *fill*         0x00000000400d44bd        0x3 
 .text.uart_hal_get_stop_bits
                0x00000000400d44c0       0x28 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d44c0                uart_hal_get_stop_bits
 .text.uart_hal_set_data_bit_num
                0x00000000400d44e8       0x1f zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d44e8                uart_hal_set_data_bit_num
 *fill*         0x00000000400d4507        0x1 
 .text.uart_hal_get_data_bit_num
                0x00000000400d4508       0x11 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d4508                uart_hal_get_data_bit_num
 *fill*         0x00000000400d4519        0x3 
 .text.uart_hal_set_parity
                0x00000000400d451c       0x35 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d451c                uart_hal_set_parity
 *fill*         0x00000000400d4551        0x3 
 .text.uart_hal_get_parity
                0x00000000400d4554       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d4554                uart_hal_get_parity
 *fill*         0x00000000400d4574        0x0 
 .text.uart_hal_get_hw_flow_ctrl
                0x00000000400d4574       0x24 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d4574                uart_hal_get_hw_flow_ctrl
 .text.uart_hal_set_rxfifo_full_thr
                0x00000000400d4598       0x1d zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d4598                uart_hal_set_rxfifo_full_thr
 *fill*         0x00000000400d45b5        0x0 
 *fill*         0x00000000400d45b5        0x3 
 .text.uart_hal_is_mode_rs485_half_duplex
                0x00000000400d45b8       0x1b zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d45b8                uart_hal_is_mode_rs485_half_duplex
 *fill*         0x00000000400d45d3        0x1 
 .text.uart_hal_get_symb_len
                0x00000000400d45d4       0x7b zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d45d4                uart_hal_get_symb_len
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x0 
 *fill*         0x00000000400d464f        0x1 
 .text.wdt_hal_write_protect_enable
                0x00000000400d4650       0x1c zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                0x00000000400d4650                wdt_hal_write_protect_enable
 *fill*         0x00000000400d466c        0x0 
 *fill*         0x00000000400d466c        0x0 
 *fill*         0x00000000400d466c        0x0 
 *fill*         0x00000000400d466c        0x0 
 .text.z_get_sw_isr_table_idx
                0x00000000400d466c        0x5 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
                0x00000000400d466c                z_get_sw_isr_table_idx
 *fill*         0x00000000400d4671        0x0 
 *fill*         0x00000000400d4671        0x0 
 *fill*         0x00000000400d4671        0x3 
 .text.z_xt_ints_on
                0x00000000400d4674       0x11 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x00000000400d4685        0x3 
 .text.z_xt_ints_off
                0x00000000400d4688       0x16 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x00000000400d469e        0x0 
 *fill*         0x00000000400d469e        0x0 
 *fill*         0x00000000400d469e        0x0 
 *fill*         0x00000000400d469e        0x0 
 *fill*         0x00000000400d469e        0x0 
 *fill*         0x00000000400d469e        0x0 
 *fill*         0x00000000400d469e        0x0 
 *fill*         0x00000000400d469e        0x2 
 .text.clock_control_esp32_async_on
                0x00000000400d46a0        0x8 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 *fill*         0x00000000400d46a8        0x0 
 .text.entropy_esp32_init
                0x00000000400d46a8        0x7 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 *fill*         0x00000000400d46af        0x0 
 *fill*         0x00000000400d46af        0x0 
 *fill*         0x00000000400d46af        0x1 
 .text.gpio_esp32_port_get_raw
                0x00000000400d46b0       0x23 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d46d3        0x1 
 .text.gpio_esp32_port_set_masked_raw
                0x00000000400d46d4       0x49 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d471d        0x3 
 .text.gpio_esp32_port_set_bits_raw
                0x00000000400d4720       0x21 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d4741        0x3 
 .text.gpio_esp32_port_clear_bits_raw
                0x00000000400d4744       0x21 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d4765        0x3 
 .text.gpio_esp32_port_toggle_bits
                0x00000000400d4768       0x3c zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .text.gpio_esp32_manage_callback
                0x00000000400d47a4       0x56 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d47fa        0x0 
 *fill*         0x00000000400d47fa        0x2 
 .text.gpio_esp32_get_pending_int
                0x00000000400d47fc       0x52 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d484e        0x0 
 *fill*         0x00000000400d484e        0x2 
 .text.pinctrl_lookup_state
                0x00000000400d4850       0x2a zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
                0x00000000400d4850                pinctrl_lookup_state
 *fill*         0x00000000400d487a        0x0 
 *fill*         0x00000000400d487a        0x2 
 .text.uart_esp32_err_check
                0x00000000400d487c       0x13 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *fill*         0x00000000400d488f        0x0 
 *fill*         0x00000000400d488f        0x0 
 *fill*         0x00000000400d488f        0x0 
 *fill*         0x00000000400d488f        0x0 
 *fill*         0x00000000400d488f        0x0 
                0x00000000400d4890                . = ALIGN (0x4)
 *fill*         0x00000000400d488f        0x1 
                0x00000000400d4890                _text_end = ABSOLUTE (.)
                0x00000000400d4890                _etext = .
                0x0000000000000000                _flash_cache_start = ABSOLUTE (0x0)
                0x000000003ffe3f20                _heap_sentry = 0x3ffe3f20

.stab
 *(SORT_BY_ALIGNMENT(.stab))

.stabstr
 *(SORT_BY_ALIGNMENT(.stabstr))

.stab.excl
 *(SORT_BY_ALIGNMENT(.stab.excl))

.stab.exclstr
 *(SORT_BY_ALIGNMENT(.stab.exclstr))

.stab.index
 *(SORT_BY_ALIGNMENT(.stab.index))

.stab.indexstr
 *(SORT_BY_ALIGNMENT(.stab.indexstr))

.gnu.build.attributes
 *(SORT_BY_ALIGNMENT(.gnu.build.attributes) SORT_BY_ALIGNMENT(.gnu.build.attributes.*))

.comment        0x0000000000000000       0x20
 *(SORT_BY_ALIGNMENT(.comment))
 .comment       0x0000000000000000       0x20 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
                                         0x21 (size before relaxing)
 .comment       0x0000000000000020       0x21 app/libapp.a(main.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(heap.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(printk.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(thread_entry.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(configs.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(soc.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(loader.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(log_core.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(log_mgmt.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(log_msg.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(log_output.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(log_backend_uart.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(tracing_none.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(uart_hal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(clk.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(gpio_periph.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_clk.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_clk.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_time.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_timer.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(log_noos.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(log.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(reset_reason.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(device.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(fatal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(thread.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(sched.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(idle.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(sem.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(work.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(timeout.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(timer.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(mempool.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(banner.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(kheap.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(system_work_q.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)

.debug
 *(SORT_BY_ALIGNMENT(.debug))

.line
 *(SORT_BY_ALIGNMENT(.line))

.debug_srcinfo
 *(SORT_BY_ALIGNMENT(.debug_srcinfo))

.debug_sfnames
 *(SORT_BY_ALIGNMENT(.debug_sfnames))

.debug_aranges  0x0000000000000000     0x1a80
 *(SORT_BY_ALIGNMENT(.debug_aranges))
 .debug_aranges
                0x0000000000000000       0x20 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .debug_aranges
                0x0000000000000020       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_aranges
                0x0000000000000040       0x70 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_aranges
                0x00000000000000b0       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .debug_aranges
                0x00000000000000d0       0x20 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_aranges
                0x00000000000000f0       0x40 app/libapp.a(main.c.obj)
 .debug_aranges
                0x0000000000000130       0x90 zephyr/libzephyr.a(heap.c.obj)
 .debug_aranges
                0x00000000000001c0       0x40 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_aranges
                0x0000000000000200       0x48 zephyr/libzephyr.a(printk.c.obj)
 .debug_aranges
                0x0000000000000248       0x20 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_aranges
                0x0000000000000268       0xb0 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 .debug_aranges
                0x0000000000000318       0x20 zephyr/libzephyr.a(configs.c.obj)
 .debug_aranges
                0x0000000000000338       0x40 zephyr/libzephyr.a(soc.c.obj)
 .debug_aranges
                0x0000000000000378       0x20 zephyr/libzephyr.a(loader.c.obj)
 .debug_aranges
                0x0000000000000398      0x160 zephyr/libzephyr.a(log_core.c.obj)
 .debug_aranges
                0x00000000000004f8       0xb8 zephyr/libzephyr.a(log_mgmt.c.obj)
 .debug_aranges
                0x00000000000005b0       0x58 zephyr/libzephyr.a(log_msg.c.obj)
 .debug_aranges
                0x0000000000000608       0x70 zephyr/libzephyr.a(log_output.c.obj)
 .debug_aranges
                0x0000000000000678       0x48 zephyr/libzephyr.a(log_backend_uart.c.obj)
 .debug_aranges
                0x00000000000006c0       0x38 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_aranges
                0x00000000000006f8      0x100 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_aranges
                0x00000000000007f8       0x40 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_aranges
                0x0000000000000838       0x38 zephyr/libzephyr.a(clk.c.obj)
 .debug_aranges
                0x0000000000000870       0x18 zephyr/libzephyr.a(gpio_periph.c.obj)
 .debug_aranges
                0x0000000000000888       0x18 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .debug_aranges
                0x00000000000008a0       0x58 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_aranges
                0x00000000000008f8      0x108 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_aranges
                0x0000000000000a00       0x30 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_aranges
                0x0000000000000a30       0x58 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_aranges
                0x0000000000000a88       0x28 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_aranges
                0x0000000000000ab0       0x48 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_aranges
                0x0000000000000af8       0x98 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_aranges
                0x0000000000000b90       0x88 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .debug_aranges
                0x0000000000000c18       0x40 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_aranges
                0x0000000000000c58       0x38 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_aranges
                0x0000000000000c90       0x50 zephyr/libzephyr.a(log.c.obj)
 .debug_aranges
                0x0000000000000ce0       0x70 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .debug_aranges
                0x0000000000000d50       0x30 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .debug_aranges
                0x0000000000000d80       0x20 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .debug_aranges
                0x0000000000000da0       0x38 zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_aranges
                0x0000000000000dd8       0x20 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_aranges
                0x0000000000000df8       0x28 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_aranges
                0x0000000000000e20       0x28 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_aranges
                0x0000000000000e48       0x30 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_aranges
                0x0000000000000e78       0x38 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_aranges
                0x0000000000000eb0       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_aranges
                0x0000000000000ed0       0x68 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_aranges
                0x0000000000000f38       0x38 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .debug_aranges
                0x0000000000000f70       0xb8 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_aranges
                0x0000000000001028       0x20 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_aranges
                0x0000000000001048       0x60 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_aranges
                0x00000000000010a8       0xd0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_aranges
                0x0000000000001178       0x48 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_aranges
                0x00000000000011c0       0x30 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_aranges
                0x00000000000011f0       0x28 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .debug_aranges
                0x0000000000001218       0x80 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_aranges
                0x0000000000001298       0x20 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_aranges
                0x00000000000012b8       0x20 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_aranges
                0x00000000000012d8       0x48 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_aranges
                0x0000000000001320       0x40 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_aranges
                0x0000000000001360       0x20 zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .debug_aranges
                0x0000000000001380       0x38 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_aranges
                0x00000000000013b8       0x60 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_aranges
                0x0000000000001418       0x58 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_aranges
                0x0000000000001470       0xb8 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_aranges
                0x0000000000001528      0x220 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_aranges
                0x0000000000001748       0x30 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_aranges
                0x0000000000001778       0x38 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_aranges
                0x00000000000017b0      0x110 zephyr/kernel/libkernel.a(work.c.obj)
 .debug_aranges
                0x00000000000018c0       0x90 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_aranges
                0x0000000000001950       0x48 zephyr/kernel/libkernel.a(timer.c.obj)
 .debug_aranges
                0x0000000000001998       0x50 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_aranges
                0x00000000000019e8       0x20 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_aranges
                0x0000000000001a08       0x40 zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_aranges
                0x0000000000001a48       0x20 zephyr/kernel/libkernel.a(system_work_q.c.obj)
 .debug_aranges
                0x0000000000001a68       0x18 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)

.debug_pubnames
 *(SORT_BY_ALIGNMENT(.debug_pubnames))

.debug_info     0x0000000000000000    0x6082f
 *(SORT_BY_ALIGNMENT(.debug_info) SORT_BY_ALIGNMENT(.gnu.linkonce.wi.*))
 .debug_info    0x0000000000000000       0xdc zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_info    0x00000000000000dc     0x40b9 app/libapp.a(main.c.obj)
 .debug_info    0x0000000000004195     0x2f57 zephyr/libzephyr.a(heap.c.obj)
 .debug_info    0x00000000000070ec     0x201b zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_info    0x0000000000009107      0x4ad zephyr/libzephyr.a(printk.c.obj)
 .debug_info    0x00000000000095b4      0x5a7 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_info    0x0000000000009b5b     0x1c4f zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 .debug_info    0x000000000000b7aa       0x38 zephyr/libzephyr.a(configs.c.obj)
 .debug_info    0x000000000000b7e2     0x3236 zephyr/libzephyr.a(soc.c.obj)
 .debug_info    0x000000000000ea18       0xa5 zephyr/libzephyr.a(loader.c.obj)
 .debug_info    0x000000000000eabd     0x4393 zephyr/libzephyr.a(log_core.c.obj)
 .debug_info    0x0000000000012e50     0x22a1 zephyr/libzephyr.a(log_mgmt.c.obj)
 .debug_info    0x00000000000150f1     0x1adb zephyr/libzephyr.a(log_msg.c.obj)
 .debug_info    0x0000000000016bcc     0x20c3 zephyr/libzephyr.a(log_output.c.obj)
 .debug_info    0x0000000000018c8f     0x17a5 zephyr/libzephyr.a(log_backend_uart.c.obj)
 .debug_info    0x000000000001a434       0x56 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_info    0x000000000001a48a       0x24 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .debug_info    0x000000000001a4ae     0x2cae zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_info    0x000000000001d15c     0x1986 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_info    0x000000000001eae2      0xb45 zephyr/libzephyr.a(clk.c.obj)
 .debug_info    0x000000000001f627       0xca zephyr/libzephyr.a(gpio_periph.c.obj)
 .debug_info    0x000000000001f6f1      0x1af zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .debug_info    0x000000000001f8a0      0x562 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_info    0x000000000001fe02     0x251e zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_info    0x0000000000022320      0x3d1 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_info    0x00000000000226f1      0x660 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_info    0x0000000000022d51      0xa49 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_info    0x000000000002379a      0x60c zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_info    0x0000000000023da6     0x2653 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_info    0x00000000000263f9      0xc07 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .debug_info    0x0000000000027000      0x752 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_info    0x0000000000027752      0x216 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_info    0x0000000000027968      0x9e2 zephyr/libzephyr.a(log.c.obj)
 .debug_info    0x000000000002834a     0x3b76 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .debug_info    0x000000000002bec0      0x233 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .debug_info    0x000000000002c0f3      0x1f2 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .debug_info    0x000000000002c2e5      0x3fb zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_info    0x000000000002c6e0       0xba zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_info    0x000000000002c79a      0x1e4 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_info    0x000000000002c97e       0xd4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_info    0x000000000002ca52      0x372 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_info    0x000000000002cdc4       0x24 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_info    0x000000000002cde8       0x22 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_info    0x000000000002ce0a      0xf3c zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_info    0x000000000002dd46      0x8d1 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_info    0x000000000002e617     0x9a08 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_info    0x000000000003801f      0x4ff zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .debug_info    0x000000000003851e       0x23 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .debug_info    0x0000000000038541      0xe7e zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_info    0x00000000000393bf      0x121 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_info    0x00000000000394e0      0xd94 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_info    0x000000000003a274     0x281f zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_info    0x000000000003ca93     0x1064 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_info    0x000000000003daf7      0x826 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_info    0x000000000003e31d      0x549 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .debug_info    0x000000000003e866     0x5049 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_info    0x00000000000438af      0x1b2 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_info    0x0000000000043a61     0x18b7 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_info    0x0000000000045318     0x3255 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_info    0x000000000004856d      0x88b zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_info    0x0000000000048df8      0x1b1 zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .debug_info    0x0000000000048fa9      0x33f zephyr/kernel/libkernel.a(device.c.obj)
 .debug_info    0x00000000000492e8     0x25e2 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_info    0x000000000004b8ca     0x17d7 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_info    0x000000000004d0a1     0x265b zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_info    0x000000000004f6fc     0x70d6 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_info    0x00000000000567d2      0x26c zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_info    0x0000000000056a3e      0xbc4 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_info    0x0000000000057602     0x4b4c zephyr/kernel/libkernel.a(work.c.obj)
 .debug_info    0x000000000005c14e     0x15c0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_info    0x000000000005d70e     0x122e zephyr/kernel/libkernel.a(timer.c.obj)
 .debug_info    0x000000000005e93c      0xa60 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_info    0x000000000005f39c       0xc5 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_info    0x000000000005f461      0xa96 zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_info    0x000000000005fef7      0x7e6 zephyr/kernel/libkernel.a(system_work_q.c.obj)
 .debug_info    0x00000000000606dd      0x152 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)

.debug_abbrev   0x0000000000000000     0xedd4
 *(SORT_BY_ALIGNMENT(.debug_abbrev))
 .debug_abbrev  0x0000000000000000       0x62 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_abbrev  0x0000000000000062      0x58d app/libapp.a(main.c.obj)
 .debug_abbrev  0x00000000000005ef      0x42a zephyr/libzephyr.a(heap.c.obj)
 .debug_abbrev  0x0000000000000a19      0x554 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_abbrev  0x0000000000000f6d      0x283 zephyr/libzephyr.a(printk.c.obj)
 .debug_abbrev  0x00000000000011f0      0x234 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_abbrev  0x0000000000001424      0x585 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 .debug_abbrev  0x00000000000019a9       0x2e zephyr/libzephyr.a(configs.c.obj)
 .debug_abbrev  0x00000000000019d7      0x48c zephyr/libzephyr.a(soc.c.obj)
 .debug_abbrev  0x0000000000001e63       0x62 zephyr/libzephyr.a(loader.c.obj)
 .debug_abbrev  0x0000000000001ec5      0x947 zephyr/libzephyr.a(log_core.c.obj)
 .debug_abbrev  0x000000000000280c      0x60e zephyr/libzephyr.a(log_mgmt.c.obj)
 .debug_abbrev  0x0000000000002e1a      0x585 zephyr/libzephyr.a(log_msg.c.obj)
 .debug_abbrev  0x000000000000339f      0x5b3 zephyr/libzephyr.a(log_output.c.obj)
 .debug_abbrev  0x0000000000003952      0x47e zephyr/libzephyr.a(log_backend_uart.c.obj)
 .debug_abbrev  0x0000000000003dd0       0x48 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_abbrev  0x0000000000003e18       0x14 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .debug_abbrev  0x0000000000003e2c      0x3de zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_abbrev  0x000000000000420a      0x369 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_abbrev  0x0000000000004573      0x34f zephyr/libzephyr.a(clk.c.obj)
 .debug_abbrev  0x00000000000048c2       0x70 zephyr/libzephyr.a(gpio_periph.c.obj)
 .debug_abbrev  0x0000000000004932       0xa1 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .debug_abbrev  0x00000000000049d3      0x249 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_abbrev  0x0000000000004c1c      0x584 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_abbrev  0x00000000000051a0      0x16c zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_abbrev  0x000000000000530c      0x21a zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_abbrev  0x0000000000005526      0x2d1 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_abbrev  0x00000000000057f7      0x1f1 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_abbrev  0x00000000000059e8      0x678 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_abbrev  0x0000000000006060      0x47c zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .debug_abbrev  0x00000000000064dc      0x1eb zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_abbrev  0x00000000000066c7      0x11e zephyr/libzephyr.a(log_noos.c.obj)
 .debug_abbrev  0x00000000000067e5      0x43a zephyr/libzephyr.a(log.c.obj)
 .debug_abbrev  0x0000000000006c1f      0x3d9 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .debug_abbrev  0x0000000000006ff8      0x119 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .debug_abbrev  0x0000000000007111       0xd9 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .debug_abbrev  0x00000000000071ea      0x1c2 zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_abbrev  0x00000000000073ac       0x6b zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_abbrev  0x0000000000007417      0x136 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_abbrev  0x000000000000754d       0x8f zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_abbrev  0x00000000000075dc      0x229 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_abbrev  0x0000000000007805       0x14 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_abbrev  0x0000000000007819       0x12 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_abbrev  0x000000000000782b      0x300 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_abbrev  0x0000000000007b2b      0x260 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_abbrev  0x0000000000007d8b      0x548 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_abbrev  0x00000000000082d3      0x1f8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .debug_abbrev  0x00000000000084cb       0x14 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .debug_abbrev  0x00000000000084df      0x49d zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_abbrev  0x000000000000897c       0xba zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_abbrev  0x0000000000008a36      0x45e zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_abbrev  0x0000000000008e94      0x5f3 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_abbrev  0x0000000000009487      0x43d zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_abbrev  0x00000000000098c4      0x38c zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_abbrev  0x0000000000009c50      0x2c6 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .debug_abbrev  0x0000000000009f16      0x6a7 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_abbrev  0x000000000000a5bd       0xd0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_abbrev  0x000000000000a68d      0x3c3 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_abbrev  0x000000000000aa50      0x5e4 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_abbrev  0x000000000000b034      0x365 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_abbrev  0x000000000000b399      0x122 zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .debug_abbrev  0x000000000000b4bb      0x1c7 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_abbrev  0x000000000000b682      0x495 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_abbrev  0x000000000000bb17      0x6a3 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_abbrev  0x000000000000c1ba      0x5ef zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_abbrev  0x000000000000c7a9      0x72b zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_abbrev  0x000000000000ced4      0x17d zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_abbrev  0x000000000000d051      0x37b zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_abbrev  0x000000000000d3cc      0x657 zephyr/kernel/libkernel.a(work.c.obj)
 .debug_abbrev  0x000000000000da23      0x484 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_abbrev  0x000000000000dea7      0x472 zephyr/kernel/libkernel.a(timer.c.obj)
 .debug_abbrev  0x000000000000e319      0x334 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_abbrev  0x000000000000e64d       0x8c zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_abbrev  0x000000000000e6d9      0x3f4 zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_abbrev  0x000000000000eacd      0x220 zephyr/kernel/libkernel.a(system_work_q.c.obj)
 .debug_abbrev  0x000000000000eced       0xe7 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)

.debug_line     0x0000000000000000    0x43059
 *(SORT_BY_ALIGNMENT(.debug_line) SORT_BY_ALIGNMENT(.debug_line.*) SORT_BY_ALIGNMENT(.debug_line_end))
 .debug_line    0x0000000000000000      0x276 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_line    0x0000000000000276     0x11e3 app/libapp.a(main.c.obj)
 .debug_line    0x0000000000001459     0x20f8 zephyr/libzephyr.a(heap.c.obj)
 .debug_line    0x0000000000003551     0x282e zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_line    0x0000000000005d7f      0x4c8 zephyr/libzephyr.a(printk.c.obj)
 .debug_line    0x0000000000006247      0x418 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_line    0x000000000000665f     0x2661 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 .debug_line    0x0000000000008cc0      0x851 zephyr/libzephyr.a(configs.c.obj)
 .debug_line    0x0000000000009511      0xca9 zephyr/libzephyr.a(soc.c.obj)
 .debug_line    0x000000000000a1ba       0x9c zephyr/libzephyr.a(loader.c.obj)
 .debug_line    0x000000000000a256     0x2693 zephyr/libzephyr.a(log_core.c.obj)
 .debug_line    0x000000000000c8e9     0x15c8 zephyr/libzephyr.a(log_mgmt.c.obj)
 .debug_line    0x000000000000deb1     0x121f zephyr/libzephyr.a(log_msg.c.obj)
 .debug_line    0x000000000000f0d0     0x148a zephyr/libzephyr.a(log_output.c.obj)
 .debug_line    0x000000000001055a      0x818 zephyr/libzephyr.a(log_backend_uart.c.obj)
 .debug_line    0x0000000000010d72       0xb1 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_line    0x0000000000010e23      0x338 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .debug_line    0x000000000001115b     0x19a3 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_line    0x0000000000012afe      0x862 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_line    0x0000000000013360      0xae2 zephyr/libzephyr.a(clk.c.obj)
 .debug_line    0x0000000000013e42      0x1be zephyr/libzephyr.a(gpio_periph.c.obj)
 .debug_line    0x0000000000014000      0x1c2 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .debug_line    0x00000000000141c2      0x5b7 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_line    0x0000000000014779     0x1c28 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_line    0x00000000000163a1      0x854 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_line    0x0000000000016bf5      0x96c zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_line    0x0000000000017561      0x92c zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_line    0x0000000000017e8d      0x5de zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_line    0x000000000001846b     0x1eb2 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_line    0x000000000001a31d      0xf30 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .debug_line    0x000000000001b24d      0xabd zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_line    0x000000000001bd0a      0x357 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_line    0x000000000001c061      0xb4d zephyr/libzephyr.a(log.c.obj)
 .debug_line    0x000000000001cbae     0x15f2 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .debug_line    0x000000000001e1a0      0x1fe zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .debug_line    0x000000000001e39e      0x16a zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .debug_line    0x000000000001e508      0x5dd zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_line    0x000000000001eae5       0xa2 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_line    0x000000000001eb87      0x274 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_line    0x000000000001edfb      0x103 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_line    0x000000000001eefe      0x39b zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_line    0x000000000001f299      0x227 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_line    0x000000000001f4c0      0x399 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_line    0x000000000001f859      0xb1c zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_line    0x0000000000020375      0x5cd zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_line    0x0000000000020942     0x6191 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_line    0x0000000000026ad3      0x76b zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .debug_line    0x000000000002723e       0xb0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .debug_line    0x00000000000272ee      0xa98 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_line    0x0000000000027d86      0x1c7 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_line    0x0000000000027f4d      0x939 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_line    0x0000000000028886     0x25af zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_line    0x000000000002ae35      0xc8b zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_line    0x000000000002bac0      0x4f6 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_line    0x000000000002bfb6      0x59f zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .debug_line    0x000000000002c555     0x2435 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_line    0x000000000002e98a      0x282 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_line    0x000000000002ec0c      0xf9e zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_line    0x000000000002fbaa      0xddf zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_line    0x0000000000030989      0x88a zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_line    0x0000000000031213      0x31f zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .debug_line    0x0000000000031532      0x519 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_line    0x0000000000031a4b     0x16a6 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_line    0x00000000000330f1     0x10c0 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_line    0x00000000000341b1     0x12b2 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_line    0x0000000000035463     0x5726 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_line    0x000000000003ab89      0x3a5 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_line    0x000000000003af2e      0x998 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_line    0x000000000003b8c6     0x3a3b zephyr/kernel/libkernel.a(work.c.obj)
 .debug_line    0x000000000003f301     0x17d5 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_line    0x0000000000040ad6      0xfb9 zephyr/kernel/libkernel.a(timer.c.obj)
 .debug_line    0x0000000000041a8f      0x7a7 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_line    0x0000000000042236       0xbb zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_line    0x00000000000422f1      0x83b zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_line    0x0000000000042b2c      0x3b5 zephyr/kernel/libkernel.a(system_work_q.c.obj)
 .debug_line    0x0000000000042ee1      0x178 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)

.debug_frame    0x0000000000000000     0x3e2c
 *(SORT_BY_ALIGNMENT(.debug_frame))
 .debug_frame   0x0000000000000000       0x28 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_frame   0x0000000000000028       0x88 app/libapp.a(main.c.obj)
 .debug_frame   0x00000000000000b0      0x178 zephyr/libzephyr.a(heap.c.obj)
 .debug_frame   0x0000000000000228       0x8c zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_frame   0x00000000000002b4       0xa0 zephyr/libzephyr.a(printk.c.obj)
 .debug_frame   0x0000000000000354       0x28 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_frame   0x000000000000037c      0x1d8 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 .debug_frame   0x0000000000000554       0x28 zephyr/libzephyr.a(configs.c.obj)
 .debug_frame   0x000000000000057c       0x88 zephyr/libzephyr.a(soc.c.obj)
 .debug_frame   0x0000000000000604       0x28 zephyr/libzephyr.a(loader.c.obj)
 .debug_frame   0x000000000000062c      0x3e8 zephyr/libzephyr.a(log_core.c.obj)
 .debug_frame   0x0000000000000a14      0x1f0 zephyr/libzephyr.a(log_mgmt.c.obj)
 .debug_frame   0x0000000000000c04       0xd0 zephyr/libzephyr.a(log_msg.c.obj)
 .debug_frame   0x0000000000000cd4      0x118 zephyr/libzephyr.a(log_output.c.obj)
 .debug_frame   0x0000000000000dec       0xa0 zephyr/libzephyr.a(log_backend_uart.c.obj)
 .debug_frame   0x0000000000000e8c       0x70 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_frame   0x0000000000000efc      0x2c8 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_frame   0x00000000000011c4       0x88 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_frame   0x000000000000124c       0x70 zephyr/libzephyr.a(clk.c.obj)
 .debug_frame   0x00000000000012bc       0xd0 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_frame   0x000000000000138c      0x2e0 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_frame   0x000000000000166c       0x58 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_frame   0x00000000000016c4       0xd0 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_frame   0x0000000000001794       0x40 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_frame   0x00000000000017d4       0xa0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_frame   0x0000000000001874      0x190 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_frame   0x0000000000001a04      0x160 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .debug_frame   0x0000000000001b64       0x88 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_frame   0x0000000000001bec       0x70 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_frame   0x0000000000001c5c       0xb8 zephyr/libzephyr.a(log.c.obj)
 .debug_frame   0x0000000000001d14      0x118 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .debug_frame   0x0000000000001e2c       0x58 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .debug_frame   0x0000000000001e84       0x28 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .debug_frame   0x0000000000001eac       0x70 zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_frame   0x0000000000001f1c       0x28 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_frame   0x0000000000001f44       0x40 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_frame   0x0000000000001f84       0x40 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_frame   0x0000000000001fc4       0x58 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_frame   0x000000000000201c       0x70 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_frame   0x000000000000208c       0x28 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_frame   0x00000000000020b4      0x100 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_frame   0x00000000000021b4       0x70 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .debug_frame   0x0000000000002224      0x1f0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_frame   0x0000000000002414       0x28 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_frame   0x000000000000243c       0xe8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_frame   0x0000000000002524      0x238 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_frame   0x000000000000275c       0xa0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_frame   0x00000000000027fc       0x58 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_frame   0x0000000000002854       0x40 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .debug_frame   0x0000000000002894      0x148 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_frame   0x00000000000029dc       0x28 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_frame   0x0000000000002a04       0x28 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_frame   0x0000000000002a2c       0xa0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_frame   0x0000000000002acc       0x88 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_frame   0x0000000000002b54       0x28 zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .debug_frame   0x0000000000002b7c       0x70 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_frame   0x0000000000002bec       0xe8 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_frame   0x0000000000002cd4       0xd0 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_frame   0x0000000000002da4      0x1f0 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_frame   0x0000000000002f94      0x628 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_frame   0x00000000000035bc       0x58 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_frame   0x0000000000003614       0x70 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_frame   0x0000000000003684      0x2f8 zephyr/kernel/libkernel.a(work.c.obj)
 .debug_frame   0x000000000000397c      0x178 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_frame   0x0000000000003af4       0xa0 zephyr/kernel/libkernel.a(timer.c.obj)
 .debug_frame   0x0000000000003b94       0xb8 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_frame   0x0000000000003c4c       0x28 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_frame   0x0000000000003c74       0x88 zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_frame   0x0000000000003cfc       0x28 zephyr/kernel/libkernel.a(system_work_q.c.obj)
 .debug_frame   0x0000000000003d24       0x28 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .debug_frame   0x0000000000003d4c       0x28 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .debug_frame   0x0000000000003d74       0x28 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
 .debug_frame   0x0000000000003d9c       0x28 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .debug_frame   0x0000000000003dc4       0x40 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .debug_frame   0x0000000000003e04       0x28 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)

.debug_str      0x0000000000000000     0xd5aa
 *(SORT_BY_ALIGNMENT(.debug_str))
 .debug_str     0x0000000000000000      0x2da zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
                                        0x313 (size before relaxing)
 .debug_str     0x00000000000002da      0xaec app/libapp.a(main.c.obj)
                                       0x1012 (size before relaxing)
 .debug_str     0x0000000000000dc6      0x3ba zephyr/libzephyr.a(heap.c.obj)
                                        0x69a (size before relaxing)
 .debug_str     0x0000000000001180      0x345 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
                                        0xa73 (size before relaxing)
 .debug_str     0x00000000000014c5       0xef zephyr/libzephyr.a(printk.c.obj)
                                        0x4e9 (size before relaxing)
 .debug_str     0x00000000000015b4       0xaa zephyr/libzephyr.a(thread_entry.c.obj)
                                        0x4d7 (size before relaxing)
 .debug_str     0x000000000000165e      0x39b zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                                        0x6f9 (size before relaxing)
 .debug_str     0x00000000000019f9       0x60 zephyr/libzephyr.a(configs.c.obj)
                                        0x18a (size before relaxing)
 .debug_str     0x0000000000001a59     0x1727 zephyr/libzephyr.a(soc.c.obj)
                                       0x1c63 (size before relaxing)
 .debug_str     0x0000000000003180       0x56 zephyr/libzephyr.a(loader.c.obj)
                                        0x230 (size before relaxing)
 .debug_str     0x00000000000031d6      0xb2e zephyr/libzephyr.a(log_core.c.obj)
                                       0x1b34 (size before relaxing)
 .debug_str     0x0000000000003d04      0x55e zephyr/libzephyr.a(log_mgmt.c.obj)
                                        0xebe (size before relaxing)
 .debug_str     0x0000000000004262       0xf3 zephyr/libzephyr.a(log_msg.c.obj)
                                        0xb1e (size before relaxing)
 .debug_str     0x0000000000004355      0x2b2 zephyr/libzephyr.a(log_output.c.obj)
                                        0xb8b (size before relaxing)
 .debug_str     0x0000000000004607      0x20e zephyr/libzephyr.a(log_backend_uart.c.obj)
                                        0xd1a (size before relaxing)
 .debug_str     0x0000000000004815       0x98 zephyr/libzephyr.a(tracing_none.c.obj)
                                        0x1c2 (size before relaxing)
 .debug_str     0x00000000000048ad       0x66 zephyr/libzephyr.a(windowspill_asm.S.obj)
                                         0x97 (size before relaxing)
 .debug_str     0x0000000000004913      0xfcb zephyr/libzephyr.a(uart_hal.c.obj)
                                       0x12f5 (size before relaxing)
 .debug_str     0x00000000000058de      0x1a1 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                                        0xa14 (size before relaxing)
 .debug_str     0x0000000000005a7f      0xb70 zephyr/libzephyr.a(clk.c.obj)
                                        0xdeb (size before relaxing)
 .debug_str     0x00000000000065ef       0x76 zephyr/libzephyr.a(gpio_periph.c.obj)
                                        0x238 (size before relaxing)
 .debug_str     0x0000000000006665       0xb8 zephyr/libzephyr.a(rtc_io_periph.c.obj)
                                        0x28f (size before relaxing)
 .debug_str     0x000000000000671d      0x340 zephyr/libzephyr.a(esp_clk.c.obj)
                                        0x90e (size before relaxing)
 .debug_str     0x0000000000006a5d      0x909 zephyr/libzephyr.a(rtc_clk.c.obj)
                                       0x1295 (size before relaxing)
 .debug_str     0x0000000000007366       0xef zephyr/libzephyr.a(rtc_init.c.obj)
                                        0x351 (size before relaxing)
 .debug_str     0x0000000000007455      0x17f zephyr/libzephyr.a(rtc_time.c.obj)
                                        0x72e (size before relaxing)
 .debug_str     0x00000000000075d4       0xfd zephyr/libzephyr.a(rtc_clk_init.c.obj)
                                        0xacd (size before relaxing)
 .debug_str     0x00000000000076d1       0xf7 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                                        0x4d7 (size before relaxing)
 .debug_str     0x00000000000077c8      0x475 zephyr/libzephyr.a(esp_timer.c.obj)
                                       0x1124 (size before relaxing)
 .debug_str     0x0000000000007c3d      0x22e zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
                                        0xe0e (size before relaxing)
 .debug_str     0x0000000000007e6b      0x152 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                        0x802 (size before relaxing)
 .debug_str     0x0000000000007fbd       0xbb zephyr/libzephyr.a(log_noos.c.obj)
                                        0x459 (size before relaxing)
 .debug_str     0x0000000000008078      0x25c zephyr/libzephyr.a(log.c.obj)
                                        0x5cb (size before relaxing)
 .debug_str     0x00000000000082d4      0x4a2 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                                       0x1df2 (size before relaxing)
 .debug_str     0x0000000000008776      0x182 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                                        0x35d (size before relaxing)
 .debug_str     0x00000000000088f8       0x80 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
                                        0x47f (size before relaxing)
 .debug_str     0x0000000000008978      0x1af zephyr/libzephyr.a(reset_reason.c.obj)
                                        0x726 (size before relaxing)
 .debug_str     0x0000000000008b27       0x57 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
                                        0x226 (size before relaxing)
 .debug_str     0x0000000000008b7e       0x83 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                        0x2a5 (size before relaxing)
 .debug_str     0x0000000000008c01       0x63 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                                        0x237 (size before relaxing)
 .debug_str     0x0000000000008c64      0x160 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                        0x3f1 (size before relaxing)
 .debug_str     0x0000000000008dc4       0x46 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
                                         0x83 (size before relaxing)
 .debug_str     0x0000000000008e0a       0x48 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x85 (size before relaxing)
 .debug_str     0x0000000000008e52       0xa7 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                        0x9a7 (size before relaxing)
 .debug_str     0x0000000000008ef9      0x142 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
                                        0x659 (size before relaxing)
 .debug_str     0x000000000000903b      0x2c9 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                        0xf45 (size before relaxing)
 .debug_str     0x0000000000009304      0x157 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
                                        0x374 (size before relaxing)
 .debug_str     0x000000000000945b       0x49 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
                                         0x86 (size before relaxing)
 .debug_str     0x00000000000094a4      0x2ab zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                                        0x9fd (size before relaxing)
 .debug_str     0x000000000000974f      0x157 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
                                        0x2ca (size before relaxing)
 .debug_str     0x00000000000098a6      0x13c zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                        0x782 (size before relaxing)
 .debug_str     0x00000000000099e2      0x574 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                        0xf85 (size before relaxing)
 .debug_str     0x0000000000009f56      0x33a zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                       0x1047 (size before relaxing)
 .debug_str     0x000000000000a290      0x117 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                                        0x563 (size before relaxing)
 .debug_str     0x000000000000a3a7      0x13f zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
                                        0x453 (size before relaxing)
 .debug_str     0x000000000000a4e6      0x798 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                       0x1b04 (size before relaxing)
 .debug_str     0x000000000000ac7e       0xbc zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
                                        0x2b9 (size before relaxing)
 .debug_str     0x000000000000ad3a      0x129 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
                                        0xaaa (size before relaxing)
 .debug_str     0x000000000000ae63      0x5e4 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                       0x1a86 (size before relaxing)
 .debug_str     0x000000000000b447       0xe5 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                        0x47d (size before relaxing)
 .debug_str     0x000000000000b52c       0x62 zephyr/kernel/libkernel.a(busy_wait.c.obj)
                                        0x2a9 (size before relaxing)
 .debug_str     0x000000000000b58e       0xb4 zephyr/kernel/libkernel.a(device.c.obj)
                                        0x301 (size before relaxing)
 .debug_str     0x000000000000b642      0x23f zephyr/kernel/libkernel.a(fatal.c.obj)
                                        0xe43 (size before relaxing)
 .debug_str     0x000000000000b881      0x46b zephyr/kernel/libkernel.a(init.c.obj)
                                        0xdf5 (size before relaxing)
 .debug_str     0x000000000000bcec      0x3eb zephyr/kernel/libkernel.a(thread.c.obj)
                                        0xe3f (size before relaxing)
 .debug_str     0x000000000000c0d7      0x929 zephyr/kernel/libkernel.a(sched.c.obj)
                                       0x161a (size before relaxing)
 .debug_str     0x000000000000ca00       0x7e zephyr/kernel/libkernel.a(idle.c.obj)
                                        0x323 (size before relaxing)
 .debug_str     0x000000000000ca7e       0x57 zephyr/kernel/libkernel.a(sem.c.obj)
                                        0x774 (size before relaxing)
 .debug_str     0x000000000000cad5      0x6a3 zephyr/kernel/libkernel.a(work.c.obj)
                                       0x112f (size before relaxing)
 .debug_str     0x000000000000d178      0x136 zephyr/kernel/libkernel.a(timeout.c.obj)
                                        0x775 (size before relaxing)
 .debug_str     0x000000000000d2ae       0x9b zephyr/kernel/libkernel.a(timer.c.obj)
                                        0x8ef (size before relaxing)
 .debug_str     0x000000000000d349       0xcf zephyr/kernel/libkernel.a(mempool.c.obj)
                                        0x76b (size before relaxing)
 .debug_str     0x000000000000d418       0x34 zephyr/kernel/libkernel.a(banner.c.obj)
                                        0x20c (size before relaxing)
 .debug_str     0x000000000000d44c       0xa3 zephyr/kernel/libkernel.a(kheap.c.obj)
                                        0x6b1 (size before relaxing)
 .debug_str     0x000000000000d4ef       0x65 zephyr/kernel/libkernel.a(system_work_q.c.obj)
                                        0x713 (size before relaxing)
 .debug_str     0x000000000000d554       0x56 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
                                        0x26f (size before relaxing)

.debug_loc      0x0000000000000000    0x200a2
 *(SORT_BY_ALIGNMENT(.debug_loc))
 .debug_loc     0x0000000000000000      0x905 app/libapp.a(main.c.obj)
 .debug_loc     0x0000000000000905     0x2dd1 zephyr/libzephyr.a(heap.c.obj)
 .debug_loc     0x00000000000036d6     0x202a zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_loc     0x0000000000005700       0xd4 zephyr/libzephyr.a(printk.c.obj)
 .debug_loc     0x00000000000057d4       0x15 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_loc     0x00000000000057e9      0xb99 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 .debug_loc     0x0000000000006382      0x18a zephyr/libzephyr.a(soc.c.obj)
 .debug_loc     0x000000000000650c     0x1115 zephyr/libzephyr.a(log_core.c.obj)
 .debug_loc     0x0000000000007621      0xbce zephyr/libzephyr.a(log_mgmt.c.obj)
 .debug_loc     0x00000000000081ef      0xb14 zephyr/libzephyr.a(log_msg.c.obj)
 .debug_loc     0x0000000000008d03     0x114e zephyr/libzephyr.a(log_output.c.obj)
 .debug_loc     0x0000000000009e51      0x2eb zephyr/libzephyr.a(log_backend_uart.c.obj)
 .debug_loc     0x000000000000a13c      0xf9d zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_loc     0x000000000000b0d9      0x3c1 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_loc     0x000000000000b49a      0x325 zephyr/libzephyr.a(clk.c.obj)
 .debug_loc     0x000000000000b7bf       0x6b zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_loc     0x000000000000b82a      0xe27 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_loc     0x000000000000c651      0x4c6 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_loc     0x000000000000cb17      0x326 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_loc     0x000000000000ce3d      0x20e zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_loc     0x000000000000d04b      0x1cf zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_loc     0x000000000000d21a      0xd3d zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_loc     0x000000000000df57      0x33c zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .debug_loc     0x000000000000e293      0x27f zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_loc     0x000000000000e512       0x15 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_loc     0x000000000000e527      0x52c zephyr/libzephyr.a(log.c.obj)
 .debug_loc     0x000000000000ea53      0xdd1 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .debug_loc     0x000000000000f824       0xd3 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .debug_loc     0x000000000000f8f7      0x13b zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_loc     0x000000000000fa32       0x15 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_loc     0x000000000000fa47       0x15 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_loc     0x000000000000fa5c       0x71 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_loc     0x000000000000facd      0x288 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_loc     0x000000000000fd55      0x10d zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_loc     0x000000000000fe62     0x3490 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_loc     0x00000000000132f2      0x334 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .debug_loc     0x0000000000013626      0x195 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_loc     0x00000000000137bb      0x360 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_loc     0x0000000000013b1b     0x1315 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_loc     0x0000000000014e30      0x414 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_loc     0x0000000000015244       0x56 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_loc     0x000000000001529a      0x187 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .debug_loc     0x0000000000015421     0x17bc zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_loc     0x0000000000016bdd       0x42 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_loc     0x0000000000016c1f      0x81e zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_loc     0x000000000001743d      0x526 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_loc     0x0000000000017963      0x285 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_loc     0x0000000000017be8       0x64 zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .debug_loc     0x0000000000017c4c       0x96 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_loc     0x0000000000017ce2      0x69f zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_loc     0x0000000000018381      0x37f zephyr/kernel/libkernel.a(init.c.obj)
 .debug_loc     0x0000000000018700      0x76f zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_loc     0x0000000000018e6f     0x2dfb zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_loc     0x000000000001bc6a       0x3f zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_loc     0x000000000001bca9      0x3af zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_loc     0x000000000001c058     0x29dc zephyr/kernel/libkernel.a(work.c.obj)
 .debug_loc     0x000000000001ea34      0xb42 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_loc     0x000000000001f576      0x5b0 zephyr/kernel/libkernel.a(timer.c.obj)
 .debug_loc     0x000000000001fb26      0x31c zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_loc     0x000000000001fe42      0x260 zephyr/kernel/libkernel.a(kheap.c.obj)

.debug_macinfo
 *(SORT_BY_ALIGNMENT(.debug_macinfo))

.debug_weaknames
 *(SORT_BY_ALIGNMENT(.debug_weaknames))

.debug_funcnames
 *(SORT_BY_ALIGNMENT(.debug_funcnames))

.debug_typenames
 *(SORT_BY_ALIGNMENT(.debug_typenames))

.debug_varnames
 *(SORT_BY_ALIGNMENT(.debug_varnames))

.debug_pubtypes
 *(SORT_BY_ALIGNMENT(.debug_pubtypes))

.debug_ranges   0x0000000000000000     0x5e98
 *(SORT_BY_ALIGNMENT(.debug_ranges))
 .debug_ranges  0x0000000000000000       0x68 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_ranges  0x0000000000000068       0x10 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_ranges  0x0000000000000078      0x180 app/libapp.a(main.c.obj)
 .debug_ranges  0x00000000000001f8      0x378 zephyr/libzephyr.a(heap.c.obj)
 .debug_ranges  0x0000000000000570      0x3e8 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_ranges  0x0000000000000958       0x58 zephyr/libzephyr.a(printk.c.obj)
 .debug_ranges  0x00000000000009b0       0x10 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_ranges  0x00000000000009c0      0x2a0 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 .debug_ranges  0x0000000000000c60       0x10 zephyr/libzephyr.a(configs.c.obj)
 .debug_ranges  0x0000000000000c70       0x98 zephyr/libzephyr.a(soc.c.obj)
 .debug_ranges  0x0000000000000d08       0x10 zephyr/libzephyr.a(loader.c.obj)
 .debug_ranges  0x0000000000000d18      0x4a8 zephyr/libzephyr.a(log_core.c.obj)
 .debug_ranges  0x00000000000011c0      0x468 zephyr/libzephyr.a(log_mgmt.c.obj)
 .debug_ranges  0x0000000000001628      0x2b8 zephyr/libzephyr.a(log_msg.c.obj)
 .debug_ranges  0x00000000000018e0      0x178 zephyr/libzephyr.a(log_output.c.obj)
 .debug_ranges  0x0000000000001a58       0x88 zephyr/libzephyr.a(log_backend_uart.c.obj)
 .debug_ranges  0x0000000000001ae0       0x28 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_ranges  0x0000000000001b08      0x1a0 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_ranges  0x0000000000001ca8       0xc8 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_ranges  0x0000000000001d70      0x100 zephyr/libzephyr.a(clk.c.obj)
 .debug_ranges  0x0000000000001e70       0x60 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_ranges  0x0000000000001ed0      0x1c8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_ranges  0x0000000000002098       0x50 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_ranges  0x00000000000020e8       0x48 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_ranges  0x0000000000002130       0x48 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_ranges  0x0000000000002178       0xb0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_ranges  0x0000000000002228      0x1d0 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_ranges  0x00000000000023f8       0xc0 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .debug_ranges  0x00000000000024b8      0x160 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_ranges  0x0000000000002618       0x28 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_ranges  0x0000000000002640       0x98 zephyr/libzephyr.a(log.c.obj)
 .debug_ranges  0x00000000000026d8      0x180 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .debug_ranges  0x0000000000002858       0x20 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .debug_ranges  0x0000000000002878       0x10 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .debug_ranges  0x0000000000002888       0x40 zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_ranges  0x00000000000028c8       0x10 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_ranges  0x00000000000028d8       0x18 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_ranges  0x00000000000028f0       0x18 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_ranges  0x0000000000002908       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_ranges  0x0000000000002928      0x100 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_ranges  0x0000000000002a28       0x10 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_ranges  0x0000000000002a38     0x1278 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_ranges  0x0000000000003cb0       0x60 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .debug_ranges  0x0000000000003d10       0xc0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_ranges  0x0000000000003dd0       0x10 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_ranges  0x0000000000003de0       0x68 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_ranges  0x0000000000003e48      0x230 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_ranges  0x0000000000004078      0x120 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_ranges  0x0000000000004198       0x50 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_ranges  0x00000000000041e8       0x68 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .debug_ranges  0x0000000000004250      0x260 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_ranges  0x00000000000044b0       0x10 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_ranges  0x00000000000044c0      0x140 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_ranges  0x0000000000004600       0xc0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_ranges  0x00000000000046c0       0x48 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_ranges  0x0000000000004708       0x28 zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .debug_ranges  0x0000000000004730       0x70 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_ranges  0x00000000000047a0      0x3a0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_ranges  0x0000000000004b40      0x120 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_ranges  0x0000000000004c60      0x1a0 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_ranges  0x0000000000004e00      0x7f8 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_ranges  0x00000000000055f8       0x20 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_ranges  0x0000000000005618       0x58 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_ranges  0x0000000000005670      0x448 zephyr/kernel/libkernel.a(work.c.obj)
 .debug_ranges  0x0000000000005ab8      0x240 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_ranges  0x0000000000005cf8       0xb0 zephyr/kernel/libkernel.a(timer.c.obj)
 .debug_ranges  0x0000000000005da8       0x40 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_ranges  0x0000000000005de8       0x10 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_ranges  0x0000000000005df8       0x90 zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_ranges  0x0000000000005e88       0x10 zephyr/kernel/libkernel.a(system_work_q.c.obj)

.debug_macro
 *(SORT_BY_ALIGNMENT(.debug_macro))

.debug_line_str
 *(SORT_BY_ALIGNMENT(.debug_line_str))

.debug_loclists
 *(SORT_BY_ALIGNMENT(.debug_loclists))

.debug_rnglists
 *(SORT_BY_ALIGNMENT(.debug_rnglists))

.xtensa.info    0x0000000000000000       0x38
 *(SORT_BY_ALIGNMENT(.xtensa.info))
 .xtensa.info   0x0000000000000000       0x38 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .xtensa.info   0x0000000000000038        0x0 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .xtensa.info   0x0000000000000038        0x0 app/libapp.a(main.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(heap.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(printk.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(sem.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(assert.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(dec.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(hex.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rb.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(configs.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(soc.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(loader.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp32-mp.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(log_core.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(log_mgmt.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(log_cache.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(log_msg.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(log_output.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(log_backend_uart.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(uart_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(clk.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(adc_periph.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(i2s_periph.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(gpio_periph.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_clk.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(log_noos.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(log.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(bootloader_efuse_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(reset_reason.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_system_api.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(heap_caps.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(dport_access.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(stubs.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(device.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(work.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(timer.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(system_work_q.c.obj)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_ctype_ctype_.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)

.xt.insn
 *(SORT_BY_ALIGNMENT(.xt.insn))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.x.*))

.xt.prop        0x0000000000000000     0x8118
 *(SORT_BY_ALIGNMENT(.xt.prop))
 .xt.prop       0x0000000000000000       0x24 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .xt.prop       0x0000000000000024      0x1ec app/libapp.a(main.c.obj)
 .xt.prop       0x0000000000000210      0x2d0 zephyr/libzephyr.a(heap.c.obj)
                                        0x444 (size before relaxing)
 .xt.prop       0x00000000000004e0      0x708 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
                                        0x744 (size before relaxing)
 .xt.prop       0x0000000000000be8       0x60 zephyr/libzephyr.a(printk.c.obj)
                                        0x144 (size before relaxing)
 .xt.prop       0x0000000000000c48        0x0 zephyr/libzephyr.a(sem.c.obj)
                                         0xcc (size before relaxing)
 .xt.prop       0x0000000000000c48       0x18 zephyr/libzephyr.a(thread_entry.c.obj)
                                         0x24 (size before relaxing)
 .xt.prop       0x0000000000000c60        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
                                        0xa44 (size before relaxing)
 .xt.prop       0x0000000000000c60        0x0 zephyr/libzephyr.a(assert.c.obj)
                                         0x6c (size before relaxing)
 .xt.prop       0x0000000000000c60      0x414 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                                        0x6c0 (size before relaxing)
 .xt.prop       0x0000000000001074        0x0 zephyr/libzephyr.a(dec.c.obj)
                                         0x84 (size before relaxing)
 .xt.prop       0x0000000000001074        0x0 zephyr/libzephyr.a(hex.c.obj)
                                        0x198 (size before relaxing)
 .xt.prop       0x0000000000001074        0x0 zephyr/libzephyr.a(rb.c.obj)
                                        0x5d0 (size before relaxing)
 .xt.prop       0x0000000000001074        0x0 zephyr/libzephyr.a(timeutil.c.obj)
                                        0x36c (size before relaxing)
 .xt.prop       0x0000000000001074        0x0 zephyr/libzephyr.a(bitarray.c.obj)
                                        0x5a0 (size before relaxing)
 .xt.prop       0x0000000000001074       0x24 zephyr/libzephyr.a(configs.c.obj)
 .xt.prop       0x0000000000001098       0x60 zephyr/libzephyr.a(soc.c.obj)
                                         0xfc (size before relaxing)
 .xt.prop       0x00000000000010f8       0x24 zephyr/libzephyr.a(loader.c.obj)
                                         0x30 (size before relaxing)
 .xt.prop       0x000000000000111c        0x0 zephyr/libzephyr.a(esp32-mp.c.obj)
                                         0x78 (size before relaxing)
 .xt.prop       0x000000000000111c      0x744 zephyr/libzephyr.a(log_core.c.obj)
                                        0xae0 (size before relaxing)
 .xt.prop       0x0000000000001860       0x78 zephyr/libzephyr.a(log_mgmt.c.obj)
                                        0x4e0 (size before relaxing)
 .xt.prop       0x00000000000018d8        0x0 zephyr/libzephyr.a(log_cache.c.obj)
                                        0x150 (size before relaxing)
 .xt.prop       0x00000000000018d8      0x1bc zephyr/libzephyr.a(log_msg.c.obj)
                                        0x204 (size before relaxing)
 .xt.prop       0x0000000000001a94      0x3d8 zephyr/libzephyr.a(log_output.c.obj)
                                        0x438 (size before relaxing)
 .xt.prop       0x0000000000001e6c      0x150 zephyr/libzephyr.a(log_backend_uart.c.obj)
                                        0x180 (size before relaxing)
 .xt.prop       0x0000000000001fbc       0x24 zephyr/libzephyr.a(tracing_none.c.obj)
                                         0x90 (size before relaxing)
 .xt.prop       0x0000000000001fe0       0xf0 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .xt.prop       0x00000000000020d0      0x3f0 zephyr/libzephyr.a(uart_hal.c.obj)
                                        0x600 (size before relaxing)
 .xt.prop       0x00000000000024c0      0x114 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                                        0x198 (size before relaxing)
 .xt.prop       0x00000000000025d4       0xf0 zephyr/libzephyr.a(clk.c.obj)
                                        0x168 (size before relaxing)
 .xt.prop       0x00000000000026c4        0x0 zephyr/libzephyr.a(adc_periph.c.obj)
                                          0xc (size before relaxing)
 .xt.prop       0x00000000000026c4        0x0 zephyr/libzephyr.a(i2s_periph.c.obj)
                                          0xc (size before relaxing)
 .xt.prop       0x00000000000026c4        0xc zephyr/libzephyr.a(gpio_periph.c.obj)
                                         0x18 (size before relaxing)
 .xt.prop       0x00000000000026d0       0x18 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .xt.prop       0x00000000000026e8       0xc0 zephyr/libzephyr.a(esp_clk.c.obj)
                                        0x1c8 (size before relaxing)
 .xt.prop       0x00000000000027a8      0x564 zephyr/libzephyr.a(rtc_clk.c.obj)
                                        0x8c4 (size before relaxing)
 .xt.prop       0x0000000000002d0c       0x60 zephyr/libzephyr.a(rtc_init.c.obj)
                                         0xfc (size before relaxing)
 .xt.prop       0x0000000000002d6c      0x198 zephyr/libzephyr.a(rtc_time.c.obj)
                                        0x288 (size before relaxing)
 .xt.prop       0x0000000000002f04      0x1bc zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .xt.prop       0x00000000000030c0        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
                                        0x1f8 (size before relaxing)
 .xt.prop       0x00000000000030c0       0x3c zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                                        0x12c (size before relaxing)
 .xt.prop       0x00000000000030fc        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
                                        0x198 (size before relaxing)
 .xt.prop       0x00000000000030fc       0x30 zephyr/libzephyr.a(esp_timer.c.obj)
                                        0x624 (size before relaxing)
 .xt.prop       0x000000000000312c       0x30 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
                                        0x390 (size before relaxing)
 .xt.prop       0x000000000000315c      0x42c zephyr/libzephyr.a(periph_ctrl.c.obj)
                                        0x468 (size before relaxing)
 .xt.prop       0x0000000000003588       0x30 zephyr/libzephyr.a(log_noos.c.obj)
                                         0xe4 (size before relaxing)
 .xt.prop       0x00000000000035b8        0xc zephyr/libzephyr.a(log.c.obj)
                                        0x378 (size before relaxing)
 .xt.prop       0x00000000000035c4       0xc0 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                                        0x3fc (size before relaxing)
 .xt.prop       0x0000000000003684       0x6c zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                                         0x90 (size before relaxing)
 .xt.prop       0x00000000000036f0       0x3c zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .xt.prop       0x000000000000372c        0x0 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
                                        0x174 (size before relaxing)
 .xt.prop       0x000000000000372c        0x0 zephyr/libzephyr.a(esp_efuse_table.c.obj)
                                        0x3d8 (size before relaxing)
 .xt.prop       0x000000000000372c        0x0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                                        0x204 (size before relaxing)
 .xt.prop       0x000000000000372c        0x0 zephyr/libzephyr.a(esp_efuse_api.c.obj)
                                        0x4d4 (size before relaxing)
 .xt.prop       0x000000000000372c        0x0 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
                                        0x474 (size before relaxing)
 .xt.prop       0x000000000000372c        0x0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                                        0x528 (size before relaxing)
 .xt.prop       0x000000000000372c        0x0 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
                                        0x24c (size before relaxing)
 .xt.prop       0x000000000000372c        0x0 zephyr/libzephyr.a(bootloader_efuse_esp32.c.obj)
                                         0x9c (size before relaxing)
 .xt.prop       0x000000000000372c      0x198 zephyr/libzephyr.a(reset_reason.c.obj)
                                        0x204 (size before relaxing)
 .xt.prop       0x00000000000038c4        0x0 zephyr/libzephyr.a(esp_system_api.c.obj)
                                         0xb4 (size before relaxing)
 .xt.prop       0x00000000000038c4        0x0 zephyr/libzephyr.a(heap_caps.c.obj)
                                         0x18 (size before relaxing)
 .xt.prop       0x00000000000038c4        0x0 zephyr/libzephyr.a(dport_access.c.obj)
                                         0x30 (size before relaxing)
 .xt.prop       0x00000000000038c4       0x24 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .xt.prop       0x00000000000038e8       0x54 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                         0x60 (size before relaxing)
 .xt.prop       0x000000000000393c       0x24 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                                         0x60 (size before relaxing)
 .xt.prop       0x0000000000003960       0x6c zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                         0x9c (size before relaxing)
 .xt.prop       0x00000000000039cc       0xa8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
                                         0xe4 (size before relaxing)
 .xt.prop       0x0000000000003a74      0x330 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .xt.prop       0x0000000000003da4       0x30 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                         0xa8 (size before relaxing)
 .xt.prop       0x0000000000003dd4       0x30 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .xt.prop       0x0000000000003e04      0x5e8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                        0x630 (size before relaxing)
 .xt.prop       0x00000000000043ec      0x1bc zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .xt.prop       0x00000000000045a8       0x24 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
                                         0x30 (size before relaxing)
 .xt.prop       0x00000000000045cc      0x108 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                                        0x3d8 (size before relaxing)
 .xt.prop       0x00000000000046d4       0x24 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .xt.prop       0x00000000000046f8       0x48 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                        0x234 (size before relaxing)
 .xt.prop       0x0000000000004740        0x0 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
                                        0x120 (size before relaxing)
 .xt.prop       0x0000000000004740      0x6e4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                        0xa5c (size before relaxing)
 .xt.prop       0x0000000000004e24      0x1c8 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                        0x1ec (size before relaxing)
 .xt.prop       0x0000000000004fec       0x78 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                                         0x9c (size before relaxing)
 .xt.prop       0x0000000000005064       0x9c zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .xt.prop       0x0000000000005100      0x72c zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                        0x738 (size before relaxing)
 .xt.prop       0x000000000000582c       0x54 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .xt.prop       0x0000000000005880      0x2dc zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .xt.prop       0x0000000000005b5c      0x330 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                        0x360 (size before relaxing)
 .xt.prop       0x0000000000005e8c        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
                                         0x48 (size before relaxing)
 .xt.prop       0x0000000000005e8c      0x120 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                        0x12c (size before relaxing)
 .xt.prop       0x0000000000005fac       0x30 zephyr/kernel/libkernel.a(busy_wait.c.obj)
                                         0x3c (size before relaxing)
 .xt.prop       0x0000000000005fdc       0x54 zephyr/kernel/libkernel.a(device.c.obj)
                                        0x108 (size before relaxing)
 .xt.prop       0x0000000000006030        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
                                         0x3c (size before relaxing)
 .xt.prop       0x0000000000006030       0x90 zephyr/kernel/libkernel.a(fatal.c.obj)
                                        0x168 (size before relaxing)
 .xt.prop       0x00000000000060c0      0x1bc zephyr/kernel/libkernel.a(init.c.obj)
                                        0x264 (size before relaxing)
 .xt.prop       0x000000000000627c      0x174 zephyr/kernel/libkernel.a(thread.c.obj)
                                        0x3fc (size before relaxing)
 .xt.prop       0x00000000000063f0      0x918 zephyr/kernel/libkernel.a(sched.c.obj)
                                       0x1050 (size before relaxing)
 .xt.prop       0x0000000000006d08       0x24 zephyr/kernel/libkernel.a(idle.c.obj)
                                         0x84 (size before relaxing)
 .xt.prop       0x0000000000006d2c        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
                                        0x1e0 (size before relaxing)
 .xt.prop       0x0000000000006d2c       0xd8 zephyr/kernel/libkernel.a(sem.c.obj)
                                        0x12c (size before relaxing)
 .xt.prop       0x0000000000006e04      0x2ac zephyr/kernel/libkernel.a(work.c.obj)
                                        0x8b8 (size before relaxing)
 .xt.prop       0x00000000000070b0      0x3f0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                        0x564 (size before relaxing)
 .xt.prop       0x00000000000074a0      0x1a4 zephyr/kernel/libkernel.a(timer.c.obj)
                                        0x210 (size before relaxing)
 .xt.prop       0x0000000000007644      0x108 zephyr/kernel/libkernel.a(mempool.c.obj)
                                        0x1e0 (size before relaxing)
 .xt.prop       0x000000000000774c       0x30 zephyr/kernel/libkernel.a(banner.c.obj)
 .xt.prop       0x000000000000777c       0xf0 zephyr/kernel/libkernel.a(kheap.c.obj)
                                        0x144 (size before relaxing)
 .xt.prop       0x000000000000786c       0x54 zephyr/kernel/libkernel.a(system_work_q.c.obj)
 .xt.prop       0x00000000000078c0        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
                                         0x3c (size before relaxing)
 .xt.prop       0x00000000000078c0        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
                                         0x3c (size before relaxing)
 .xt.prop       0x00000000000078c0        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
                                        0x420 (size before relaxing)
 .xt.prop       0x00000000000078c0        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
                                        0x228 (size before relaxing)
 .xt.prop       0x00000000000078c0        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
                                        0x264 (size before relaxing)
 .xt.prop       0x00000000000078c0        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
                                         0xa8 (size before relaxing)
 .xt.prop       0x00000000000078c0        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
                                         0x54 (size before relaxing)
 .xt.prop       0x00000000000078c0        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
                                         0x9c (size before relaxing)
 .xt.prop       0x00000000000078c0        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
                                         0xb4 (size before relaxing)
 .xt.prop       0x00000000000078c0        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
                                         0x6c (size before relaxing)
 .xt.prop       0x00000000000078c0        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
                                         0x30 (size before relaxing)
 .xt.prop       0x00000000000078c0        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
                                        0x198 (size before relaxing)
 .xt.prop       0x00000000000078c0        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
                                        0x180 (size before relaxing)
 .xt.prop       0x00000000000078c0        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
                                        0x138 (size before relaxing)
 .xt.prop       0x00000000000078c0        0xc zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
 .xt.prop       0x00000000000078cc        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
                                        0x15c (size before relaxing)
 .xt.prop       0x00000000000078cc        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
                                         0xd8 (size before relaxing)
 .xt.prop       0x00000000000078cc        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
                                        0x120 (size before relaxing)
 .xt.prop       0x00000000000078cc        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
                                         0xc0 (size before relaxing)
 .xt.prop       0x00000000000078cc        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
                                         0x54 (size before relaxing)
 .xt.prop       0x00000000000078cc        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
                                         0x48 (size before relaxing)
 .xt.prop       0x00000000000078cc        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
                                         0x30 (size before relaxing)
 .xt.prop       0x00000000000078cc        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
                                         0x48 (size before relaxing)
 .xt.prop       0x00000000000078cc       0x48 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .xt.prop       0x0000000000007914      0x7d4 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
                                        0x7e0 (size before relaxing)
 .xt.prop       0x00000000000080e8        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
                                        0x5f4 (size before relaxing)
 .xt.prop       0x00000000000080e8        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
                                         0x30 (size before relaxing)
 .xt.prop       0x00000000000080e8        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
                                         0x54 (size before relaxing)
 .xt.prop       0x00000000000080e8        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
                                         0x84 (size before relaxing)
 .xt.prop       0x00000000000080e8       0x30 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
 .xt.prop       0x0000000000008118        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
                                         0x6c (size before relaxing)
 *(SORT_BY_ALIGNMENT(.xt.prop.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.prop.*))

.xt.lit         0x0000000000000000      0x488
 *(SORT_BY_ALIGNMENT(.xt.lit))
 .xt.lit        0x0000000000000000       0x28 app/libapp.a(main.c.obj)
 .xt.lit        0x0000000000000028        0x8 zephyr/libzephyr.a(heap.c.obj)
                                         0x60 (size before relaxing)
 .xt.lit        0x0000000000000030       0x10 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000040        0x8 zephyr/libzephyr.a(printk.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000048        0x0 zephyr/libzephyr.a(sem.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000048        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000048        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000048        0x0 zephyr/libzephyr.a(assert.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000048        0x0 zephyr/libzephyr.a(mpsc_pbuf.c.obj)
                                         0x78 (size before relaxing)
 .xt.lit        0x0000000000000048        0x0 zephyr/libzephyr.a(dec.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000048        0x0 zephyr/libzephyr.a(hex.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000048        0x0 zephyr/libzephyr.a(rb.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000048        0x0 zephyr/libzephyr.a(timeutil.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x0000000000000048        0x0 zephyr/libzephyr.a(bitarray.c.obj)
                                         0x58 (size before relaxing)
 .xt.lit        0x0000000000000048       0x10 zephyr/libzephyr.a(soc.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000058        0x0 zephyr/libzephyr.a(loader.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000058        0x0 zephyr/libzephyr.a(esp32-mp.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000058       0x60 zephyr/libzephyr.a(log_core.c.obj)
                                        0x118 (size before relaxing)
 .xt.lit        0x00000000000000b8       0x10 zephyr/libzephyr.a(log_mgmt.c.obj)
                                         0x88 (size before relaxing)
 .xt.lit        0x00000000000000c8       0x18 zephyr/libzephyr.a(log_msg.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x00000000000000e0       0x28 zephyr/libzephyr.a(log_output.c.obj)
                                         0x50 (size before relaxing)
 .xt.lit        0x0000000000000108        0x0 zephyr/libzephyr.a(log_backend_uart.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000108        0x8 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .xt.lit        0x0000000000000110       0x38 zephyr/libzephyr.a(uart_hal.c.obj)
                                         0x68 (size before relaxing)
 .xt.lit        0x0000000000000148       0x10 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000158       0x10 zephyr/libzephyr.a(clk.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000168       0x18 zephyr/libzephyr.a(esp_clk.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x0000000000000180       0x70 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0xf0 (size before relaxing)
 .xt.lit        0x00000000000001f0        0x8 zephyr/libzephyr.a(rtc_init.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x00000000000001f8       0x10 zephyr/libzephyr.a(rtc_time.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x0000000000000208       0x10 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .xt.lit        0x0000000000000218        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000218        0x8 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000220        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000220        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
                                         0x78 (size before relaxing)
 .xt.lit        0x0000000000000220        0x8 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
                                         0x68 (size before relaxing)
 .xt.lit        0x0000000000000228       0x18 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000240        0x8 zephyr/libzephyr.a(log_noos.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000248        0x0 zephyr/libzephyr.a(log.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x0000000000000248        0x8 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000250        0x0 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000250        0x8 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .xt.lit        0x0000000000000258        0x0 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000258        0x0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000258        0x0 zephyr/libzephyr.a(esp_efuse_api.c.obj)
                                         0x70 (size before relaxing)
 .xt.lit        0x0000000000000258        0x0 zephyr/libzephyr.a(esp_efuse_api_key_esp32.c.obj)
                                         0x70 (size before relaxing)
 .xt.lit        0x0000000000000258        0x0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                                         0x68 (size before relaxing)
 .xt.lit        0x0000000000000258        0x0 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x0000000000000258        0x0 zephyr/libzephyr.a(bootloader_efuse_esp32.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000258       0x10 zephyr/libzephyr.a(reset_reason.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000268        0x0 zephyr/libzephyr.a(esp_system_api.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000268        0x0 zephyr/libzephyr.a(dport_access.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000268        0x8 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000270        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000270        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000278        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .xt.lit        0x0000000000000280        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000288        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .xt.lit        0x0000000000000290       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                         0x50 (size before relaxing)
 .xt.lit        0x00000000000002b0       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .xt.lit        0x00000000000002d0        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000002d0       0x18 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                                         0x90 (size before relaxing)
 .xt.lit        0x00000000000002e8        0x8 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .xt.lit        0x00000000000002f0        0x8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                         0x48 (size before relaxing)
 .xt.lit        0x00000000000002f8        0x0 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x00000000000002f8       0x38 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x98 (size before relaxing)
 .xt.lit        0x0000000000000330       0x10 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000340       0x10 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .xt.lit        0x0000000000000350        0x8 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .xt.lit        0x0000000000000358       0x28 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .xt.lit        0x0000000000000380        0x8 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .xt.lit        0x0000000000000388        0x8 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000390       0x10 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x00000000000003a0        0x0 zephyr/kernel/libkernel.a(busy_wait.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000003a0        0x0 zephyr/kernel/libkernel.a(device.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x00000000000003a0        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000003a0       0x10 zephyr/kernel/libkernel.a(fatal.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x00000000000003b0       0x28 zephyr/kernel/libkernel.a(init.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x00000000000003d8       0x10 zephyr/kernel/libkernel.a(thread.c.obj)
                                         0x48 (size before relaxing)
 .xt.lit        0x00000000000003e8       0x30 zephyr/kernel/libkernel.a(sched.c.obj)
                                        0x1c8 (size before relaxing)
 .xt.lit        0x0000000000000418        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000418        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000418        0x8 zephyr/kernel/libkernel.a(sem.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000420       0x18 zephyr/kernel/libkernel.a(work.c.obj)
                                         0xe0 (size before relaxing)
 .xt.lit        0x0000000000000438       0x18 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x78 (size before relaxing)
 .xt.lit        0x0000000000000450        0x8 zephyr/kernel/libkernel.a(timer.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000458        0x8 zephyr/kernel/libkernel.a(mempool.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x0000000000000460        0x8 zephyr/kernel/libkernel.a(banner.c.obj)
 .xt.lit        0x0000000000000468        0x8 zephyr/kernel/libkernel.a(kheap.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000470        0x8 zephyr/kernel/libkernel.a(system_work_q.c.obj)
 .xt.lit        0x0000000000000478        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000478        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000478        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000478        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000478        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000478        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000478        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000478        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000478        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000478        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000478        0x8 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .xt.lit        0x0000000000000480        0x8 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .xt.lit        0x0000000000000488        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000488        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000488        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000488        0x0 /home/ivan/bin/zephyr-sdk-0.16.4/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
                                          0x8 (size before relaxing)
 *(SORT_BY_ALIGNMENT(.xt.lit.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.p.*))

.xt.profile_range
 *(SORT_BY_ALIGNMENT(.xt.profile_range))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.profile_range.*))

.xt.profile_ranges
 *(SORT_BY_ALIGNMENT(.xt.profile_ranges))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.xt.profile_ranges.*))

.xt.profile_files
 *(SORT_BY_ALIGNMENT(.xt.profile_files))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.xt.profile_files.*))

.intList
 *(SORT_BY_ALIGNMENT(.irq_info*))
 *(SORT_BY_ALIGNMENT(.intList*))
                0x0000000000000001                ASSERT (((_iram_end - ORIGIN (iram0_0_seg)) <= LENGTH (iram0_0_seg)), IRAM0 segment data does not fit.)
                0x0000000040009200                PROVIDE (esp_rom_uart_tx_one_char = uart_tx_one_char)
                [!provide]                        PROVIDE (esp_rom_uart_rx_one_char = uart_rx_one_char)
                [!provide]                        PROVIDE (esp_rom_uart_attach = uartAttach)
                0x0000000040009278                PROVIDE (esp_rom_uart_tx_wait_idle = 0x40009278)
                [!provide]                        PROVIDE (esp_rom_intr_matrix_set = intr_matrix_set)
                0x0000000040009edc                PROVIDE (esp_rom_gpio_matrix_in = gpio_matrix_in)
                0x0000000040009f0c                PROVIDE (esp_rom_gpio_matrix_out = gpio_matrix_out)
                0x0000000040009a14                PROVIDE (esp_rom_Cache_Flush = Cache_Flush_rom)
                0x0000000040009a84                PROVIDE (esp_rom_Cache_Read_Enable = Cache_Read_Enable_rom)
                0x000000004000689c                PROVIDE (esp_rom_ets_set_appcpu_boot_addr = ets_set_appcpu_boot_addr)
                [!provide]                        PROVIDE (esp_rom_i2c_readReg = rom_i2c_readReg)
                [!provide]                        PROVIDE (esp_rom_i2c_writeReg = rom_i2c_writeReg)
                [!provide]                        PROVIDE (esp_rom_ets_printf = ets_printf)
                [!provide]                        PROVIDE (esp_rom_g_ticks_per_us_app = g_ticks_per_us_app)
                [!provide]                        PROVIDE (esp_rom_g_ticks_per_us_pro = g_ticks_per_us_app)
                [!provide]                        PROVIDE (esp_rom_ets_delay_us = ets_delay_us)
                [!provide]                        PROVIDE (Add2SelfBigHex256 = 0x40015b7c)
                [!provide]                        PROVIDE (AddBigHex256 = 0x40015b28)
                [!provide]                        PROVIDE (AddBigHexModP256 = 0x40015c98)
                [!provide]                        PROVIDE (AddP256 = 0x40015c74)
                [!provide]                        PROVIDE (AddPdiv2_256 = 0x40015ce0)
                [!provide]                        PROVIDE (app_gpio_arg = 0x3ffe003c)
                [!provide]                        PROVIDE (app_gpio_handler = 0x3ffe0040)
                [!provide]                        PROVIDE (BasePoint_x_256 = 0x3ff97488)
                [!provide]                        PROVIDE (BasePoint_y_256 = 0x3ff97468)
                [!provide]                        PROVIDE (bigHexInversion256 = 0x400168f0)
                [!provide]                        PROVIDE (bigHexP256 = 0x3ff973bc)
                [!provide]                        PROVIDE (btdm_r_ble_bt_handler_tab_p_get = 0x40019b0c)
                [!provide]                        PROVIDE (btdm_r_btdm_option_data_p_get = 0x40010004)
                [!provide]                        PROVIDE (btdm_r_btdm_rom_version_get = 0x40010078)
                [!provide]                        PROVIDE (btdm_r_data_init = 0x4001002c)
                [!provide]                        PROVIDE (btdm_r_import_rf_phy_func_p_get = 0x40054298)
                [!provide]                        PROVIDE (btdm_r_ip_func_p_get = 0x40019af0)
                [!provide]                        PROVIDE (btdm_r_ip_func_p_set = 0x40019afc)
                [!provide]                        PROVIDE (btdm_r_modules_func_p_get = 0x4005427c)
                [!provide]                        PROVIDE (btdm_r_modules_func_p_set = 0x40054270)
                [!provide]                        PROVIDE (btdm_r_plf_func_p_set = 0x40054288)
                [!provide]                        PROVIDE (bt_util_buf_env = 0x3ffb8bd4)
                [!provide]                        PROVIDE (cache_flash_mmu_set_rom = 0x400095e0)
                0x0000000040009a14                PROVIDE (Cache_Flush_rom = 0x40009a14)
                0x0000000040009ab8                PROVIDE (Cache_Read_Disable_rom = 0x40009ab8)
                0x0000000040009a84                PROVIDE (Cache_Read_Enable_rom = 0x40009a84)
                [!provide]                        PROVIDE (Cache_Read_Init_rom = 0x40009950)
                [!provide]                        PROVIDE (cache_sram_mmu_set_rom = 0x400097f4)
                [!provide]                        PROVIDE (calc_rtc_memory_crc = 0x40008170)
                [!provide]                        PROVIDE (__clear_cache = 0x40063860)
                [!provide]                        PROVIDE (co_default_bdaddr = 0x3ffae704)
                [!provide]                        PROVIDE (co_null_bdaddr = 0x3ffb80e0)
                [!provide]                        PROVIDE (co_sca2ppm = 0x3ff971e8)
                [!provide]                        PROVIDE (crc16_be = 0x4005d09c)
                [!provide]                        PROVIDE (crc16_le = 0x4005d05c)
                [!provide]                        PROVIDE (crc32_be = 0x4005d024)
                [!provide]                        PROVIDE (crc32_le = 0x4005cfec)
                [!provide]                        PROVIDE (crc8_be = 0x4005d114)
                [!provide]                        PROVIDE (crc8_le = 0x4005d0e0)
                [!provide]                        PROVIDE (_data_end_rom = 0x4000d5c8)
                [!provide]                        PROVIDE (_data_end_btdm_rom = 0x4000d4f8)
                [!provide]                        PROVIDE (_data_start_rom = 0x4000d4f8)
                [!provide]                        PROVIDE (_data_start_btdm_rom = 0x4000d4f4)
                [!provide]                        PROVIDE (_data_start_btdm = 0x3ffae6e0)
                [!provide]                        PROVIDE (_data_end_btdm = 0x3ffaff10)
                [!provide]                        PROVIDE (_bss_start_btdm = 0x3ffb8000)
                [!provide]                        PROVIDE (_bss_end_btdm = 0x3ffbff70)
                [!provide]                        PROVIDE (dbg_default_handler = 0x3ff97218)
                [!provide]                        PROVIDE (dbg_default_state = 0x3ff97220)
                [!provide]                        PROVIDE (dbg_state = 0x3ffb8d5d)
                [!provide]                        PROVIDE (DebugE256PublicKey_x = 0x3ff97428)
                [!provide]                        PROVIDE (DebugE256PublicKey_y = 0x3ff97408)
                [!provide]                        PROVIDE (DebugE256SecretKey = 0x3ff973e8)
                [!provide]                        PROVIDE (debug_timer = 0x3ffe042c)
                [!provide]                        PROVIDE (debug_timerfn = 0x3ffe0430)
                [!provide]                        PROVIDE (dh_group14_generator = 0x3ff9ac60)
                [!provide]                        PROVIDE (dh_group14_prime = 0x3ff9ab60)
                [!provide]                        PROVIDE (dh_group15_generator = 0x3ff9ab5f)
                [!provide]                        PROVIDE (dh_group15_prime = 0x3ff9a9df)
                [!provide]                        PROVIDE (dh_group16_generator = 0x3ff9a9de)
                [!provide]                        PROVIDE (dh_group16_prime = 0x3ff9a7de)
                [!provide]                        PROVIDE (dh_group17_generator = 0x3ff9a7dd)
                [!provide]                        PROVIDE (dh_group17_prime = 0x3ff9a4dd)
                [!provide]                        PROVIDE (dh_group18_generator = 0x3ff9a4dc)
                [!provide]                        PROVIDE (dh_group18_prime = 0x3ff9a0dc)
                [!provide]                        PROVIDE (dh_group1_generator = 0x3ff9ae03)
                [!provide]                        PROVIDE (dh_group1_prime = 0x3ff9ada3)
                [!provide]                        PROVIDE (dh_group2_generator = 0x3ff9ada2)
                [!provide]                        PROVIDE (dh_group2_prime = 0x3ff9ad22)
                [!provide]                        PROVIDE (dh_group5_generator = 0x3ff9ad21)
                [!provide]                        PROVIDE (dh_group5_prime = 0x3ff9ac61)
                0x000000003ffae290                PROVIDE (g_rom_spiflash_dummy_len_plus = 0x3ffae290)
                [!provide]                        PROVIDE (ecc_env = 0x3ffb8d60)
                [!provide]                        PROVIDE (ecc_Jacobian_InfinityPoint256 = 0x3ff972e8)
                [!provide]                        PROVIDE (em_buf_env = 0x3ffb8d74)
                0x000000004005d144                PROVIDE (esp_crc8 = 0x4005d144)
                [!provide]                        PROVIDE (_etext = 0x4000d66c)
                [!provide]                        PROVIDE (ets_readySet_ = 0x3ffe01f0)
                [!provide]                        PROVIDE (ets_startup_callback = 0x3ffe0404)
                [!provide]                        PROVIDE (rwip_coex_cfg = 0x3ff9914c)
                [!provide]                        PROVIDE (rwip_priority = 0x3ff99159)
                [!provide]                        PROVIDE (exc_cause_table = 0x3ff991d0)
                [!provide]                        PROVIDE (GF_Jacobian_Point_Addition256 = 0x400163a4)
                [!provide]                        PROVIDE (GF_Jacobian_Point_Double256 = 0x40016260)
                [!provide]                        PROVIDE (GF_Point_Jacobian_To_Affine256 = 0x40016b0c)
                [!provide]                        PROVIDE (g_phyFuns_instance = 0x3ffae0c4)
                0x000000003ffae270                PROVIDE (g_rom_flashchip = 0x3ffae270)
                [!provide]                        PROVIDE (gTxMsg = 0x3ffe0050)
                [!provide]                        PROVIDE (hci_cmd_desc_root_tab = 0x3ff976d4)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_ctrl_bb = 0x3ff97b70)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_info_par = 0x3ff97b1c)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_le = 0x3ff97870)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_lk_ctrl = 0x3ff97fc0)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_lk_pol = 0x3ff97f3c)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_stat_par = 0x3ff97ac8)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_testing = 0x3ff97a98)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_vs = 0x3ff97714)
                [!provide]                        PROVIDE (hci_command_handler = 0x4004c928)
                [!provide]                        PROVIDE (hci_env = 0x3ffb9350)
                [!provide]                        PROVIDE (rwip_env = 0x3ffb8bcc)
                [!provide]                        PROVIDE (hci_evt_dbg_desc_tab = 0x3ff9750c)
                [!provide]                        PROVIDE (hci_evt_desc_tab = 0x3ff9751c)
                [!provide]                        PROVIDE (hci_evt_le_desc_tab = 0x3ff974b4)
                [!provide]                        PROVIDE (hci_fc_env = 0x3ffb9340)
                [!provide]                        PROVIDE (jd_decomp = 0x400613e8)
                [!provide]                        PROVIDE (jd_prepare = 0x40060fa8)
                [!provide]                        PROVIDE (ke_env = 0x3ffb93cc)
                [!provide]                        PROVIDE (ke_handler_search = 0x4001a430)
                [!provide]                        PROVIDE (ke_task_env = 0x3ffb81d4)
                [!provide]                        PROVIDE (ke_event_env = 0x3ffb81a4)
                [!provide]                        PROVIDE (lb_default_handler = 0x3ff982b8)
                [!provide]                        PROVIDE (lb_default_state_tab_p_get = 0x4001c198)
                [!provide]                        PROVIDE (lb_env = 0x3ffb9424)
                [!provide]                        PROVIDE (lb_hci_cmd_handler_tab_p_get = 0x4001c18c)
                [!provide]                        PROVIDE (lb_state = 0x3ffb94e8)
                [!provide]                        PROVIDE (lc_default_handler = 0x3ff98648)
                [!provide]                        PROVIDE (lc_default_state_tab_p_get = 0x4002f494)
                [!provide]                        PROVIDE (lc_env = 0x3ffb94ec)
                [!provide]                        PROVIDE (lc_hci_cmd_handler_tab_p_get = 0x4002f488)
                [!provide]                        PROVIDE (lc_state = 0x3ffb9508)
                [!provide]                        PROVIDE (ld_acl_br_sizes = 0x3ff98a2a)
                [!provide]                        PROVIDE (ld_acl_br_types = 0x3ff98a36)
                [!provide]                        PROVIDE (ld_acl_edr_sizes = 0x3ff98a14)
                [!provide]                        PROVIDE (ld_acl_edr_types = 0x3ff98a22)
                [!provide]                        PROVIDE (ld_env = 0x3ffb9510)
                [!provide]                        PROVIDE (ld_pcm_settings_dft = 0x3ff98a0c)
                [!provide]                        PROVIDE (ld_sched_params = 0x3ffb96c0)
                [!provide]                        PROVIDE (ld_sync_train_channels = 0x3ff98a3c)
                [!provide]                        PROVIDE (llc_default_handler = 0x3ff98b3c)
                [!provide]                        PROVIDE (llc_default_state_tab_p_get = 0x40046058)
                [!provide]                        PROVIDE (llc_env = 0x3ffb96d0)
                [!provide]                        PROVIDE (llc_hci_acl_data_tx_handler = 0x40042398)
                [!provide]                        PROVIDE (llc_hci_cmd_handler_tab_p_get = 0x40042358)
                [!provide]                        PROVIDE (llc_hci_command_handler = 0x40042360)
                [!provide]                        PROVIDE (llcp_pdu_handler_tab_p_get = 0x40043f64)
                [!provide]                        PROVIDE (llc_state = 0x3ffb96f8)
                [!provide]                        PROVIDE (lldesc_build_chain = 0x4000a850)
                [!provide]                        PROVIDE (lldesc_num2link = 0x4000a948)
                [!provide]                        PROVIDE (lldesc_set_owner = 0x4000a974)
                [!provide]                        PROVIDE (lld_evt_deferred_elt_push = 0x400466b4)
                [!provide]                        PROVIDE (lld_evt_deferred_elt_pop = 0x400466dc)
                [!provide]                        PROVIDE (lld_evt_winsize_change = 0x40046730)
                [!provide]                        PROVIDE (lld_evt_rxwin_compute = 0x400467c8)
                [!provide]                        PROVIDE (lld_evt_slave_time_compute = 0x40046818)
                [!provide]                        PROVIDE (lld_evt_env = 0x3ffb9704)
                [!provide]                        PROVIDE (lld_evt_elt_wait_get = 0x400468e4)
                [!provide]                        PROVIDE (lld_evt_get_next_free_slot = 0x4004692c)
                [!provide]                        PROVIDE (lld_pdu_adv_pk_desc_tab = 0x3ff98c70)
                [!provide]                        PROVIDE (lld_pdu_llcp_pk_desc_tab = 0x3ff98b68)
                [!provide]                        PROVIDE (lld_pdu_tx_flush_list = 0x4004a760)
                [!provide]                        PROVIDE (lld_pdu_pack = 0x4004ab14)
                [!provide]                        PROVIDE (LLM_AA_CT1 = 0x3ff98d8a)
                [!provide]                        PROVIDE (LLM_AA_CT2 = 0x3ff98d88)
                [!provide]                        PROVIDE (llm_default_handler = 0x3ff98d80)
                [!provide]                        PROVIDE (llm_default_state_tab_p_get = 0x4004e718)
                [!provide]                        PROVIDE (llm_hci_cmd_handler_tab_p_get = 0x4004c920)
                [!provide]                        PROVIDE (llm_le_env = 0x3ffb976c)
                [!provide]                        PROVIDE (llm_local_cmds = 0x3ff98d38)
                [!provide]                        PROVIDE (llm_local_data_len_values = 0x3ff98d1c)
                [!provide]                        PROVIDE (llm_local_le_feats = 0x3ff98d30)
                [!provide]                        PROVIDE (llm_local_le_states = 0x3ff98d28)
                [!provide]                        PROVIDE (llm_state = 0x3ffb985c)
                [!provide]                        PROVIDE (lm_default_handler = 0x3ff990e0)
                [!provide]                        PROVIDE (lm_default_state_tab_p_get = 0x40054268)
                [!provide]                        PROVIDE (lm_env = 0x3ffb9860)
                [!provide]                        PROVIDE (lm_hci_cmd_handler_tab_p_get = 0x4005425c)
                [!provide]                        PROVIDE (lm_local_supp_feats = 0x3ff990ee)
                [!provide]                        PROVIDE (lm_n_page_tab = 0x3ff990e8)
                [!provide]                        PROVIDE (lmp_desc_tab = 0x3ff96e6c)
                [!provide]                        PROVIDE (lmp_ext_desc_tab = 0x3ff96d9c)
                [!provide]                        PROVIDE (lm_state = 0x3ffb9a1c)
                [!provide]                        PROVIDE (maxSecretKey_256 = 0x3ff97448)
                [!provide]                        PROVIDE (mmu_init = 0x400095a4)
                [!provide]                        PROVIDE (MultiplyBigHexByUint32_256 = 0x40016214)
                [!provide]                        PROVIDE (MultiplyBigHexModP256 = 0x400160b8)
                [!provide]                        PROVIDE (MultiplyByU32ModP256 = 0x40015fdc)
                [!provide]                        PROVIDE (multofup = 0x4000ab8c)
                [!provide]                        PROVIDE (mz_adler32 = 0x4005edbc)
                [!provide]                        PROVIDE (mz_crc32 = 0x4005ee88)
                [!provide]                        PROVIDE (mz_free = 0x4005eed4)
                [!provide]                        PROVIDE (notEqual256 = 0x40015b04)
                [!provide]                        PROVIDE (one_bits = 0x3ff971f8)
                [!provide]                        PROVIDE (phy_get_romfuncs = 0x40004100)
                [!provide]                        PROVIDE (_Pri_4_HandlerAddress = 0x3ffe0648)
                [!provide]                        PROVIDE (_Pri_5_HandlerAddress = 0x3ffe064c)
                [!provide]                        PROVIDE (r_btdm_option_data = 0x3ffae6e0)
                [!provide]                        PROVIDE (r_bt_util_buf_acl_rx_alloc = 0x40010218)
                [!provide]                        PROVIDE (r_bt_util_buf_acl_rx_free = 0x40010234)
                [!provide]                        PROVIDE (r_bt_util_buf_acl_tx_alloc = 0x40010268)
                [!provide]                        PROVIDE (r_bt_util_buf_acl_tx_free = 0x40010280)
                [!provide]                        PROVIDE (r_bt_util_buf_init = 0x400100e4)
                [!provide]                        PROVIDE (r_bt_util_buf_lmp_tx_alloc = 0x400101d0)
                [!provide]                        PROVIDE (r_bt_util_buf_lmp_tx_free = 0x400101ec)
                [!provide]                        PROVIDE (r_bt_util_buf_sync_clear = 0x400103c8)
                [!provide]                        PROVIDE (r_bt_util_buf_sync_init = 0x400102c4)
                [!provide]                        PROVIDE (r_bt_util_buf_sync_rx_alloc = 0x40010468)
                [!provide]                        PROVIDE (r_bt_util_buf_sync_rx_free = 0x4001049c)
                [!provide]                        PROVIDE (r_bt_util_buf_sync_tx_alloc = 0x400103ec)
                [!provide]                        PROVIDE (r_bt_util_buf_sync_tx_free = 0x40010428)
                [!provide]                        PROVIDE (r_co_bdaddr_compare = 0x40014324)
                [!provide]                        PROVIDE (r_co_bytes_to_string = 0x400142e4)
                [!provide]                        PROVIDE (r_co_list_check_size_available = 0x400142c4)
                [!provide]                        PROVIDE (r_co_list_extract = 0x4001404c)
                [!provide]                        PROVIDE (r_co_list_extract_after = 0x40014118)
                [!provide]                        PROVIDE (r_co_list_find = 0x4001419c)
                [!provide]                        PROVIDE (r_co_list_init = 0x40013f14)
                [!provide]                        PROVIDE (r_co_list_insert_after = 0x40014254)
                [!provide]                        PROVIDE (r_co_list_insert_before = 0x40014200)
                [!provide]                        PROVIDE (r_co_list_merge = 0x400141bc)
                [!provide]                        PROVIDE (r_co_list_pool_init = 0x40013f30)
                [!provide]                        PROVIDE (r_co_list_pop_front = 0x40014028)
                [!provide]                        PROVIDE (r_co_list_push_back = 0x40013fb8)
                [!provide]                        PROVIDE (r_co_list_push_front = 0x40013ff4)
                [!provide]                        PROVIDE (r_co_list_size = 0x400142ac)
                [!provide]                        PROVIDE (r_co_nb_good_channels = 0x40014360)
                [!provide]                        PROVIDE (r_co_slot_to_duration = 0x40014348)
                [!provide]                        PROVIDE (r_dbg_init = 0x40014394)
                [!provide]                        PROVIDE (r_dbg_platform_reset_complete = 0x400143d0)
                [!provide]                        PROVIDE (r_dbg_swdiag_init = 0x40014470)
                [!provide]                        PROVIDE (r_dbg_swdiag_read = 0x400144a4)
                [!provide]                        PROVIDE (r_dbg_swdiag_write = 0x400144d0)
                [!provide]                        PROVIDE (r_E1 = 0x400108e8)
                [!provide]                        PROVIDE (r_E21 = 0x40010968)
                [!provide]                        PROVIDE (r_E22 = 0x400109b4)
                [!provide]                        PROVIDE (r_E3 = 0x40010a58)
                [!provide]                        PROVIDE (lm_n192_mod_mul = 0x40011dc0)
                [!provide]                        PROVIDE (lm_n192_mod_add = 0x40011e9c)
                [!provide]                        PROVIDE (lm_n192_mod_sub = 0x40011eec)
                [!provide]                        PROVIDE (r_ea_alarm_clear = 0x40015ab4)
                [!provide]                        PROVIDE (r_ea_alarm_set = 0x40015a10)
                [!provide]                        PROVIDE (r_ea_elt_cancel = 0x400150d0)
                [!provide]                        PROVIDE (r_ea_elt_create = 0x40015264)
                [!provide]                        PROVIDE (r_ea_elt_insert = 0x400152a8)
                [!provide]                        PROVIDE (r_ea_elt_remove = 0x400154f0)
                [!provide]                        PROVIDE (r_ea_finetimer_isr = 0x400155d4)
                [!provide]                        PROVIDE (r_ea_init = 0x40015228)
                [!provide]                        PROVIDE (r_ea_interval_create = 0x4001555c)
                [!provide]                        PROVIDE (r_ea_interval_delete = 0x400155a8)
                [!provide]                        PROVIDE (r_ea_interval_duration_req = 0x4001597c)
                [!provide]                        PROVIDE (r_ea_interval_insert = 0x4001557c)
                [!provide]                        PROVIDE (r_ea_interval_remove = 0x40015590)
                [!provide]                        PROVIDE (ea_conflict_check = 0x40014e9c)
                [!provide]                        PROVIDE (ea_prog_timer = 0x40014f88)
                [!provide]                        PROVIDE (r_ea_offset_req = 0x40015748)
                [!provide]                        PROVIDE (r_ea_sleep_check = 0x40015928)
                [!provide]                        PROVIDE (r_ea_sw_isr = 0x40015724)
                [!provide]                        PROVIDE (r_ea_time_get_halfslot_rounded = 0x40015894)
                [!provide]                        PROVIDE (r_ea_time_get_slot_rounded = 0x400158d4)
                [!provide]                        PROVIDE (r_ecc_abort_key256_generation = 0x40017070)
                [!provide]                        PROVIDE (r_ecc_generate_key256 = 0x40016e00)
                [!provide]                        PROVIDE (r_ecc_gen_new_public_key = 0x400170c0)
                [!provide]                        PROVIDE (r_ecc_gen_new_secret_key = 0x400170e4)
                [!provide]                        PROVIDE (r_ecc_get_debug_Keys = 0x40017224)
                [!provide]                        PROVIDE (r_ecc_init = 0x40016dbc)
                [!provide]                        PROVIDE (ecc_point_multiplication_uint8_256 = 0x40016804)
                [!provide]                        PROVIDE (RecvBuff = 0x3ffe009c)
                [!provide]                        PROVIDE (r_em_buf_init = 0x4001729c)
                [!provide]                        PROVIDE (r_em_buf_rx_buff_addr_get = 0x400173e8)
                [!provide]                        PROVIDE (r_em_buf_rx_free = 0x400173c4)
                [!provide]                        PROVIDE (r_em_buf_tx_buff_addr_get = 0x40017404)
                [!provide]                        PROVIDE (r_em_buf_tx_free = 0x4001741c)
                [!provide]                        PROVIDE (r_F1_256 = 0x400133e4)
                [!provide]                        PROVIDE (r_F2_256 = 0x40013568)
                [!provide]                        PROVIDE (r_F3_256 = 0x40013664)
                [!provide]                        PROVIDE (RFPLL_ICP_TABLE = 0x3ffb8b7c)
                [!provide]                        PROVIDE (r_G_256 = 0x40013470)
                [!provide]                        PROVIDE (r_H3 = 0x40013760)
                [!provide]                        PROVIDE (r_H4 = 0x40013830)
                [!provide]                        PROVIDE (r_h4tl_init = 0x40017878)
                [!provide]                        PROVIDE (r_h4tl_start = 0x40017924)
                [!provide]                        PROVIDE (r_h4tl_stop = 0x40017934)
                [!provide]                        PROVIDE (r_h4tl_write = 0x400178d0)
                [!provide]                        PROVIDE (r_H5 = 0x400138dc)
                [!provide]                        PROVIDE (r_hashConcat = 0x40013a38)
                [!provide]                        PROVIDE (r_hci_acl_tx_data_alloc = 0x4001951c)
                [!provide]                        PROVIDE (r_hci_acl_tx_data_received = 0x40019654)
                [!provide]                        PROVIDE (r_hci_bt_acl_bdaddr_register = 0x40018900)
                [!provide]                        PROVIDE (r_hci_bt_acl_bdaddr_unregister = 0x400189ac)
                [!provide]                        PROVIDE (r_hci_bt_acl_conhdl_register = 0x4001895c)
                [!provide]                        PROVIDE (r_hci_cmd_get_max_param_size = 0x400192d0)
                [!provide]                        PROVIDE (r_hci_cmd_received = 0x400192f8)
                [!provide]                        PROVIDE (r_hci_evt_filter_add = 0x40018a64)
                [!provide]                        PROVIDE (r_hci_evt_mask_set = 0x400189e4)
                [!provide]                        PROVIDE (r_hci_fc_acl_buf_size_set = 0x40017988)
                [!provide]                        PROVIDE (r_hci_fc_acl_en = 0x400179d8)
                [!provide]                        PROVIDE (r_hci_fc_acl_packet_sent = 0x40017a3c)
                [!provide]                        PROVIDE (r_hci_fc_check_host_available_nb_acl_packets = 0x40017aa4)
                [!provide]                        PROVIDE (r_hci_fc_check_host_available_nb_sync_packets = 0x40017ac8)
                [!provide]                        PROVIDE (r_hci_fc_host_nb_acl_pkts_complete = 0x40017a6c)
                [!provide]                        PROVIDE (r_hci_fc_host_nb_sync_pkts_complete = 0x40017a88)
                [!provide]                        PROVIDE (r_hci_fc_init = 0x40017974)
                [!provide]                        PROVIDE (r_hci_fc_sync_buf_size_set = 0x400179b0)
                [!provide]                        PROVIDE (r_hci_fc_sync_en = 0x40017a30)
                [!provide]                        PROVIDE (r_hci_fc_sync_packet_sent = 0x40017a54)
                [!provide]                        PROVIDE (r_hci_init = 0x40018538)
                [!provide]                        PROVIDE (r_hci_look_for_cmd_desc = 0x40018454)
                [!provide]                        PROVIDE (r_hci_look_for_dbg_evt_desc = 0x400184c4)
                [!provide]                        PROVIDE (r_hci_look_for_evt_desc = 0x400184a0)
                [!provide]                        PROVIDE (r_hci_look_for_le_evt_desc = 0x400184e0)
                [!provide]                        PROVIDE (r_hci_reset = 0x4001856c)
                [!provide]                        PROVIDE (r_hci_send_2_host = 0x400185bc)
                [!provide]                        PROVIDE (r_hci_sync_tx_data_alloc = 0x40019754)
                [!provide]                        PROVIDE (r_hci_sync_tx_data_received = 0x400197c0)
                [!provide]                        PROVIDE (r_hci_tl_init = 0x40019290)
                [!provide]                        PROVIDE (r_hci_tl_send = 0x40019228)
                [!provide]                        PROVIDE (r_hci_util_pack = 0x40019874)
                [!provide]                        PROVIDE (r_hci_util_unpack = 0x40019998)
                [!provide]                        PROVIDE (r_hci_voice_settings_get = 0x40018bdc)
                [!provide]                        PROVIDE (r_hci_voice_settings_set = 0x40018be8)
                [!provide]                        PROVIDE (r_HMAC = 0x40013968)
                [!provide]                        PROVIDE (r_import_rf_phy_func = 0x3ffb8354)
                [!provide]                        PROVIDE (r_import_rf_phy_func_p = 0x3ffafd64)
                [!provide]                        PROVIDE (r_ip_funcs = 0x3ffae710)
                [!provide]                        PROVIDE (r_ip_funcs_p = 0x3ffae70c)
                [!provide]                        PROVIDE (r_ke_check_malloc = 0x40019de0)
                [!provide]                        PROVIDE (r_ke_event_callback_set = 0x40019ba8)
                [!provide]                        PROVIDE (r_ke_event_clear = 0x40019c2c)
                [!provide]                        PROVIDE (r_ke_event_flush = 0x40019ccc)
                [!provide]                        PROVIDE (r_ke_event_get = 0x40019c78)
                [!provide]                        PROVIDE (r_ke_event_get_all = 0x40019cc0)
                [!provide]                        PROVIDE (r_ke_event_init = 0x40019b90)
                [!provide]                        PROVIDE (r_ke_event_schedule = 0x40019cdc)
                [!provide]                        PROVIDE (r_ke_event_set = 0x40019be0)
                [!provide]                        PROVIDE (r_ke_flush = 0x4001a374)
                [!provide]                        PROVIDE (r_ke_free = 0x4001a014)
                [!provide]                        PROVIDE (r_ke_get_max_mem_usage = 0x4001a1c8)
                [!provide]                        PROVIDE (r_ke_get_mem_usage = 0x4001a1a0)
                [!provide]                        PROVIDE (r_ke_init = 0x4001a318)
                [!provide]                        PROVIDE (r_ke_is_free = 0x4001a184)
                [!provide]                        PROVIDE (r_ke_malloc = 0x40019eb4)
                [!provide]                        PROVIDE (r_ke_mem_init = 0x40019d3c)
                [!provide]                        PROVIDE (r_ke_mem_is_empty = 0x40019d8c)
                [!provide]                        PROVIDE (r_ke_msg_alloc = 0x4001a1e0)
                [!provide]                        PROVIDE (r_ke_msg_dest_id_get = 0x4001a2e0)
                [!provide]                        PROVIDE (r_ke_msg_discard = 0x4001a850)
                [!provide]                        PROVIDE (r_ke_msg_forward = 0x4001a290)
                [!provide]                        PROVIDE (r_ke_msg_forward_new_id = 0x4001a2ac)
                [!provide]                        PROVIDE (r_ke_msg_free = 0x4001a2cc)
                [!provide]                        PROVIDE (r_ke_msg_in_queue = 0x4001a2f8)
                [!provide]                        PROVIDE (r_ke_msg_save = 0x4001a858)
                [!provide]                        PROVIDE (r_ke_msg_send = 0x4001a234)
                [!provide]                        PROVIDE (r_ke_msg_send_basic = 0x4001a26c)
                [!provide]                        PROVIDE (r_ke_msg_src_id_get = 0x4001a2ec)
                [!provide]                        PROVIDE (r_ke_queue_extract = 0x40055fd0)
                [!provide]                        PROVIDE (r_ke_queue_insert = 0x40056020)
                [!provide]                        PROVIDE (r_ke_sleep_check = 0x4001a3d8)
                [!provide]                        PROVIDE (r_ke_state_get = 0x4001a7d8)
                [!provide]                        PROVIDE (r_ke_state_set = 0x4001a6fc)
                [!provide]                        PROVIDE (r_ke_stats_get = 0x4001a3f0)
                [!provide]                        PROVIDE (r_ke_task_check = 0x4001a8a4)
                [!provide]                        PROVIDE (r_ke_task_create = 0x4001a674)
                [!provide]                        PROVIDE (r_ke_task_delete = 0x4001a6c0)
                [!provide]                        PROVIDE (r_ke_task_init = 0x4001a650)
                [!provide]                        PROVIDE (r_ke_task_msg_flush = 0x4001a860)
                [!provide]                        PROVIDE (r_ke_timer_active = 0x4001ac08)
                [!provide]                        PROVIDE (r_ke_timer_adjust_all = 0x4001ac30)
                [!provide]                        PROVIDE (r_ke_timer_clear = 0x4001ab90)
                [!provide]                        PROVIDE (r_ke_timer_init = 0x4001aa9c)
                [!provide]                        PROVIDE (r_ke_timer_set = 0x4001aac0)
                [!provide]                        PROVIDE (r_ke_timer_sleep_check = 0x4001ac50)
                [!provide]                        PROVIDE (r_KPrimC = 0x40010ad4)
                [!provide]                        PROVIDE (r_lb_clk_adj_activate = 0x4001ae70)
                [!provide]                        PROVIDE (r_lb_clk_adj_id_get = 0x4001af14)
                [!provide]                        PROVIDE (r_lb_clk_adj_period_update = 0x4001af20)
                [!provide]                        PROVIDE (r_lb_init = 0x4001acd4)
                [!provide]                        PROVIDE (r_lb_mst_key = 0x4001afc0)
                [!provide]                        PROVIDE (r_lb_mst_key_cmp = 0x4001af74)
                [!provide]                        PROVIDE (r_lb_mst_key_restart_enc = 0x4001b0d4)
                [!provide]                        PROVIDE (r_lb_mst_start_act_bcst_enc = 0x4001b198)
                [!provide]                        PROVIDE (r_lb_mst_stop_act_bcst_enc = 0x4001b24c)
                [!provide]                        PROVIDE (r_lb_reset = 0x4001ad38)
                [!provide]                        PROVIDE (r_lb_send_lmp = 0x4001adbc)
                [!provide]                        PROVIDE (r_lb_send_pdu_clk_adj = 0x4001af3c)
                [!provide]                        PROVIDE (r_lb_util_get_csb_mode = 0x4001ada4)
                [!provide]                        PROVIDE (r_lb_util_get_nb_broadcast = 0x4001ad80)
                [!provide]                        PROVIDE (r_lb_util_get_res_lt_addr = 0x4001ad98)
                [!provide]                        PROVIDE (r_lb_util_set_nb_broadcast = 0x4001ad8c)
                [!provide]                        PROVIDE (r_lc_afh_set = 0x4001cc74)
                [!provide]                        PROVIDE (r_lc_afh_start = 0x4001d240)
                [!provide]                        PROVIDE (r_lc_auth_cmp = 0x4001cd54)
                [!provide]                        PROVIDE (r_lc_calc_link_key = 0x4001ce7c)
                [!provide]                        PROVIDE (r_lc_chg_pkt_type_cmp = 0x4001d038)
                [!provide]                        PROVIDE (r_lc_chg_pkt_type_cont = 0x4001cfbc)
                [!provide]                        PROVIDE (r_lc_chg_pkt_type_retry = 0x4001d0ac)
                [!provide]                        PROVIDE (r_lc_chk_to = 0x4001d2a8)
                [!provide]                        PROVIDE (r_lc_cmd_stat_send = 0x4001c914)
                [!provide]                        PROVIDE (r_lc_comb_key_svr = 0x4001d30c)
                [!provide]                        PROVIDE (r_lc_con_cmp = 0x4001d44c)
                [!provide]                        PROVIDE (r_lc_con_cmp_evt_send = 0x4001d4fc)
                [!provide]                        PROVIDE (r_lc_conn_seq_done = 0x40021334)
                [!provide]                        PROVIDE (r_lc_detach = 0x4002037c)
                [!provide]                        PROVIDE (r_lc_dhkey = 0x4001d564)
                [!provide]                        PROVIDE (r_lc_enc_cmp = 0x4001d8bc)
                [!provide]                        PROVIDE (r_lc_enc_key_refresh = 0x4001d720)
                [!provide]                        PROVIDE (r_lc_end_chk_colli = 0x4001d858)
                [!provide]                        PROVIDE (r_lc_end_of_sniff_nego = 0x4001d9a4)
                [!provide]                        PROVIDE (r_lc_enter_sniff_mode = 0x4001ddb8)
                [!provide]                        PROVIDE (r_lc_epr_change_lk = 0x4001db38)
                [!provide]                        PROVIDE (r_lc_epr_cmp = 0x4001da88)
                [!provide]                        PROVIDE (r_lc_epr_resp = 0x4001e0b4)
                [!provide]                        PROVIDE (r_lc_epr_rsw_cmp = 0x4001dd40)
                [!provide]                        PROVIDE (r_lc_ext_feat = 0x40020d6c)
                [!provide]                        PROVIDE (r_lc_feat = 0x40020984)
                [!provide]                        PROVIDE (r_lc_hl_connect = 0x400209e8)
                [!provide]                        PROVIDE (r_lc_init = 0x4001c948)
                [!provide]                        PROVIDE (r_lc_init_calc_f3 = 0x4001deb0)
                [!provide]                        PROVIDE (r_lc_initiator_epr = 0x4001e064)
                [!provide]                        PROVIDE (r_lc_init_passkey_loop = 0x4001dfc0)
                [!provide]                        PROVIDE (r_lc_init_start_mutual_auth = 0x4001df60)
                [!provide]                        PROVIDE (r_lc_key_exch_end = 0x4001e140)
                [!provide]                        PROVIDE (r_lc_legacy_pair = 0x4001e1c0)
                [!provide]                        PROVIDE (r_lc_local_switch = 0x4001e22c)
                [!provide]                        PROVIDE (r_lc_local_trans_mode = 0x4001e2e4)
                [!provide]                        PROVIDE (r_lc_local_untrans_mode = 0x4001e3a0)
                [!provide]                        PROVIDE (r_lc_loc_auth = 0x40020ecc)
                [!provide]                        PROVIDE (r_lc_locepr_lkref = 0x4001d648)
                [!provide]                        PROVIDE (r_lc_locepr_rsw = 0x4001d5d0)
                [!provide]                        PROVIDE (r_lc_loc_sniff = 0x40020a6c)
                [!provide]                        PROVIDE (r_lc_max_slot_mgt = 0x4001e410)
                [!provide]                        PROVIDE (r_lc_mst_key = 0x4001e7c0)
                [!provide]                        PROVIDE (r_lc_mst_qos_done = 0x4001ea80)
                [!provide]                        PROVIDE (r_lc_mst_send_mst_key = 0x4001e8f4)
                [!provide]                        PROVIDE (r_lc_mutual_auth_end = 0x4001e670)
                [!provide]                        PROVIDE (r_lc_mutual_auth_end2 = 0x4001e4f4)
                [!provide]                        PROVIDE (r_lc_packet_type = 0x40021038)
                [!provide]                        PROVIDE (r_lc_pair = 0x40020ddc)
                [!provide]                        PROVIDE (r_lc_pairing_cont = 0x4001eafc)
                [!provide]                        PROVIDE (r_lc_passkey_comm = 0x4001ed20)
                [!provide]                        PROVIDE (r_lc_prepare_all_links_for_clk_adj = 0x40021430)
                [!provide]                        PROVIDE (r_lc_proc_rcv_dhkey = 0x4001edec)
                [!provide]                        PROVIDE (r_lc_ptt = 0x4001ee2c)
                [!provide]                        PROVIDE (r_lc_ptt_cmp = 0x4001eeec)
                [!provide]                        PROVIDE (r_lc_qos_setup = 0x4001ef50)
                [!provide]                        PROVIDE (r_lc_rd_rem_name = 0x4001efd0)
                [!provide]                        PROVIDE (r_lc_release = 0x4001f8a8)
                [!provide]                        PROVIDE (r_lc_rem_enc = 0x4001f124)
                [!provide]                        PROVIDE (r_lc_rem_name_cont = 0x4001f290)
                [!provide]                        PROVIDE (r_lc_rem_nego_trans_mode = 0x4001f1b4)
                [!provide]                        PROVIDE (r_lc_rem_sniff = 0x40020ca4)
                [!provide]                        PROVIDE (r_lc_rem_sniff_sub_rate = 0x40020b10)
                [!provide]                        PROVIDE (r_lc_rem_switch = 0x4001f070)
                [!provide]                        PROVIDE (r_lc_rem_trans_mode = 0x4001f314)
                [!provide]                        PROVIDE (r_lc_rem_unsniff = 0x400207a0)
                [!provide]                        PROVIDE (r_lc_rem_untrans_mode = 0x4001f36c)
                [!provide]                        PROVIDE (r_lc_reset = 0x4001c99c)
                [!provide]                        PROVIDE (r_lc_resp_auth = 0x4001f518)
                [!provide]                        PROVIDE (r_lc_resp_calc_f3 = 0x4001f710)
                [!provide]                        PROVIDE (r_lc_resp_num_comp = 0x40020074)
                [!provide]                        PROVIDE (r_lc_resp_oob_nonce = 0x4001f694)
                [!provide]                        PROVIDE (r_lc_resp_oob_wait_nonce = 0x4001f66c)
                [!provide]                        PROVIDE (r_lc_resp_pair = 0x400208a4)
                [!provide]                        PROVIDE (r_lc_resp_sec_auth = 0x4001f4a0)
                [!provide]                        PROVIDE (r_lc_resp_wait_dhkey_cont = 0x4001f86c)
                [!provide]                        PROVIDE (r_lc_restart_enc = 0x4001f8ec)
                [!provide]                        PROVIDE (r_lc_restart_enc_cont = 0x4001f940)
                [!provide]                        PROVIDE (r_lc_restore_afh_reporting = 0x4001f028)
                [!provide]                        PROVIDE (r_lc_restore_to = 0x4001f9e0)
                [!provide]                        PROVIDE (r_lc_ret_sniff_max_slot_chg = 0x4001fa30)
                [!provide]                        PROVIDE (r_lc_rsw_clean_up = 0x4001dc70)
                [!provide]                        PROVIDE (r_lc_rsw_done = 0x4001db94)
                [!provide]                        PROVIDE (r_lc_sco_baseband_ack = 0x40022b00)
                [!provide]                        PROVIDE (r_lc_sco_detach = 0x40021e40)
                [!provide]                        PROVIDE (r_lc_sco_host_accept = 0x40022118)
                [!provide]                        PROVIDE (r_lc_sco_host_reject = 0x400222b8)
                [!provide]                        PROVIDE (r_lc_sco_host_request = 0x40021f4c)
                [!provide]                        PROVIDE (r_lc_sco_host_request_disc = 0x4002235c)
                [!provide]                        PROVIDE (r_lc_sco_init = 0x40021dc8)
                [!provide]                        PROVIDE (r_lc_sco_peer_accept = 0x40022780)
                [!provide]                        PROVIDE (r_lc_sco_peer_accept_disc = 0x40022a08)
                [!provide]                        PROVIDE (r_lc_sco_peer_reject = 0x40022824)
                [!provide]                        PROVIDE (r_lc_sco_peer_reject_disc = 0x40022a8c)
                [!provide]                        PROVIDE (r_lc_sco_peer_request = 0x4002240c)
                [!provide]                        PROVIDE (r_lc_sco_peer_request_disc = 0x400228ec)
                [!provide]                        PROVIDE (r_lc_sco_release = 0x40021eec)
                [!provide]                        PROVIDE (r_lc_sco_reset = 0x40021dfc)
                [!provide]                        PROVIDE (r_lc_sco_timeout = 0x40022bd4)
                [!provide]                        PROVIDE (r_lc_sec_auth_compute_sres = 0x4001f3ec)
                [!provide]                        PROVIDE (r_lc_semi_key_cmp = 0x40020294)
                [!provide]                        PROVIDE (r_lc_send_enc_chg_evt = 0x4002134c)
                [!provide]                        PROVIDE (r_lc_send_enc_mode = 0x40020220)
                [!provide]                        PROVIDE (r_lc_send_lmp = 0x4001c1a8)
                [!provide]                        PROVIDE (r_lc_send_pdu_acc = 0x4001c21c)
                [!provide]                        PROVIDE (r_lc_send_pdu_acc_ext4 = 0x4001c240)
                [!provide]                        PROVIDE (r_lc_send_pdu_au_rand = 0x4001c308)
                [!provide]                        PROVIDE (r_lc_send_pdu_auto_rate = 0x4001c5d0)
                [!provide]                        PROVIDE (r_lc_send_pdu_clk_adj_ack = 0x4001c46c)
                [!provide]                        PROVIDE (r_lc_send_pdu_clk_adj_req = 0x4001c494)
                [!provide]                        PROVIDE (r_lc_send_pdu_comb_key = 0x4001c368)
                [!provide]                        PROVIDE (r_lc_send_pdu_dhkey_chk = 0x4001c8e8)
                [!provide]                        PROVIDE (r_lc_send_pdu_encaps_head = 0x4001c440)
                [!provide]                        PROVIDE (r_lc_send_pdu_encaps_payl = 0x4001c410)
                [!provide]                        PROVIDE (r_lc_send_pdu_enc_key_sz_req = 0x4001c670)
                [!provide]                        PROVIDE (r_lc_send_pdu_esco_lk_rem_req = 0x4001c5a8)
                [!provide]                        PROVIDE (r_lc_send_pdu_feats_ext_req = 0x4001c6ec)
                [!provide]                        PROVIDE (r_lc_send_pdu_feats_res = 0x4001c694)
                [!provide]                        PROVIDE (r_lc_send_pdu_in_rand = 0x4001c338)
                [!provide]                        PROVIDE (r_lc_send_pdu_io_cap_res = 0x4001c72c)
                [!provide]                        PROVIDE (r_lc_send_pdu_lsto = 0x4001c64c)
                [!provide]                        PROVIDE (r_lc_send_pdu_max_slot = 0x4001c3c8)
                [!provide]                        PROVIDE (r_lc_send_pdu_max_slot_req = 0x4001c3ec)
                [!provide]                        PROVIDE (r_lc_send_pdu_not_acc = 0x4001c26c)
                [!provide]                        PROVIDE (r_lc_send_pdu_not_acc_ext4 = 0x4001c294)
                [!provide]                        PROVIDE (r_lc_send_pdu_num_comp_fail = 0x4001c770)
                [!provide]                        PROVIDE (r_lc_send_pdu_pause_enc_aes_req = 0x4001c794)
                [!provide]                        PROVIDE (r_lc_send_pdu_paus_enc_req = 0x4001c7c0)
                [!provide]                        PROVIDE (r_lc_send_pdu_ptt_req = 0x4001c4c0)
                [!provide]                        PROVIDE (r_lc_send_pdu_qos_req = 0x4001c82c)
                [!provide]                        PROVIDE (r_lc_send_pdu_resu_enc_req = 0x4001c7e4)
                [!provide]                        PROVIDE (r_lc_send_pdu_sco_lk_rem_req = 0x4001c580)
                [!provide]                        PROVIDE (r_lc_send_pdu_set_afh = 0x4001c2c8)
                [!provide]                        PROVIDE (r_lc_send_pdu_setup_cmp = 0x4001c808)
                [!provide]                        PROVIDE (r_lc_send_pdu_slot_off = 0x4001c854)
                [!provide]                        PROVIDE (r_lc_send_pdu_sniff_req = 0x4001c5f0)
                [!provide]                        PROVIDE (r_lc_send_pdu_sp_cfm = 0x4001c518)
                [!provide]                        PROVIDE (r_lc_send_pdu_sp_nb = 0x4001c4e8)
                [!provide]                        PROVIDE (r_lc_send_pdu_sres = 0x4001c548)
                [!provide]                        PROVIDE (r_lc_send_pdu_tim_acc = 0x4001c6cc)
                [!provide]                        PROVIDE (r_lc_send_pdu_unit_key = 0x4001c398)
                [!provide]                        PROVIDE (r_lc_send_pdu_unsniff_req = 0x4001c894)
                [!provide]                        PROVIDE (r_lc_send_pdu_vers_req = 0x4001c8b4)
                [!provide]                        PROVIDE (r_lc_skip_hl_oob_req = 0x400201bc)
                [!provide]                        PROVIDE (r_lc_sniff_init = 0x40022cac)
                [!provide]                        PROVIDE (r_lc_sniff_max_slot_chg = 0x40020590)
                [!provide]                        PROVIDE (r_lc_sniff_reset = 0x40022cc8)
                [!provide]                        PROVIDE (r_lc_sniff_slot_unchange = 0x40021100)
                [!provide]                        PROVIDE (r_lc_sniff_sub_mode = 0x400204fc)
                [!provide]                        PROVIDE (r_lc_sp_end = 0x400213a8)
                [!provide]                        PROVIDE (r_lc_sp_fail = 0x40020470)
                [!provide]                        PROVIDE (r_lc_sp_oob_tid_fail = 0x400204cc)
                [!provide]                        PROVIDE (r_lc_ssr_nego = 0x4002125c)
                [!provide]                        PROVIDE (r_lc_start = 0x4001ca28)
                [!provide]                        PROVIDE (r_lc_start_enc = 0x4001fb28)
                [!provide]                        PROVIDE (r_lc_start_enc_key_size = 0x4001fd9c)
                [!provide]                        PROVIDE (r_lc_start_key_exch = 0x4001fe10)
                [!provide]                        PROVIDE (r_lc_start_lmp_to = 0x4001fae8)
                [!provide]                        PROVIDE (r_lc_start_oob = 0x4001fffc)
                [!provide]                        PROVIDE (r_lc_start_passkey = 0x4001feac)
                [!provide]                        PROVIDE (r_lc_start_passkey_loop = 0x4001ff88)
                [!provide]                        PROVIDE (r_lc_stop_afh_report = 0x40020184)
                [!provide]                        PROVIDE (r_lc_stop_enc = 0x40020110)
                [!provide]                        PROVIDE (r_lc_switch_cmp = 0x40020448)
                [!provide]                        PROVIDE (r_lc_unit_key_svr = 0x400206d8)
                [!provide]                        PROVIDE (r_lc_unsniff = 0x40020c50)
                [!provide]                        PROVIDE (r_lc_unsniff_cmp = 0x40020810)
                [!provide]                        PROVIDE (r_lc_unsniff_cont = 0x40020750)
                [!provide]                        PROVIDE (r_lc_upd_to = 0x4002065c)
                [!provide]                        PROVIDE (r_lc_util_convert_pref_rate_to_packet_type = 0x4002f9b0)
                [!provide]                        PROVIDE (r_lc_util_get_max_packet_size = 0x4002f4ac)
                [!provide]                        PROVIDE (r_lc_util_get_offset_clke = 0x4002f538)
                [!provide]                        PROVIDE (r_lc_util_get_offset_clkn = 0x4002f51c)
                [!provide]                        PROVIDE (r_lc_util_set_loc_trans_coll = 0x4002f500)
                [!provide]                        PROVIDE (r_lc_version = 0x40020a30)
                [!provide]                        PROVIDE (lc_set_encap_pdu_data_p192 = 0x4002e4c8)
                [!provide]                        PROVIDE (lc_set_encap_pdu_data_p256 = 0x4002e454)
                [!provide]                        PROVIDE (lm_get_auth_method = 0x40023420)
                [!provide]                        PROVIDE (lmp_accepted_ext_handler = 0x40027290)
                [!provide]                        PROVIDE (lmp_not_accepted_ext_handler = 0x40029c54)
                [!provide]                        PROVIDE (lmp_clk_adj_handler = 0x40027468)
                [!provide]                        PROVIDE (lmp_clk_adj_ack_handler = 0x400274f4)
                [!provide]                        PROVIDE (lm_get_auth_method = 0x40023420)
                [!provide]                        PROVIDE (lmp_accepted_ext_handler = 0x40027290)
                [!provide]                        PROVIDE (lmp_not_accepted_ext_handler = 0x40029c54)
                [!provide]                        PROVIDE (lmp_clk_adj_handler = 0x40027468)
                [!provide]                        PROVIDE (lmp_clk_adj_ack_handler = 0x400274f4)
                [!provide]                        PROVIDE (lmp_clk_adj_req_handler = 0x4002751c)
                [!provide]                        PROVIDE (lmp_feats_res_ext_handler = 0x4002cac4)
                [!provide]                        PROVIDE (lmp_feats_req_ext_handler = 0x4002ccb0)
                [!provide]                        PROVIDE (lmp_pkt_type_tbl_req_handler = 0x40027574)
                [!provide]                        PROVIDE (lmp_esco_link_req_handler = 0x40027610)
                [!provide]                        PROVIDE (lmp_rmv_esco_link_req_handler = 0x400276e8)
                [!provide]                        PROVIDE (lmp_ch_class_req_handler = 0x40027730)
                [!provide]                        PROVIDE (lmp_ch_class_handler = 0x4002ca18)
                [!provide]                        PROVIDE (lmp_ssr_req_handler = 0x4002780c)
                [!provide]                        PROVIDE (lmp_ssr_res_handler = 0x40027900)
                [!provide]                        PROVIDE (lmp_pause_enc_aes_req_handler = 0x400279a4)
                [!provide]                        PROVIDE (lmp_pause_enc_req_handler = 0x4002df90)
                [!provide]                        PROVIDE (lmp_resume_enc_req_handler = 0x4002e084)
                [!provide]                        PROVIDE (lmp_num_comparison_fail_handler = 0x40027a74)
                [!provide]                        PROVIDE (lmp_passkey_fail_handler = 0x40027aec)
                [!provide]                        PROVIDE (lmp_keypress_notif_handler = 0x4002c5c8)
                [!provide]                        PROVIDE (lmp_pwr_ctrl_req_handler = 0x400263bc)
                [!provide]                        PROVIDE (lmp_pwr_ctrl_res_handler = 0x40026480)
                [!provide]                        PROVIDE (lmp_auto_rate_handler = 0x40026548)
                [!provide]                        PROVIDE (lmp_pref_rate_handler = 0x4002657c)
                [!provide]                        PROVIDE (lmp_name_req_handler = 0x40025050)
                [!provide]                        PROVIDE (lmp_name_res_handler = 0x400250bc)
                [!provide]                        PROVIDE (lmp_not_accepted_handler = 0x400251d0)
                [!provide]                        PROVIDE (lmp_accepted_handler = 0x4002e894)
                [!provide]                        PROVIDE (lmp_clk_off_req_handler = 0x40025a44)
                [!provide]                        PROVIDE (lmp_clk_off_res_handler = 0x40025ab8)
                [!provide]                        PROVIDE (lmp_detach_handler = 0x40025b74)
                [!provide]                        PROVIDE (lmp_tempkey_handler = 0x4002b6b0)
                [!provide]                        PROVIDE (lmp_temprand_handler = 0x4002b74c)
                [!provide]                        PROVIDE (lmp_sres_handler = 0x4002b840)
                [!provide]                        PROVIDE (lmp_aurand_handler = 0x4002bda0)
                [!provide]                        PROVIDE (lmp_unitkey_handler = 0x4002c13c)
                [!provide]                        PROVIDE (lmp_combkey_handler = 0x4002c234)
                [!provide]                        PROVIDE (lmp_inrand_handler = 0x4002c414)
                [!provide]                        PROVIDE (lmp_oob_fail_handler = 0x40027b84)
                [!provide]                        PROVIDE (lmp_ping_req_handler = 0x40027c08)
                [!provide]                        PROVIDE (lmp_ping_res_handler = 0x40027c5c)
                [!provide]                        PROVIDE (lmp_enc_mode_req_handler = 0x40025c60)
                [!provide]                        PROVIDE (lmp_enc_key_size_req_handler = 0x40025e54)
                [!provide]                        PROVIDE (lmp_switch_req_handler = 0x40025f84)
                [!provide]                        PROVIDE (lmp_start_enc_req_handler = 0x4002e124)
                [!provide]                        PROVIDE (lmp_stop_enc_req_handler = 0x4002de30)
                [!provide]                        PROVIDE (lmp_sniff_req_handler = 0x400260c8)
                [!provide]                        PROVIDE (lmp_unsniff_req_handler = 0x400261e0)
                [!provide]                        PROVIDE (lmp_incr_pwr_req_handler = 0x4002629c)
                [!provide]                        PROVIDE (lmp_decr_pwr_req_handler = 0x400262f8)
                [!provide]                        PROVIDE (lmp_max_pwr_handler = 0x40026354)
                [!provide]                        PROVIDE (lmp_min_pwr_handler = 0x40026388)
                [!provide]                        PROVIDE (lmp_ver_req_handler = 0x400265f0)
                [!provide]                        PROVIDE (lmp_ver_res_handler = 0x40026670)
                [!provide]                        PROVIDE (lmp_qos_handler = 0x40026790)
                [!provide]                        PROVIDE (lmp_qos_req_handler = 0x40026844)
                [!provide]                        PROVIDE (lmp_sco_link_req_handler = 0x40026930)
                [!provide]                        PROVIDE (lmp_rmv_sco_link_req_handler = 0x40026a10)
                [!provide]                        PROVIDE (lmp_max_slot_handler = 0x40026a54)
                [!provide]                        PROVIDE (lmp_max_slot_req_handler = 0x40026aac)
                [!provide]                        PROVIDE (lmp_timing_accu_req_handler = 0x40026b54)
                [!provide]                        PROVIDE (lmp_timing_accu_res_handler = 0x40026bcc)
                [!provide]                        PROVIDE (lmp_setup_cmp_handler = 0x40026c84)
                [!provide]                        PROVIDE (lmp_feats_res_handler = 0x4002b548)
                [!provide]                        PROVIDE (lmp_feats_req_handler = 0x4002b620)
                [!provide]                        PROVIDE (lmp_host_con_req_handler = 0x4002b3d8)
                [!provide]                        PROVIDE (lmp_use_semi_perm_key_handler = 0x4002b4c4)
                [!provide]                        PROVIDE (lmp_slot_off_handler = 0x40026cc8)
                [!provide]                        PROVIDE (lmp_page_mode_req_handler = 0x40026d0c)
                [!provide]                        PROVIDE (lmp_page_scan_mode_req_handler = 0x40026d4c)
                [!provide]                        PROVIDE (lmp_supv_to_handler = 0x40026d94)
                [!provide]                        PROVIDE (lmp_test_activate_handler = 0x40026e7c)
                [!provide]                        PROVIDE (lmp_test_ctrl_handler = 0x40026ee4)
                [!provide]                        PROVIDE (lmp_enc_key_size_mask_req_handler = 0x40027038)
                [!provide]                        PROVIDE (lmp_enc_key_size_mask_res_handler = 0x400270a4)
                [!provide]                        PROVIDE (lmp_set_afh_handler = 0x4002b2e4)
                [!provide]                        PROVIDE (lmp_encaps_hdr_handler = 0x40027120)
                [!provide]                        PROVIDE (lmp_encaps_payl_handler = 0x4002e590)
                [!provide]                        PROVIDE (lmp_sp_nb_handler = 0x4002acf0)
                [!provide]                        PROVIDE (lmp_sp_cfm_handler = 0x4002b170)
                [!provide]                        PROVIDE (lmp_dhkey_chk_handler = 0x4002ab48)
                [!provide]                        PROVIDE (lmp_pause_enc_aes_req_handler = 0x400279a4)
                [!provide]                        PROVIDE (lmp_io_cap_res_handler = 0x4002c670)
                [!provide]                        PROVIDE (lmp_io_cap_req_handler = 0x4002c7a4)
                [!provide]                        PROVIDE (lc_cmd_cmp_bd_addr_send = 0x4002cec4)
                [!provide]                        PROVIDE (ld_acl_tx_packet_type_select = 0x4002fb40)
                [!provide]                        PROVIDE (ld_acl_sched = 0x40033268)
                [!provide]                        PROVIDE (ld_acl_sniff_sched = 0x4003340c)
                [!provide]                        PROVIDE (ld_acl_rx = 0x4003274c)
                [!provide]                        PROVIDE (ld_acl_tx = 0x4002ffdc)
                [!provide]                        PROVIDE (ld_acl_rx_sync = 0x4002fbec)
                [!provide]                        PROVIDE (ld_acl_rx_sync2 = 0x4002fd8c)
                [!provide]                        PROVIDE (ld_acl_rx_no_sync = 0x4002fe78)
                [!provide]                        PROVIDE (ld_acl_clk_isr = 0x40030cf8)
                [!provide]                        PROVIDE (ld_acl_rsw_frm_cbk = 0x40033bb0)
                [!provide]                        PROVIDE (ld_sco_modify = 0x40031778)
                [!provide]                        PROVIDE (lm_cmd_cmp_send = 0x40051838)
                [!provide]                        PROVIDE (ld_sco_frm_cbk = 0x400349dc)
                [!provide]                        PROVIDE (ld_acl_sco_rsvd_check = 0x4002fa94)
                [!provide]                        PROVIDE (ld_acl_sniff_frm_cbk = 0x4003482c)
                [!provide]                        PROVIDE (ld_inq_end = 0x4003ab48)
                [!provide]                        PROVIDE (ld_inq_sched = 0x4003aba4)
                [!provide]                        PROVIDE (ld_inq_frm_cbk = 0x4003ae4c)
                [!provide]                        PROVIDE (ld_pscan_frm_cbk = 0x4003ebe4)
                [!provide]                        PROVIDE (r_ld_acl_active_hop_types_get = 0x40036e10)
                [!provide]                        PROVIDE (r_ld_acl_afh_confirm = 0x40036d40)
                [!provide]                        PROVIDE (r_ld_acl_afh_prepare = 0x40036c84)
                [!provide]                        PROVIDE (r_ld_acl_afh_set = 0x40036b60)
                [!provide]                        PROVIDE (r_ld_acl_allowed_tx_packet_types_set = 0x40036810)
                [!provide]                        PROVIDE (r_ld_acl_bcst_rx_dec = 0x40036394)
                [!provide]                        PROVIDE (r_ld_acl_bit_off_get = 0x40036b18)
                [!provide]                        PROVIDE (r_ld_acl_clk_adj_set = 0x40036a00)
                [!provide]                        PROVIDE (r_ld_acl_clk_off_get = 0x40036b00)
                [!provide]                        PROVIDE (r_ld_acl_clk_set = 0x40036950)
                [!provide]                        PROVIDE (r_ld_acl_clock_offset_get = 0x400364c0)
                [!provide]                        PROVIDE (r_ld_acl_current_tx_power_get = 0x400368f0)
                [!provide]                        PROVIDE (r_ld_acl_data_flush = 0x400357bc)
                [!provide]                        PROVIDE (r_ld_acl_data_tx = 0x4003544c)
                [!provide]                        PROVIDE (r_ld_acl_edr_set = 0x4003678c)
                [!provide]                        PROVIDE (r_ld_acl_enc_key_load = 0x40036404)
                [!provide]                        PROVIDE (r_ld_acl_flow_off = 0x40035400)
                [!provide]                        PROVIDE (r_ld_acl_flow_on = 0x4003541c)
                [!provide]                        PROVIDE (r_ld_acl_flush_timeout_get = 0x40035f9c)
                [!provide]                        PROVIDE (r_ld_acl_flush_timeout_set = 0x40035fe0)
                [!provide]                        PROVIDE (r_ld_acl_init = 0x40034d08)
                [!provide]                        PROVIDE (r_ld_acl_lmp_flush = 0x40035d80)
                [!provide]                        PROVIDE (r_ld_acl_lmp_tx = 0x40035b34)
                [!provide]                        PROVIDE (r_ld_acl_lsto_get = 0x400366b4)
                [!provide]                        PROVIDE (r_ld_acl_lsto_set = 0x400366f8)
                [!provide]                        PROVIDE (r_ld_acl_reset = 0x40034d24)
                [!provide]                        PROVIDE (r_ld_acl_role_get = 0x40036b30)
                [!provide]                        PROVIDE (r_ld_acl_rssi_delta_get = 0x40037028)
                [!provide]                        PROVIDE (r_ld_acl_rsw_req = 0x40035e74)
                [!provide]                        PROVIDE (r_ld_acl_rx_enc = 0x40036344)
                [!provide]                        PROVIDE (r_ld_acl_rx_max_slot_get = 0x40036e58)
                [!provide]                        PROVIDE (r_ld_acl_rx_max_slot_set = 0x40036ea0)
                [!provide]                        PROVIDE (r_ld_acl_slot_offset_get = 0x4003653c)
                [!provide]                        PROVIDE (r_ld_acl_slot_offset_set = 0x40036658)
                [!provide]                        PROVIDE (r_ld_acl_sniff = 0x4003617c)
                [!provide]                        PROVIDE (r_ld_acl_sniff_trans = 0x400360a8)
                [!provide]                        PROVIDE (r_ld_acl_ssr_set = 0x40036274)
                [!provide]                        PROVIDE (r_ld_acl_start = 0x40034ddc)
                [!provide]                        PROVIDE (r_ld_acl_stop = 0x4003532c)
                [!provide]                        PROVIDE (r_ld_acl_test_mode_set = 0x40036f24)
                [!provide]                        PROVIDE (r_ld_acl_timing_accuracy_set = 0x4003673c)
                [!provide]                        PROVIDE (r_ld_acl_t_poll_get = 0x40036024)
                [!provide]                        PROVIDE (r_ld_acl_t_poll_set = 0x40036068)
                [!provide]                        PROVIDE (r_ld_acl_tx_enc = 0x400362f8)
                [!provide]                        PROVIDE (ld_acl_frm_cbk = 0x40034414)
                [!provide]                        PROVIDE (ld_acl_rsw_end = 0x40032bc0)
                [!provide]                        PROVIDE (ld_acl_end = 0x40033140)
                [!provide]                        PROVIDE (ld_acl_resched = 0x40033814)
                [!provide]                        PROVIDE (ld_acl_test_mode_update = 0x40032050)
                [!provide]                        PROVIDE (r_ld_acl_unsniff = 0x400361e0)
                [!provide]                        PROVIDE (r_ld_active_check = 0x4003cac4)
                [!provide]                        PROVIDE (r_ld_afh_ch_assess_data_get = 0x4003caec)
                [!provide]                        PROVIDE (r_ld_bcst_acl_data_tx = 0x40038d3c)
                [!provide]                        PROVIDE (r_ld_bcst_acl_init = 0x40038bd0)
                [!provide]                        PROVIDE (r_ld_bcst_acl_reset = 0x40038bdc)
                [!provide]                        PROVIDE (r_ld_bcst_acl_start = 0x4003882c)
                [!provide]                        PROVIDE (r_ld_bcst_afh_update = 0x40038f3c)
                [!provide]                        PROVIDE (r_ld_bcst_enc_key_load = 0x4003906c)
                [!provide]                        PROVIDE (r_ld_bcst_lmp_tx = 0x40038bf8)
                [!provide]                        PROVIDE (r_ld_bcst_tx_enc = 0x40038ff8)
                [!provide]                        PROVIDE (r_ld_bd_addr_get = 0x4003ca20)
                [!provide]                        PROVIDE (r_ld_channel_assess = 0x4003c184)
                [!provide]                        PROVIDE (r_ld_class_of_dev_get = 0x4003ca34)
                [!provide]                        PROVIDE (r_ld_class_of_dev_set = 0x4003ca50)
                [!provide]                        PROVIDE (r_ld_csb_rx_afh_update = 0x40039af4)
                [!provide]                        PROVIDE (r_ld_csb_rx_init = 0x40039690)
                [!provide]                        PROVIDE (r_ld_csb_rx_reset = 0x4003969c)
                [!provide]                        PROVIDE (r_ld_csb_rx_start = 0x4003972c)
                [!provide]                        PROVIDE (r_ld_csb_rx_stop = 0x40039bb8)
                [!provide]                        PROVIDE (r_ld_csb_tx_afh_update = 0x4003a5fc)
                [!provide]                        PROVIDE (r_ld_csb_tx_clr_data = 0x4003a71c)
                [!provide]                        PROVIDE (r_ld_csb_tx_dis = 0x4003a5e8)
                [!provide]                        PROVIDE (r_ld_csb_tx_en = 0x4003a1c0)
                [!provide]                        PROVIDE (r_ld_csb_tx_init = 0x4003a0e8)
                [!provide]                        PROVIDE (r_ld_csb_tx_reset = 0x4003a0f8)
                [!provide]                        PROVIDE (r_ld_csb_tx_set_data = 0x4003a6c0)
                [!provide]                        PROVIDE (r_ld_fm_clk_isr = 0x4003a7a8)
                [!provide]                        PROVIDE (r_ld_fm_frame_isr = 0x4003a82c)
                [!provide]                        PROVIDE (r_ld_fm_init = 0x4003a760)
                [!provide]                        PROVIDE (r_ld_fm_prog_check = 0x4003ab28)
                [!provide]                        PROVIDE (r_ld_fm_prog_disable = 0x4003a984)
                [!provide]                        PROVIDE (r_ld_fm_prog_enable = 0x4003a944)
                [!provide]                        PROVIDE (r_ld_fm_prog_push = 0x4003a9d4)
                [!provide]                        PROVIDE (r_ld_fm_reset = 0x4003a794)
                [!provide]                        PROVIDE (r_ld_fm_rx_isr = 0x4003a7f4)
                [!provide]                        PROVIDE (r_ld_fm_sket_isr = 0x4003a8a4)
                [!provide]                        PROVIDE (r_ld_init = 0x4003c294)
                [!provide]                        PROVIDE (r_ld_inq_init = 0x4003b15c)
                [!provide]                        PROVIDE (r_ld_inq_reset = 0x4003b168)
                [!provide]                        PROVIDE (r_ld_inq_start = 0x4003b1f0)
                [!provide]                        PROVIDE (r_ld_inq_stop = 0x4003b4f0)
                [!provide]                        PROVIDE (r_ld_iscan_eir_get = 0x4003c118)
                [!provide]                        PROVIDE (r_ld_iscan_eir_set = 0x4003bfa0)
                [!provide]                        PROVIDE (r_ld_iscan_init = 0x4003b9f0)
                [!provide]                        PROVIDE (r_ld_iscan_reset = 0x4003ba14)
                [!provide]                        PROVIDE (r_ld_iscan_restart = 0x4003ba44)
                [!provide]                        PROVIDE (r_ld_iscan_start = 0x4003bb28)
                [!provide]                        PROVIDE (r_ld_iscan_stop = 0x4003bf1c)
                [!provide]                        PROVIDE (r_ld_iscan_tx_pwr_get = 0x4003c138)
                [!provide]                        PROVIDE (r_ld_page_init = 0x4003d808)
                [!provide]                        PROVIDE (r_ld_page_reset = 0x4003d814)
                [!provide]                        PROVIDE (r_ld_page_start = 0x4003d848)
                [!provide]                        PROVIDE (r_ld_page_stop = 0x4003da54)
                [!provide]                        PROVIDE (r_ld_pca_coarse_clock_adjust = 0x4003e324)
                [!provide]                        PROVIDE (r_ld_pca_init = 0x4003deb4)
                [!provide]                        PROVIDE (r_ld_pca_initiate_clock_dragging = 0x4003e4ac)
                [!provide]                        PROVIDE (r_ld_pca_local_config = 0x4003df6c)
                [!provide]                        PROVIDE (r_ld_pca_mws_frame_sync = 0x4003e104)
                [!provide]                        PROVIDE (r_ld_pca_mws_moment_offset_gt = 0x4003e278)
                [!provide]                        PROVIDE (r_ld_pca_mws_moment_offset_lt = 0x4003e280)
                [!provide]                        PROVIDE (r_ld_pca_reporting_enable = 0x4003e018)
                [!provide]                        PROVIDE (r_ld_pca_reset = 0x4003df0c)
                [!provide]                        PROVIDE (r_ld_pca_update_target_offset = 0x4003e050)
                [!provide]                        PROVIDE (r_ld_pscan_evt_handler = 0x4003f238)
                [!provide]                        PROVIDE (r_ld_pscan_init = 0x4003f474)
                [!provide]                        PROVIDE (r_ld_pscan_reset = 0x4003f498)
                [!provide]                        PROVIDE (r_ld_pscan_restart = 0x4003f4b8)
                [!provide]                        PROVIDE (r_ld_pscan_start = 0x4003f514)
                [!provide]                        PROVIDE (r_ld_pscan_stop = 0x4003f618)
                [!provide]                        PROVIDE (r_ld_read_clock = 0x4003c9e4)
                [!provide]                        PROVIDE (r_ld_reset = 0x4003c714)
                [!provide]                        PROVIDE (r_ld_sched_acl_add = 0x4003f978)
                [!provide]                        PROVIDE (r_ld_sched_acl_remove = 0x4003f99c)
                [!provide]                        PROVIDE (r_ld_sched_compute = 0x4003f6f8)
                [!provide]                        PROVIDE (r_ld_sched_init = 0x4003f7ac)
                [!provide]                        PROVIDE (r_ld_sched_inq_add = 0x4003f8a8)
                [!provide]                        PROVIDE (r_ld_sched_inq_remove = 0x4003f8d0)
                [!provide]                        PROVIDE (r_ld_sched_iscan_add = 0x4003f7e8)
                [!provide]                        PROVIDE (r_ld_sched_iscan_remove = 0x4003f808)
                [!provide]                        PROVIDE (r_ld_sched_page_add = 0x4003f910)
                [!provide]                        PROVIDE (r_ld_sched_page_remove = 0x4003f938)
                [!provide]                        PROVIDE (r_ld_sched_pscan_add = 0x4003f828)
                [!provide]                        PROVIDE (r_ld_sched_pscan_remove = 0x4003f848)
                [!provide]                        PROVIDE (r_ld_sched_reset = 0x4003f7d4)
                [!provide]                        PROVIDE (r_ld_sched_sco_add = 0x4003fa4c)
                [!provide]                        PROVIDE (r_ld_sched_sco_remove = 0x4003fa9c)
                [!provide]                        PROVIDE (r_ld_sched_sniff_add = 0x4003f9c4)
                [!provide]                        PROVIDE (r_ld_sched_sniff_remove = 0x4003fa0c)
                [!provide]                        PROVIDE (r_ld_sched_sscan_add = 0x4003f868)
                [!provide]                        PROVIDE (r_ld_sched_sscan_remove = 0x4003f888)
                [!provide]                        PROVIDE (r_ld_sco_audio_isr = 0x40037cc8)
                [!provide]                        PROVIDE (r_ld_sco_data_tx = 0x40037ee8)
                [!provide]                        PROVIDE (r_ld_sco_start = 0x40037110)
                [!provide]                        PROVIDE (r_ld_sco_stop = 0x40037c40)
                [!provide]                        PROVIDE (r_ld_sco_update = 0x40037a74)
                [!provide]                        PROVIDE (r_ld_sscan_activated = 0x4004031c)
                [!provide]                        PROVIDE (r_ld_sscan_init = 0x400402f0)
                [!provide]                        PROVIDE (r_ld_sscan_reset = 0x400402fc)
                [!provide]                        PROVIDE (r_ld_sscan_start = 0x40040384)
                [!provide]                        PROVIDE (r_ld_strain_init = 0x400409f4)
                [!provide]                        PROVIDE (r_ld_strain_reset = 0x40040a00)
                [!provide]                        PROVIDE (r_ld_strain_start = 0x40040a8c)
                [!provide]                        PROVIDE (r_ld_strain_stop = 0x40040df0)
                [!provide]                        PROVIDE (r_ld_timing_accuracy_get = 0x4003caac)
                [!provide]                        PROVIDE (r_ld_util_active_master_afh_map_get = 0x4004131c)
                [!provide]                        PROVIDE (r_ld_util_active_master_afh_map_set = 0x40041308)
                [!provide]                        PROVIDE (r_ld_util_bch_create = 0x40040fcc)
                [!provide]                        PROVIDE (r_ld_util_fhs_pk = 0x400411c8)
                [!provide]                        PROVIDE (r_ld_util_fhs_unpk = 0x40040e54)
                [!provide]                        PROVIDE (r_ld_util_stp_pk = 0x400413f4)
                [!provide]                        PROVIDE (r_ld_util_stp_unpk = 0x40041324)
                [!provide]                        PROVIDE (r_ld_version_get = 0x4003ca6c)
                [!provide]                        PROVIDE (r_ld_wlcoex_set = 0x4003caf8)
                [!provide]                        PROVIDE (r_llc_ch_assess_get_current_ch_map = 0x40041574)
                [!provide]                        PROVIDE (r_llc_ch_assess_get_local_ch_map = 0x4004150c)
                [!provide]                        PROVIDE (r_llc_ch_assess_local = 0x40041494)
                [!provide]                        PROVIDE (r_llc_ch_assess_merge_ch = 0x40041588)
                [!provide]                        PROVIDE (r_llc_ch_assess_reass_ch = 0x400415c0)
                [!provide]                        PROVIDE (r_llc_common_cmd_complete_send = 0x40044eac)
                [!provide]                        PROVIDE (r_llc_common_cmd_status_send = 0x40044ee0)
                [!provide]                        PROVIDE (r_llc_common_enc_change_evt_send = 0x40044f6c)
                [!provide]                        PROVIDE (r_llc_common_enc_key_ref_comp_evt_send = 0x40044f38)
                [!provide]                        PROVIDE (r_llc_common_flush_occurred_send = 0x40044f0c)
                [!provide]                        PROVIDE (r_llc_common_nb_of_pkt_comp_evt_send = 0x40045000)
                [!provide]                        PROVIDE (r_llc_con_update_complete_send = 0x40044d68)
                [!provide]                        PROVIDE (r_llc_con_update_finished = 0x4004518c)
                [!provide]                        PROVIDE (r_llc_con_update_ind = 0x40045038)
                [!provide]                        PROVIDE (r_llc_discon_event_complete_send = 0x40044a30)
                [!provide]                        PROVIDE (r_llc_end_evt_defer = 0x40046330)
                [!provide]                        PROVIDE (r_llc_feats_rd_event_send = 0x40044e0c)
                [!provide]                        PROVIDE (r_llc_init = 0x40044778)
                [!provide]                        PROVIDE (r_llc_le_con_cmp_evt_send = 0x40044a78)
                [!provide]                        PROVIDE (r_llc_llcp_ch_map_update_pdu_send = 0x40043f94)
                [!provide]                        PROVIDE (r_llc_llcp_con_param_req_pdu_send = 0x400442fc)
                [!provide]                        PROVIDE (r_llc_llcp_con_param_rsp_pdu_send = 0x40044358)
                [!provide]                        PROVIDE (r_llc_llcp_con_update_pdu_send = 0x400442c4)
                [!provide]                        PROVIDE (r_llc_llcp_enc_req_pdu_send = 0x40044064)
                [!provide]                        PROVIDE (r_llc_llcp_enc_rsp_pdu_send = 0x40044160)
                [!provide]                        PROVIDE (r_llc_llcp_feats_req_pdu_send = 0x400443b4)
                [!provide]                        PROVIDE (r_llc_llcp_feats_rsp_pdu_send = 0x400443f0)
                [!provide]                        PROVIDE (r_llc_llcp_get_autorize = 0x4004475c)
                [!provide]                        PROVIDE (r_llc_llcp_length_req_pdu_send = 0x40044574)
                [!provide]                        PROVIDE (r_llc_llcp_length_rsp_pdu_send = 0x400445ac)
                [!provide]                        PROVIDE (r_llc_llcp_pause_enc_req_pdu_send = 0x40043fd8)
                [!provide]                        PROVIDE (r_llc_llcp_pause_enc_rsp_pdu_send = 0x40044010)
                [!provide]                        PROVIDE (r_llc_llcp_ping_req_pdu_send = 0x4004454c)
                [!provide]                        PROVIDE (r_llc_llcp_ping_rsp_pdu_send = 0x40044560)
                [!provide]                        PROVIDE (r_llc_llcp_recv_handler = 0x40044678)
                [!provide]                        PROVIDE (r_llc_llcp_reject_ind_pdu_send = 0x4004425c)
                [!provide]                        PROVIDE (r_llc_llcp_start_enc_req_pdu_send = 0x4004441c)
                [!provide]                        PROVIDE (r_llc_llcp_start_enc_rsp_pdu_send = 0x400441f8)
                [!provide]                        PROVIDE (r_llc_llcp_terminate_ind_pdu_send = 0x400444b0)
                [!provide]                        PROVIDE (r_llc_llcp_tester_send = 0x400445e4)
                [!provide]                        PROVIDE (r_llc_llcp_unknown_rsp_send_pdu = 0x40044534)
                [!provide]                        PROVIDE (r_llc_llcp_version_ind_pdu_send = 0x40043f6c)
                [!provide]                        PROVIDE (r_llc_lsto_con_update = 0x40045098)
                [!provide]                        PROVIDE (r_llc_ltk_req_send = 0x40044dc0)
                [!provide]                        PROVIDE (r_llc_map_update_finished = 0x40045260)
                [!provide]                        PROVIDE (r_llc_map_update_ind = 0x400450f0)
                [!provide]                        PROVIDE (r_llc_pdu_acl_tx_ack_defer = 0x400464dc)
                [!provide]                        PROVIDE (r_llc_pdu_defer = 0x40046528)
                [!provide]                        PROVIDE (r_llc_pdu_llcp_tx_ack_defer = 0x400463ac)
                [!provide]                        PROVIDE (r_llc_reset = 0x400447b8)
                [!provide]                        PROVIDE (r_llc_start = 0x400447f4)
                [!provide]                        PROVIDE (r_llc_stop = 0x400449ac)
                [!provide]                        PROVIDE (r_llc_util_bw_mgt = 0x4004629c)
                [!provide]                        PROVIDE (r_llc_util_clear_operation_ptr = 0x40046234)
                [!provide]                        PROVIDE (r_llc_util_dicon_procedure = 0x40046130)
                [!provide]                        PROVIDE (r_llc_util_get_free_conhdl = 0x400460c8)
                [!provide]                        PROVIDE (r_llc_util_get_nb_active_link = 0x40046100)
                [!provide]                        PROVIDE (r_llc_util_set_auth_payl_to_margin = 0x400461f4)
                [!provide]                        PROVIDE (r_llc_util_set_llcp_discard_enable = 0x400461c8)
                [!provide]                        PROVIDE (r_llc_util_update_channel_map = 0x400461ac)
                [!provide]                        PROVIDE (r_llc_version_rd_event_send = 0x40044e60)
                [!provide]                        PROVIDE (r_lld_adv_start = 0x40048b38)
                [!provide]                        PROVIDE (r_lld_adv_stop = 0x40048ea0)
                [!provide]                        PROVIDE (r_lld_ch_map_ind = 0x4004a2f4)
                [!provide]                        PROVIDE (r_lld_con_param_req = 0x40049f0c)
                [!provide]                        PROVIDE (r_lld_con_param_rsp = 0x40049e00)
                [!provide]                        PROVIDE (r_lld_con_start = 0x400491f8)
                [!provide]                        PROVIDE (r_lld_con_stop = 0x40049fdc)
                [!provide]                        PROVIDE (r_lld_con_update_after_param_req = 0x40049bcc)
                [!provide]                        PROVIDE (r_lld_con_update_ind = 0x4004a30c)
                [!provide]                        PROVIDE (r_lld_con_update_req = 0x40049b60)
                [!provide]                        PROVIDE (r_lld_core_reset = 0x40048a9c)
                [!provide]                        PROVIDE (r_lld_crypt_isr = 0x4004a324)
                [!provide]                        PROVIDE (r_lld_evt_adv_create = 0x400481f4)
                [!provide]                        PROVIDE (r_lld_evt_canceled = 0x400485c8)
                [!provide]                        PROVIDE (r_lld_evt_channel_next = 0x40046aac)
                [!provide]                        PROVIDE (r_lld_evt_deffered_elt_handler = 0x400482bc)
                [!provide]                        PROVIDE (r_lld_evt_delete_elt_handler = 0x40046974)
                [!provide]                        PROVIDE (r_lld_evt_delete_elt_push = 0x40046a3c)
                [!provide]                        PROVIDE (r_lld_evt_drift_compute = 0x40047670)
                [!provide]                        PROVIDE (r_lld_evt_elt_delete = 0x40047538)
                [!provide]                        PROVIDE (r_lld_evt_elt_insert = 0x400474c8)
                [!provide]                        PROVIDE (r_lld_evt_end = 0x400483e8)
                [!provide]                        PROVIDE (r_lld_evt_end_isr = 0x4004862c)
                [!provide]                        PROVIDE (r_lld_evt_init = 0x40046b3c)
                [!provide]                        PROVIDE (r_lld_evt_init_evt = 0x40046cd0)
                [!provide]                        PROVIDE (r_lld_evt_move_to_master = 0x40047ba0)
                [!provide]                        PROVIDE (r_lld_evt_move_to_slave = 0x40047e18)
                [!provide]                        PROVIDE (r_lld_evt_prevent_stop = 0x40047adc)
                [!provide]                        PROVIDE (r_lld_evt_restart = 0x40046d50)
                [!provide]                        PROVIDE (r_lld_evt_rx = 0x40048578)
                [!provide]                        PROVIDE (r_lld_evt_rx_isr = 0x40048678)
                [!provide]                        PROVIDE (r_lld_evt_scan_create = 0x40047ae8)
                [!provide]                        PROVIDE (r_lld_evt_schedule = 0x40047908)
                [!provide]                        PROVIDE (r_lld_evt_schedule_next = 0x400477dc)
                [!provide]                        PROVIDE (r_lld_evt_schedule_next_instant = 0x400476a8)
                [!provide]                        PROVIDE (r_lld_evt_slave_update = 0x40048138)
                [!provide]                        PROVIDE (r_lld_evt_update_create = 0x40047cd8)
                [!provide]                        PROVIDE (r_lld_get_mode = 0x40049ff8)
                [!provide]                        PROVIDE (r_lld_init = 0x4004873c)
                [!provide]                        PROVIDE (r_lld_move_to_master = 0x400499e0)
                [!provide]                        PROVIDE (r_lld_move_to_slave = 0x4004a024)
                [!provide]                        PROVIDE (r_lld_pdu_adv_pack = 0x4004b488)
                [!provide]                        PROVIDE (r_lld_pdu_check = 0x4004ac34)
                [!provide]                        PROVIDE (r_lld_pdu_data_send = 0x4004b018)
                [!provide]                        PROVIDE (r_lld_pdu_data_tx_push = 0x4004aecc)
                [!provide]                        PROVIDE (r_lld_pdu_rx_handler = 0x4004b4d4)
                [!provide]                        PROVIDE (r_lld_pdu_send_packet = 0x4004b774)
                [!provide]                        PROVIDE (r_lld_pdu_tx_flush = 0x4004b414)
                [!provide]                        PROVIDE (r_lld_pdu_tx_loop = 0x4004ae40)
                [!provide]                        PROVIDE (r_lld_pdu_tx_prog = 0x4004b120)
                [!provide]                        PROVIDE (r_lld_pdu_tx_push = 0x4004b080)
                [!provide]                        PROVIDE (r_lld_ral_renew_req = 0x4004a73c)
                [!provide]                        PROVIDE (r_lld_scan_start = 0x40048ee0)
                [!provide]                        PROVIDE (r_lld_scan_stop = 0x40049190)
                [!provide]                        PROVIDE (r_lld_test_mode_rx = 0x4004a540)
                [!provide]                        PROVIDE (r_lld_test_mode_tx = 0x4004a350)
                [!provide]                        PROVIDE (r_lld_test_stop = 0x4004a710)
                [!provide]                        PROVIDE (r_lld_util_anchor_point_move = 0x4004bacc)
                [!provide]                        PROVIDE (r_lld_util_compute_ce_max = 0x4004bc0c)
                [!provide]                        PROVIDE (r_lld_util_connection_param_set = 0x4004ba40)
                [!provide]                        PROVIDE (r_lld_util_dle_set_cs_fields = 0x4004ba90)
                [!provide]                        PROVIDE (r_lld_util_eff_tx_time_set = 0x4004bd88)
                [!provide]                        PROVIDE (r_lld_util_elt_programmed = 0x4004bce0)
                [!provide]                        PROVIDE (r_lld_util_flush_list = 0x4004bbd8)
                [!provide]                        PROVIDE (r_lld_util_freq2chnl = 0x4004b9e4)
                [!provide]                        PROVIDE (r_lld_util_get_bd_address = 0x4004b8ac)
                [!provide]                        PROVIDE (r_lld_util_get_local_offset = 0x4004ba10)
                [!provide]                        PROVIDE (r_lld_util_get_peer_offset = 0x4004ba24)
                [!provide]                        PROVIDE (r_lld_util_get_tx_pkt_cnt = 0x4004bd80)
                [!provide]                        PROVIDE (r_lld_util_instant_get = 0x4004b890)
                [!provide]                        PROVIDE (r_lld_util_instant_ongoing = 0x4004bbfc)
                [!provide]                        PROVIDE (r_lld_util_priority_set = 0x4004bd10)
                [!provide]                        PROVIDE (r_lld_util_priority_update = 0x4004bd78)
                [!provide]                        PROVIDE (r_lld_util_ral_force_rpa_renew = 0x4004b980)
                [!provide]                        PROVIDE (r_lld_util_set_bd_address = 0x4004b8f8)
                [!provide]                        PROVIDE (r_lld_wlcoex_set = 0x4004bd98)
                [!provide]                        PROVIDE (r_llm_ble_ready = 0x4004cc34)
                [!provide]                        PROVIDE (r_llm_common_cmd_complete_send = 0x4004d288)
                [!provide]                        PROVIDE (r_llm_common_cmd_status_send = 0x4004d2b4)
                [!provide]                        PROVIDE (r_llm_con_req_ind = 0x4004cc54)
                [!provide]                        PROVIDE (r_llm_con_req_tx_cfm = 0x4004d158)
                [!provide]                        PROVIDE (r_llm_create_con = 0x4004de78)
                [!provide]                        PROVIDE (r_llm_encryption_done = 0x4004dff8)
                [!provide]                        PROVIDE (r_llm_encryption_start = 0x4004e128)
                [!provide]                        PROVIDE (r_llm_end_evt_defer = 0x4004eb6c)
                [!provide]                        PROVIDE (r_llm_init = 0x4004c9f8)
                [!provide]                        PROVIDE (r_llm_le_adv_report_ind = 0x4004cdf4)
                [!provide]                        PROVIDE (r_llm_pdu_defer = 0x4004ec48)
                [!provide]                        PROVIDE (r_llm_ral_clear = 0x4004e1fc)
                [!provide]                        PROVIDE (r_llm_ral_dev_add = 0x4004e23c)
                [!provide]                        PROVIDE (r_llm_ral_dev_rm = 0x4004e3bc)
                [!provide]                        PROVIDE (r_llm_ral_get_rpa = 0x4004e400)
                [!provide]                        PROVIDE (r_llm_ral_set_timeout = 0x4004e4a0)
                [!provide]                        PROVIDE (r_llm_ral_update = 0x4004e4f8)
                [!provide]                        PROVIDE (r_llm_set_adv_data = 0x4004d960)
                [!provide]                        PROVIDE (r_llm_set_adv_en = 0x4004d7ec)
                [!provide]                        PROVIDE (r_llm_set_adv_param = 0x4004d5f4)
                [!provide]                        PROVIDE (r_llm_set_scan_en = 0x4004db64)
                [!provide]                        PROVIDE (r_llm_set_scan_param = 0x4004dac8)
                [!provide]                        PROVIDE (r_llm_set_scan_rsp_data = 0x4004da14)
                [!provide]                        PROVIDE (r_llm_test_mode_start_rx = 0x4004d534)
                [!provide]                        PROVIDE (r_llm_test_mode_start_tx = 0x4004d2fc)
                [!provide]                        PROVIDE (r_llm_util_adv_data_update = 0x4004e8fc)
                [!provide]                        PROVIDE (r_llm_util_apply_bd_addr = 0x4004e868)
                [!provide]                        PROVIDE (r_llm_util_bd_addr_in_ral = 0x4004eb08)
                [!provide]                        PROVIDE (r_llm_util_bd_addr_in_wl = 0x4004e788)
                [!provide]                        PROVIDE (r_llm_util_bd_addr_wl_position = 0x4004e720)
                [!provide]                        PROVIDE (r_llm_util_bl_add = 0x4004e9ac)
                [!provide]                        PROVIDE (r_llm_util_bl_check = 0x4004e930)
                [!provide]                        PROVIDE (r_llm_util_bl_rem = 0x4004ea70)
                [!provide]                        PROVIDE (r_llm_util_check_address_validity = 0x4004e7e4)
                [!provide]                        PROVIDE (r_llm_util_check_evt_mask = 0x4004e8b0)
                [!provide]                        PROVIDE (r_llm_util_check_map_validity = 0x4004e800)
                [!provide]                        PROVIDE (r_llm_util_get_channel_map = 0x4004e8d4)
                [!provide]                        PROVIDE (r_llm_util_get_supp_features = 0x4004e8e8)
                [!provide]                        PROVIDE (r_llm_util_set_public_addr = 0x4004e89c)
                [!provide]                        PROVIDE (r_llm_wl_clr = 0x4004dc54)
                [!provide]                        PROVIDE (r_llm_wl_dev_add = 0x4004dcc0)
                [!provide]                        PROVIDE (r_llm_wl_dev_add_hdl = 0x4004dd38)
                [!provide]                        PROVIDE (r_llm_wl_dev_rem = 0x4004dcfc)
                [!provide]                        PROVIDE (r_llm_wl_dev_rem_hdl = 0x4004dde0)
                [!provide]                        PROVIDE (r_lm_acl_disc = 0x4004f148)
                [!provide]                        PROVIDE (r_LM_AddSniff = 0x40022d20)
                [!provide]                        PROVIDE (r_lm_add_sync = 0x40051358)
                [!provide]                        PROVIDE (r_lm_afh_activate_timer = 0x4004f444)
                [!provide]                        PROVIDE (r_lm_afh_ch_ass_en_get = 0x4004f3f8)
                [!provide]                        PROVIDE (r_lm_afh_host_ch_class_get = 0x4004f410)
                [!provide]                        PROVIDE (r_lm_afh_master_ch_map_get = 0x4004f43c)
                [!provide]                        PROVIDE (r_lm_afh_peer_ch_class_set = 0x4004f418)
                [!provide]                        PROVIDE (r_lm_check_active_sync = 0x40051334)
                [!provide]                        PROVIDE (r_LM_CheckEdrFeatureRequest = 0x4002f90c)
                [!provide]                        PROVIDE (r_LM_CheckSwitchInstant = 0x4002f8c0)
                [!provide]                        PROVIDE (r_lm_check_sync_hl_rsp = 0x4005169c)
                [!provide]                        PROVIDE (r_lm_clk_adj_ack_pending_clear = 0x4004f514)
                [!provide]                        PROVIDE (r_lm_clk_adj_instant_pending_set = 0x4004f4d8)
                [!provide]                        PROVIDE (r_LM_ComputePacketType = 0x4002f554)
                [!provide]                        PROVIDE (r_LM_ComputeSniffSubRate = 0x400233ac)
                [!provide]                        PROVIDE (r_lm_debug_key_compare_192 = 0x4004f3a8)
                [!provide]                        PROVIDE (r_lm_debug_key_compare_256 = 0x4004f3d0)
                [!provide]                        PROVIDE (r_lm_dhkey_calc_init = 0x40013234)
                [!provide]                        PROVIDE (r_lm_dhkey_compare = 0x400132d8)
                [!provide]                        PROVIDE (r_lm_dut_mode_en_get = 0x4004f3ec)
                [!provide]                        PROVIDE (r_LM_ExtractMaxEncKeySize = 0x4001aca4)
                [!provide]                        PROVIDE (r_lm_f1 = 0x40012bb8)
                [!provide]                        PROVIDE (r_lm_f2 = 0x40012cfc)
                [!provide]                        PROVIDE (r_lm_f3 = 0x40013050)
                [!provide]                        PROVIDE (r_lm_g = 0x40012f90)
                [!provide]                        PROVIDE (r_LM_GetAFHSwitchInstant = 0x4002f86c)
                [!provide]                        PROVIDE (r_lm_get_auth_en = 0x4004f1ac)
                [!provide]                        PROVIDE (r_lm_get_common_pkt_types = 0x4002fa1c)
                [!provide]                        PROVIDE (r_LM_GetConnectionAcceptTimeout = 0x4004f1f4)
                [!provide]                        PROVIDE (r_LM_GetFeature = 0x4002f924)
                [!provide]                        PROVIDE (r_LM_GetLinkTimeout = 0x400233ec)
                [!provide]                        PROVIDE (r_LM_GetLocalNameSeg = 0x4004f200)
                [!provide]                        PROVIDE (r_lm_get_loopback_mode = 0x4004f248)
                [!provide]                        PROVIDE (r_LM_GetMasterEncKeySize = 0x4001b29c)
                [!provide]                        PROVIDE (r_LM_GetMasterEncRand = 0x4001b288)
                [!provide]                        PROVIDE (r_LM_GetMasterKey = 0x4001b260)
                [!provide]                        PROVIDE (r_LM_GetMasterKeyRand = 0x4001b274)
                [!provide]                        PROVIDE (r_lm_get_min_sync_intv = 0x400517a8)
                [!provide]                        PROVIDE (r_lm_get_nb_acl = 0x4004ef9c)
                [!provide]                        PROVIDE (r_lm_get_nb_sync_link = 0x4005179c)
                [!provide]                        PROVIDE (r_lm_get_nonce = 0x400131c4)
                [!provide]                        PROVIDE (r_lm_get_oob_local_commit = 0x4004f374)
                [!provide]                        PROVIDE (r_lm_get_oob_local_data_192 = 0x4004f2d4)
                [!provide]                        PROVIDE (r_lm_get_oob_local_data_256 = 0x4004f318)
                [!provide]                        PROVIDE (r_LM_GetPINType = 0x4004f1e8)
                [!provide]                        PROVIDE (r_lm_get_priv_key_192 = 0x4004f278)
                [!provide]                        PROVIDE (r_lm_get_priv_key_256 = 0x4004f2b8)
                [!provide]                        PROVIDE (r_lm_get_pub_key_192 = 0x4004f258)
                [!provide]                        PROVIDE (r_lm_get_pub_key_256 = 0x4004f298)
                [!provide]                        PROVIDE (r_LM_GetQoSParam = 0x4002f6e0)
                [!provide]                        PROVIDE (r_lm_get_sec_con_host_supp = 0x4004f1d4)
                [!provide]                        PROVIDE (r_LM_GetSniffSubratingParam = 0x4002325c)
                [!provide]                        PROVIDE (r_lm_get_sp_en = 0x4004f1c0)
                [!provide]                        PROVIDE (r_LM_GetSwitchInstant = 0x4002f7f8)
                [!provide]                        PROVIDE (r_lm_get_synchdl = 0x4005175c)
                [!provide]                        PROVIDE (r_lm_get_sync_param = 0x400503b4)
                [!provide]                        PROVIDE (r_lm_init = 0x4004ed34)
                [!provide]                        PROVIDE (r_lm_init_sync = 0x400512d8)
                [!provide]                        PROVIDE (r_lm_is_acl_con = 0x4004f47c)
                [!provide]                        PROVIDE (r_lm_is_acl_con_role = 0x4004f49c)
                [!provide]                        PROVIDE (r_lm_is_clk_adj_ack_pending = 0x4004f4e8)
                [!provide]                        PROVIDE (r_lm_is_clk_adj_instant_pending = 0x4004f4c8)
                [!provide]                        PROVIDE (r_lm_local_ext_fr_configured = 0x4004f540)
                [!provide]                        PROVIDE (r_lm_look_for_stored_link_key = 0x4002f948)
                [!provide]                        PROVIDE (r_lm_look_for_sync = 0x40051774)
                [!provide]                        PROVIDE (r_lm_lt_addr_alloc = 0x4004ef1c)
                [!provide]                        PROVIDE (r_lm_lt_addr_free = 0x4004ef74)
                [!provide]                        PROVIDE (r_lm_lt_addr_reserve = 0x4004ef48)
                [!provide]                        PROVIDE (r_LM_MakeCof = 0x4002f84c)
                [!provide]                        PROVIDE (r_LM_MakeRandVec = 0x400112d8)
                [!provide]                        PROVIDE (r_lm_master_clk_adj_req_handler = 0x40054180)
                [!provide]                        PROVIDE (r_LM_MaxSlot = 0x4002f694)
                [!provide]                        PROVIDE (r_lm_modif_sync = 0x40051578)
                [!provide]                        PROVIDE (r_lm_n_is_zero = 0x40012170)
                [!provide]                        PROVIDE (r_lm_num_clk_adj_ack_pending_set = 0x4004f500)
                [!provide]                        PROVIDE (r_lm_oob_f1 = 0x40012e54)
                [!provide]                        PROVIDE (r_lm_pca_sscan_link_get = 0x4004f560)
                [!provide]                        PROVIDE (r_lm_pca_sscan_link_set = 0x4004f550)
                [!provide]                        PROVIDE (nvds_null_read = 0x400542a0)
                [!provide]                        PROVIDE (nvds_null_write = 0x400542a8)
                [!provide]                        PROVIDE (nvds_null_erase = 0x400542b0)
                [!provide]                        PROVIDE (nvds_read = 0x400542c4)
                [!provide]                        PROVIDE (nvds_write = 0x400542fc)
                [!provide]                        PROVIDE (nvds_erase = 0x40054334)
                [!provide]                        PROVIDE (nvds_init_memory = 0x40054358)
                [!provide]                        PROVIDE (r_lmp_pack = 0x4001135c)
                [!provide]                        PROVIDE (r_lmp_unpack = 0x4001149c)
                [!provide]                        PROVIDE (r_lm_read_features = 0x4004f0d8)
                [!provide]                        PROVIDE (r_LM_RemoveSniff = 0x40023124)
                [!provide]                        PROVIDE (r_LM_RemoveSniffSubrating = 0x400233c4)
                [!provide]                        PROVIDE (r_lm_remove_sync = 0x400517c8)
                [!provide]                        PROVIDE (r_lm_reset_sync = 0x40051304)
                [!provide]                        PROVIDE (r_lm_role_switch_finished = 0x4004f028)
                [!provide]                        PROVIDE (r_lm_role_switch_start = 0x4004efe0)
                [!provide]                        PROVIDE (r_lm_sco_nego_end = 0x40051828)
                [!provide]                        PROVIDE (r_LM_SniffSubrateNegoRequired = 0x40023334)
                [!provide]                        PROVIDE (r_LM_SniffSubratingHlReq = 0x40023154)
                [!provide]                        PROVIDE (r_LM_SniffSubratingPeerReq = 0x400231dc)
                [!provide]                        PROVIDE (r_lm_sp_debug_mode_get = 0x4004f398)
                [!provide]                        PROVIDE (r_lm_sp_n192_convert_wnaf = 0x400123c0)
                [!provide]                        PROVIDE (r_lm_sp_n_one = 0x400123a4)
                [!provide]                        PROVIDE (r_lm_sp_p192_add = 0x40012828)
                [!provide]                        PROVIDE (r_lm_sp_p192_dbl = 0x4001268c)
                [!provide]                        PROVIDE (r_lm_sp_p192_invert = 0x40012b6c)
                [!provide]                        PROVIDE (r_lm_sp_p192_point_jacobian_to_affine = 0x40012468)
                [!provide]                        PROVIDE (r_lm_sp_p192_points_jacobian_to_affine = 0x400124e4)
                [!provide]                        PROVIDE (r_lm_sp_p192_point_to_inf = 0x40012458)
                [!provide]                        PROVIDE (r_lm_sp_pre_compute_points = 0x40012640)
                [!provide]                        PROVIDE (r_lm_sp_sha256_calculate = 0x400121a0)
                [!provide]                        PROVIDE (r_LM_SuppressAclPacket = 0x4002f658)
                [!provide]                        PROVIDE (r_lm_sync_flow_ctrl_en_get = 0x4004f404)
                [!provide]                        PROVIDE (r_LM_UpdateAclEdrPacketType = 0x4002f5d8)
                [!provide]                        PROVIDE (r_LM_UpdateAclPacketType = 0x4002f584)
                [!provide]                        PROVIDE (r_modules_funcs = 0x3ffafd6c)
                [!provide]                        PROVIDE (r_modules_funcs_p = 0x3ffafd68)
                [!provide]                        PROVIDE (r_nvds_del = 0x400544c4)
                [!provide]                        PROVIDE (r_nvds_get = 0x40054488)
                [!provide]                        PROVIDE (r_nvds_init = 0x40054410)
                [!provide]                        PROVIDE (r_nvds_lock = 0x400544fc)
                [!provide]                        PROVIDE (r_nvds_put = 0x40054534)
                [!provide]                        PROVIDE (rom_abs_temp = 0x400054f0)
                [!provide]                        PROVIDE (rom_bb_bss_bw_40_en = 0x4000401c)
                [!provide]                        PROVIDE (rom_bb_bss_cbw40_dig = 0x40003bac)
                [!provide]                        PROVIDE (rom_bb_rx_ht20_cen_bcov_en = 0x40003734)
                [!provide]                        PROVIDE (rom_bb_tx_ht20_cen = 0x40003760)
                [!provide]                        PROVIDE (rom_bb_wdg_test_en = 0x40003b70)
                [!provide]                        PROVIDE (rom_cbw2040_cfg = 0x400040b0)
                [!provide]                        PROVIDE (rom_check_noise_floor = 0x40003c78)
                [!provide]                        PROVIDE (rom_chip_i2c_readReg = 0x40004110)
                [!provide]                        PROVIDE (rom_chip_i2c_writeReg = 0x40004168)
                [!provide]                        PROVIDE (rom_chip_v7_bt_init = 0x40004d8c)
                [!provide]                        PROVIDE (rom_chip_v7_rx_init = 0x40004cec)
                [!provide]                        PROVIDE (rom_chip_v7_rx_rifs_en = 0x40003d90)
                [!provide]                        PROVIDE (rom_chip_v7_tx_init = 0x40004d18)
                [!provide]                        PROVIDE (rom_clk_force_on_vit = 0x40003710)
                [!provide]                        PROVIDE (rom_correct_rf_ana_gain = 0x400062a8)
                [!provide]                        PROVIDE (rom_dc_iq_est = 0x400055c8)
                [!provide]                        PROVIDE (rom_disable_agc = 0x40002fa4)
                [!provide]                        PROVIDE (rom_enable_agc = 0x40002fcc)
                [!provide]                        PROVIDE (rom_en_pwdet = 0x4000506c)
                [!provide]                        PROVIDE (rom_gen_rx_gain_table = 0x40003e3c)
                [!provide]                        PROVIDE (rom_get_data_sat = 0x4000312c)
                [!provide]                        PROVIDE (rom_get_fm_sar_dout = 0x40005204)
                [!provide]                        PROVIDE (rom_get_power_db = 0x40005fc8)
                [!provide]                        PROVIDE (rom_get_pwctrl_correct = 0x400065d4)
                [!provide]                        PROVIDE (rom_get_rfcal_rxiq_data = 0x40005bbc)
                [!provide]                        PROVIDE (rom_get_rf_gain_qdb = 0x40006290)
                [!provide]                        PROVIDE (rom_get_sar_dout = 0x40006564)
                0x0000000040004148                PROVIDE (rom_i2c_readReg = 0x40004148)
                0x00000000400041c0                PROVIDE (rom_i2c_readReg_Mask = 0x400041c0)
                0x00000000400041a4                PROVIDE (rom_i2c_writeReg = 0x400041a4)
                0x00000000400041fc                PROVIDE (rom_i2c_writeReg_Mask = 0x400041fc)
                [!provide]                        PROVIDE (rom_index_to_txbbgain = 0x40004df8)
                [!provide]                        PROVIDE (rom_iq_est_disable = 0x40005590)
                [!provide]                        PROVIDE (rom_iq_est_enable = 0x40005514)
                [!provide]                        PROVIDE (rom_linear_to_db = 0x40005f64)
                [!provide]                        PROVIDE (rom_loopback_mode_en = 0x400030f8)
                [!provide]                        PROVIDE (rom_meas_tone_pwr_db = 0x40006004)
                [!provide]                        PROVIDE (rom_mhz2ieee = 0x4000404c)
                [!provide]                        PROVIDE (rom_noise_floor_auto_set = 0x40003bdc)
                [!provide]                        PROVIDE (rom_pbus_debugmode = 0x40004458)
                [!provide]                        PROVIDE (rom_pbus_force_mode = 0x40004270)
                [!provide]                        PROVIDE (rom_pbus_force_test = 0x400043c0)
                [!provide]                        PROVIDE (rom_pbus_rd = 0x40004414)
                [!provide]                        PROVIDE (rom_pbus_rd_addr = 0x40004334)
                [!provide]                        PROVIDE (rom_pbus_rd_shift = 0x40004374)
                [!provide]                        PROVIDE (rom_pbus_rx_dco_cal = 0x40005620)
                [!provide]                        PROVIDE (rom_pbus_set_dco = 0x40004638)
                [!provide]                        PROVIDE (rom_pbus_set_rxgain = 0x40004480)
                [!provide]                        PROVIDE (rom_pbus_workmode = 0x4000446c)
                [!provide]                        PROVIDE (rom_pbus_xpd_rx_off = 0x40004508)
                [!provide]                        PROVIDE (rom_pbus_xpd_rx_on = 0x4000453c)
                [!provide]                        PROVIDE (rom_pbus_xpd_tx_off = 0x40004590)
                [!provide]                        PROVIDE (rom_pbus_xpd_tx_on = 0x400045e0)
                [!provide]                        PROVIDE (rom_phy_disable_agc = 0x40002f6c)
                [!provide]                        PROVIDE (rom_phy_disable_cca = 0x40003000)
                [!provide]                        PROVIDE (rom_phy_enable_agc = 0x40002f88)
                [!provide]                        PROVIDE (rom_phy_enable_cca = 0x4000302c)
                [!provide]                        PROVIDE (rom_phy_freq_correct = 0x40004b44)
                [!provide]                        PROVIDE (rom_phyFuns = 0x3ffae0c0)
                [!provide]                        PROVIDE (rom_phy_get_noisefloor = 0x40003c2c)
                [!provide]                        PROVIDE (rom_phy_get_vdd33 = 0x4000642c)
                [!provide]                        PROVIDE (rom_pow_usr = 0x40003044)
                [!provide]                        PROVIDE (rom_read_sar_dout = 0x400051c0)
                [!provide]                        PROVIDE (rom_restart_cal = 0x400046e0)
                [!provide]                        PROVIDE (rom_rfcal_pwrctrl = 0x40006058)
                [!provide]                        PROVIDE (rom_rfcal_rxiq = 0x40005b4c)
                [!provide]                        PROVIDE (rom_rfcal_txcap = 0x40005dec)
                [!provide]                        PROVIDE (rom_rfpll_reset = 0x40004680)
                [!provide]                        PROVIDE (rom_rfpll_set_freq = 0x400047f8)
                [!provide]                        PROVIDE (rom_rtc_mem_backup = 0x40003db4)
                [!provide]                        PROVIDE (rom_rtc_mem_recovery = 0x40003df4)
                [!provide]                        PROVIDE (rom_rx_gain_force = 0x4000351c)
                [!provide]                        PROVIDE (rom_rxiq_cover_mg_mp = 0x40005a68)
                [!provide]                        PROVIDE (rom_rxiq_get_mis = 0x400058e4)
                [!provide]                        PROVIDE (rom_rxiq_set_reg = 0x40005a00)
                [!provide]                        PROVIDE (rom_set_cal_rxdc = 0x400030b8)
                [!provide]                        PROVIDE (rom_set_chan_cal_interp = 0x40005ce0)
                [!provide]                        PROVIDE (rom_set_channel_freq = 0x40004880)
                [!provide]                        PROVIDE (rom_set_loopback_gain = 0x40003060)
                [!provide]                        PROVIDE (rom_set_noise_floor = 0x40003d48)
                [!provide]                        PROVIDE (rom_set_pbus_mem = 0x400031a4)
                [!provide]                        PROVIDE (rom_set_rf_freq_offset = 0x40004ca8)
                [!provide]                        PROVIDE (rom_set_rxclk_en = 0x40003594)
                [!provide]                        PROVIDE (rom_set_txcap_reg = 0x40005d50)
                [!provide]                        PROVIDE (rom_set_txclk_en = 0x40003564)
                [!provide]                        PROVIDE (rom_spur_coef_cfg = 0x40003ac8)
                [!provide]                        PROVIDE (rom_spur_reg_write_one_tone = 0x400037f0)
                [!provide]                        PROVIDE (rom_start_tx_tone = 0x400036b4)
                [!provide]                        PROVIDE (rom_start_tx_tone_step = 0x400035d0)
                [!provide]                        PROVIDE (rom_stop_tx_tone = 0x40003f98)
                [!provide]                        PROVIDE (_rom_store = 0x4000d66c)
                [!provide]                        PROVIDE (_rom_store_table = 0x4000d4f8)
                [!provide]                        PROVIDE (rom_target_power_add_backoff = 0x40006268)
                [!provide]                        PROVIDE (rom_tx_atten_set_interp = 0x400061cc)
                [!provide]                        PROVIDE (rom_txbbgain_to_index = 0x40004dc0)
                [!provide]                        PROVIDE (rom_txcal_work_mode = 0x4000510c)
                [!provide]                        PROVIDE (rom_txdc_cal_init = 0x40004e10)
                [!provide]                        PROVIDE (rom_txdc_cal_v70 = 0x40004ea4)
                [!provide]                        PROVIDE (rom_txiq_cover = 0x4000538c)
                [!provide]                        PROVIDE (rom_txiq_get_mis_pwr = 0x400052dc)
                [!provide]                        PROVIDE (rom_txiq_set_reg = 0x40005154)
                [!provide]                        PROVIDE (rom_tx_pwctrl_bg_init = 0x4000662c)
                [!provide]                        PROVIDE (rom_txtone_linear_pwr = 0x40005290)
                [!provide]                        PROVIDE (rom_wait_rfpll_cal_end = 0x400047a8)
                [!provide]                        PROVIDE (rom_write_gain_mem = 0x4000348c)
                [!provide]                        PROVIDE (rom_write_rfpll_sdm = 0x40004740)
                [!provide]                        PROVIDE (roundup2 = 0x4000ab7c)
                [!provide]                        PROVIDE (r_plf_funcs_p = 0x3ffb8360)
                [!provide]                        PROVIDE (r_rf_rw_bt_init = 0x40054868)
                [!provide]                        PROVIDE (r_rf_rw_init = 0x40054b0c)
                [!provide]                        PROVIDE (r_rf_rw_le_init = 0x400549d0)
                [!provide]                        PROVIDE (r_rwble_activity_ongoing_check = 0x40054d8c)
                [!provide]                        PROVIDE (r_rwble_init = 0x40054bf4)
                [!provide]                        PROVIDE (r_rwble_isr = 0x40054e08)
                [!provide]                        PROVIDE (r_rwble_reset = 0x40054ce8)
                [!provide]                        PROVIDE (r_rwble_sleep_check = 0x40054d78)
                [!provide]                        PROVIDE (r_rwble_version = 0x40054dac)
                [!provide]                        PROVIDE (r_rwbt_init = 0x40055160)
                [!provide]                        PROVIDE (r_rwbt_isr = 0x40055248)
                [!provide]                        PROVIDE (r_rwbt_reset = 0x400551bc)
                [!provide]                        PROVIDE (r_rwbt_sleep_check = 0x4005577c)
                [!provide]                        PROVIDE (r_rwbt_sleep_enter = 0x400557a4)
                [!provide]                        PROVIDE (r_rwbt_sleep_wakeup = 0x400557fc)
                [!provide]                        PROVIDE (r_rwbt_sleep_wakeup_end = 0x400558cc)
                [!provide]                        PROVIDE (r_rwbt_version = 0x4005520c)
                [!provide]                        PROVIDE (r_rwip_assert_err = 0x40055f88)
                [!provide]                        PROVIDE (r_rwip_check_wakeup_boundary = 0x400558fc)
                [!provide]                        PROVIDE (r_rwip_ext_wakeup_enable = 0x40055f3c)
                [!provide]                        PROVIDE (r_rwip_init = 0x4005595c)
                [!provide]                        PROVIDE (r_rwip_pca_clock_dragging_only = 0x40055f48)
                [!provide]                        PROVIDE (r_rwip_prevent_sleep_clear = 0x40055ec8)
                [!provide]                        PROVIDE (r_rwip_prevent_sleep_set = 0x40055e64)
                [!provide]                        PROVIDE (r_rwip_reset = 0x40055ab8)
                [!provide]                        PROVIDE (r_rwip_schedule = 0x40055b38)
                [!provide]                        PROVIDE (r_rwip_sleep = 0x40055b5c)
                [!provide]                        PROVIDE (r_rwip_sleep_enable = 0x40055f30)
                [!provide]                        PROVIDE (r_rwip_version = 0x40055b20)
                [!provide]                        PROVIDE (r_rwip_wakeup = 0x40055dc4)
                [!provide]                        PROVIDE (r_rwip_wakeup_delay_set = 0x40055e4c)
                [!provide]                        PROVIDE (r_rwip_wakeup_end = 0x40055e18)
                [!provide]                        PROVIDE (r_rwip_wlcoex_set = 0x40055f60)
                [!provide]                        PROVIDE (r_SHA_256 = 0x40013a90)
                [!provide]                        PROVIDE (rwip_coex_cfg = 0x3ff9914c)
                [!provide]                        PROVIDE (rwip_priority = 0x3ff99159)
                [!provide]                        PROVIDE (rwip_rf = 0x3ffbdb28)
                [!provide]                        PROVIDE (rwip_rf_p_get = 0x400558f4)
                [!provide]                        PROVIDE (r_XorKey = 0x400112c0)
                [!provide]                        PROVIDE (sha_blk_bits = 0x3ff99290)
                [!provide]                        PROVIDE (sha_blk_bits_bytes = 0x3ff99288)
                [!provide]                        PROVIDE (sha_blk_hash_bytes = 0x3ff9928c)
                [!provide]                        PROVIDE (sig_matrix = 0x3ffae293)
                [!provide]                        PROVIDE (sip_after_tx_complete = 0x4000b358)
                [!provide]                        PROVIDE (sip_alloc_to_host_evt = 0x4000ab9c)
                [!provide]                        PROVIDE (sip_get_ptr = 0x4000b34c)
                [!provide]                        PROVIDE (sip_get_state = 0x4000ae2c)
                [!provide]                        PROVIDE (sip_init_attach = 0x4000ae58)
                [!provide]                        PROVIDE (sip_install_rx_ctrl_cb = 0x4000ae10)
                [!provide]                        PROVIDE (sip_install_rx_data_cb = 0x4000ae20)
                [!provide]                        PROVIDE (sip_is_active = 0x4000b3c0)
                [!provide]                        PROVIDE (sip_post_init = 0x4000aed8)
                [!provide]                        PROVIDE (sip_reclaim_from_host_cmd = 0x4000adbc)
                [!provide]                        PROVIDE (sip_reclaim_tx_data_pkt = 0x4000ad5c)
                [!provide]                        PROVIDE (sip_send = 0x4000af54)
                [!provide]                        PROVIDE (sip_to_host_chain_append = 0x4000aef8)
                [!provide]                        PROVIDE (sip_to_host_evt_send_done = 0x4000ac04)
                [!provide]                        PROVIDE (slc_add_credits = 0x4000baf4)
                [!provide]                        PROVIDE (slc_enable = 0x4000b64c)
                [!provide]                        PROVIDE (slc_from_host_chain_fetch = 0x4000b7e8)
                [!provide]                        PROVIDE (slc_from_host_chain_recycle = 0x4000bb10)
                [!provide]                        PROVIDE (slc_has_pkt_to_host = 0x4000b5fc)
                [!provide]                        PROVIDE (slc_init_attach = 0x4000b918)
                [!provide]                        PROVIDE (slc_init_credit = 0x4000badc)
                [!provide]                        PROVIDE (slc_reattach = 0x4000b62c)
                [!provide]                        PROVIDE (slc_send_to_host_chain = 0x4000b6a0)
                [!provide]                        PROVIDE (slc_set_host_io_max_window = 0x4000b89c)
                [!provide]                        PROVIDE (slc_to_host_chain_recycle = 0x4000b758)
                [!provide]                        PROVIDE (specialModP256 = 0x4001600c)
                [!provide]                        PROVIDE (__stack = 0x3ffe3f20)
                [!provide]                        PROVIDE (__stack_app = 0x3ffe7e30)
                [!provide]                        PROVIDE (_stack_sentry = 0x3ffe1320)
                [!provide]                        PROVIDE (_stack_sentry_app = 0x3ffe5230)
                [!provide]                        PROVIDE (_start = 0x40000704)
                [!provide]                        PROVIDE (start_tb_console = 0x4005a980)
                [!provide]                        PROVIDE (_stat_r = 0x4000bcb4)
                [!provide]                        PROVIDE (_stext = 0x40000560)
                [!provide]                        PROVIDE (SubtractBigHex256 = 0x40015bcc)
                [!provide]                        PROVIDE (SubtractBigHexMod256 = 0x40015e8c)
                [!provide]                        PROVIDE (SubtractBigHexUint32_256 = 0x40015f8c)
                [!provide]                        PROVIDE (SubtractFromSelfBigHex256 = 0x40015c20)
                [!provide]                        PROVIDE (SubtractFromSelfBigHexSign256 = 0x40015dc8)
                [!provide]                        PROVIDE (sw_to_hw = 0x3ffb8d40)
                [!provide]                        PROVIDE (syscall_table_ptr_app = 0x3ffae020)
                [!provide]                        PROVIDE (syscall_table_ptr_pro = 0x3ffae024)
                [!provide]                        PROVIDE (tdefl_compress = 0x400600bc)
                [!provide]                        PROVIDE (tdefl_compress_buffer = 0x400607f4)
                [!provide]                        PROVIDE (tdefl_compress_mem_to_mem = 0x40060900)
                [!provide]                        PROVIDE (tdefl_compress_mem_to_output = 0x400608e0)
                [!provide]                        PROVIDE (tdefl_get_adler32 = 0x400608d8)
                [!provide]                        PROVIDE (tdefl_get_prev_return_status = 0x400608d0)
                [!provide]                        PROVIDE (tdefl_init = 0x40060810)
                [!provide]                        PROVIDE (tdefl_write_image_to_png_file_in_memory = 0x4006091c)
                [!provide]                        PROVIDE (tdefl_write_image_to_png_file_in_memory_ex = 0x40060910)
                [!provide]                        PROVIDE (tinfl_decompress = 0x4005ef30)
                [!provide]                        PROVIDE (tinfl_decompress_mem_to_callback = 0x40060090)
                [!provide]                        PROVIDE (tinfl_decompress_mem_to_mem = 0x40060050)
                [!provide]                        PROVIDE (UartDev = 0x3ffe019c)
                [!provide]                        PROVIDE (user_code_start = 0x3ffe0400)
                [!provide]                        PROVIDE (veryBigHexP256 = 0x3ff9736c)
                [!provide]                        PROVIDE (xthal_bcopy = 0x4000c098)
                [!provide]                        PROVIDE (xthal_copy123 = 0x4000c124)
                [!provide]                        PROVIDE (xthal_get_ccompare = 0x4000c078)
                [!provide]                        PROVIDE (xthal_get_ccount = 0x4000c050)
                [!provide]                        PROVIDE (xthal_get_interrupt = 0x4000c1e4)
                [!provide]                        PROVIDE (xthal_get_intread = 0x4000c1e4)
                [!provide]                        PROVIDE (Xthal_intlevel = 0x3ff9c2b4)
                [!provide]                        PROVIDE (xthal_memcpy = 0x4000c0bc)
                [!provide]                        PROVIDE (xthal_set_ccompare = 0x4000c058)
                0x000000004000c1ec                PROVIDE (xthal_set_intclear = 0x4000c1ec)
                [!provide]                        PROVIDE (_xtos_set_intlevel = 0x4000bfdc)
                0x000000003ffe01e0                PROVIDE (g_ticks_per_us_pro = 0x3ffe01e0)
                [!provide]                        PROVIDE (g_ticks_per_us_app = 0x3ffe40f0)
                [!provide]                        PROVIDE (esp_rom_spiflash_config_param = 0x40063238)
                [!provide]                        PROVIDE (esp_rom_spiflash_read_user_cmd = 0x400621b0)
                [!provide]                        PROVIDE (esp_rom_spiflash_write_encrypted_disable = 0x40062e60)
                [!provide]                        PROVIDE (esp_rom_spiflash_write_encrypted_enable = 0x40062df4)
                [!provide]                        PROVIDE (esp_rom_spiflash_prepare_encrypted_data = 0x40062e1c)
                [!provide]                        PROVIDE (esp_rom_spiflash_select_qio_pins = 0x40061ddc)
                [!provide]                        PROVIDE (esp_rom_spiflash_attach = 0x40062a6c)
                0x0000000040062bc8                PROVIDE (esp_rom_spiflash_config_clk = 0x40062bc8)
                [!provide]                        PROVIDE (g_rom_spiflash_chip = 0x3ffae270)
                [!provide]                        PROVIDE (hci_le_rd_rem_used_feats_cmd_handler = 0x400417b4)
                [!provide]                        PROVIDE (llcp_length_req_handler = 0x40043808)
                [!provide]                        PROVIDE (llcp_unknown_rsp_handler = 0x40043ba8)
                [!provide]                        PROVIDE (llcp_channel_map_req_handler = 0x4004291c)
                [!provide]                        PROVIDE (llcp_con_up_req_handler = 0x400426f0)
                [!provide]                        PROVIDE (FilePacketSendDeflatedReqMsgProc = 0x40008b24)
                [!provide]                        PROVIDE (FilePacketSendReqMsgProc = 0x40008860)
                [!provide]                        PROVIDE (FlashDwnLdDeflatedStartMsgProc = 0x40008ad8)
                [!provide]                        PROVIDE (FlashDwnLdParamCfgMsgProc = 0x4000891c)
                [!provide]                        PROVIDE (FlashDwnLdStartMsgProc = 0x40008820)
                [!provide]                        PROVIDE (FlashDwnLdStopDeflatedReqMsgProc = 0x40008c18)
                [!provide]                        PROVIDE (FlashDwnLdStopReqMsgProc = 0x400088ec)
                [!provide]                        PROVIDE (MemDwnLdStartMsgProc = 0x40008948)
                [!provide]                        PROVIDE (MemDwnLdStopReqMsgProc = 0x400089dc)
                [!provide]                        PROVIDE (MemPacketSendReqMsgProc = 0x40008978)
                [!provide]                        PROVIDE (uart_baudrate_detect = 0x40009034)
                [!provide]                        PROVIDE (uart_buff_switch = 0x400093c0)
                [!provide]                        PROVIDE (UartConnCheck = 0x40008738)
                [!provide]                        PROVIDE (UartConnectProc = 0x40008a04)
                [!provide]                        PROVIDE (UartDwnLdProc = 0x40008ce8)
                [!provide]                        PROVIDE (UartRegReadProc = 0x40008a58)
                [!provide]                        PROVIDE (UartRegWriteProc = 0x40008a14)
                [!provide]                        PROVIDE (UartSetBaudProc = 0x40008aac)
                [!provide]                        PROVIDE (UartSpiAttachProc = 0x40008a6c)
                [!provide]                        PROVIDE (UartSpiReadProc = 0x40008a80)
                [!provide]                        PROVIDE (VerifyFlashMd5Proc = 0x40008c44)
                [!provide]                        PROVIDE (GetUartDevice = 0x40009598)
                [!provide]                        PROVIDE (RcvMsg = 0x4000954c)
                [!provide]                        PROVIDE (SendMsg = 0x40009384)
                [!provide]                        PROVIDE (UartGetCmdLn = 0x40009564)
                [!provide]                        PROVIDE (UartRxString = 0x400092fc)
                [!provide]                        PROVIDE (Uart_Init = 0x40009120)
                [!provide]                        PROVIDE (recv_packet = 0x40009424)
                [!provide]                        PROVIDE (send_packet = 0x40009340)
                [!provide]                        PROVIDE (uartAttach = 0x40008fd0)
                [!provide]                        PROVIDE (uart_div_modify = 0x400090cc)
                [!provide]                        PROVIDE (uart_rx_intr_handler = 0x40008f4c)
                [!provide]                        PROVIDE (uart_rx_one_char = 0x400092d0)
                [!provide]                        PROVIDE (uart_rx_one_char_block = 0x400092a4)
                [!provide]                        PROVIDE (uart_rx_readbuff = 0x40009394)
                [!provide]                        PROVIDE (uart_tx_flush = 0x40009258)
                0x0000000040009200                PROVIDE (uart_tx_one_char = 0x40009200)
                [!provide]                        PROVIDE (uart_tx_one_char2 = 0x4000922c)
                [!provide]                        PROVIDE (uart_tx_switch = 0x40009028)
                [!provide]                        PROVIDE (gpio_output_set = 0x40009b24)
                [!provide]                        PROVIDE (gpio_output_set_high = 0x40009b5c)
                [!provide]                        PROVIDE (gpio_input_get = 0x40009b88)
                [!provide]                        PROVIDE (gpio_input_get_high = 0x40009b9c)
                0x0000000040009edc                PROVIDE (gpio_matrix_in = 0x40009edc)
                0x0000000040009f0c                PROVIDE (gpio_matrix_out = 0x40009f0c)
                0x0000000040009fdc                PROVIDE (gpio_pad_select_gpio = 0x40009fdc)
                [!provide]                        PROVIDE (gpio_pad_set_drv = 0x4000a11c)
                [!provide]                        PROVIDE (gpio_pad_pulldown = 0x4000a348)
                [!provide]                        PROVIDE (gpio_pad_pullup = 0x4000a22c)
                [!provide]                        PROVIDE (gpio_pad_hold = 0x4000a734)
                [!provide]                        PROVIDE (gpio_pad_unhold = 0x4000a484)
                [!provide]                        PROVIDE (ets_aes_crypt = 0x4005c9b8)
                [!provide]                        PROVIDE (ets_aes_disable = 0x4005c8f8)
                [!provide]                        PROVIDE (ets_aes_enable = 0x4005c8cc)
                [!provide]                        PROVIDE (ets_aes_set_endian = 0x4005c928)
                [!provide]                        PROVIDE (ets_aes_setkey_dec = 0x4005c994)
                [!provide]                        PROVIDE (ets_aes_setkey_enc = 0x4005c97c)
                [!provide]                        PROVIDE (ets_bigint_disable = 0x4005c4e0)
                [!provide]                        PROVIDE (ets_bigint_enable = 0x4005c498)
                [!provide]                        PROVIDE (ets_bigint_mod_mult_getz = 0x4005c818)
                [!provide]                        PROVIDE (ets_bigint_mod_mult_prepare = 0x4005c7b4)
                [!provide]                        PROVIDE (ets_bigint_mod_power_getz = 0x4005c614)
                [!provide]                        PROVIDE (ets_bigint_mod_power_prepare = 0x4005c54c)
                [!provide]                        PROVIDE (ets_bigint_montgomery_mult_getz = 0x4005c7a4)
                [!provide]                        PROVIDE (ets_bigint_montgomery_mult_prepare = 0x4005c6fc)
                [!provide]                        PROVIDE (ets_bigint_mult_getz = 0x4005c6e8)
                [!provide]                        PROVIDE (ets_bigint_mult_prepare = 0x4005c630)
                [!provide]                        PROVIDE (ets_bigint_wait_finish = 0x4005c520)
                [!provide]                        PROVIDE (ets_post = 0x4000673c)
                [!provide]                        PROVIDE (ets_run = 0x400066bc)
                [!provide]                        PROVIDE (ets_set_idle_cb = 0x40006674)
                [!provide]                        PROVIDE (ets_task = 0x40006688)
                [!provide]                        PROVIDE (ets_efuse_get_8M_clock = 0x40008710)
                0x0000000040008658                PROVIDE (ets_efuse_get_spiconfig = 0x40008658)
                [!provide]                        PROVIDE (ets_efuse_program_op = 0x40008628)
                [!provide]                        PROVIDE (ets_efuse_read_op = 0x40008600)
                [!provide]                        PROVIDE (ets_intr_lock = 0x400067b0)
                [!provide]                        PROVIDE (ets_intr_unlock = 0x400067c4)
                [!provide]                        PROVIDE (ets_isr_attach = 0x400067ec)
                [!provide]                        PROVIDE (ets_waiti0 = 0x400067d8)
                0x000000004000681c                PROVIDE (intr_matrix_set = 0x4000681c)
                [!provide]                        PROVIDE (check_pos = 0x400068b8)
                0x000000004000689c                PROVIDE (ets_set_appcpu_boot_addr = 0x4000689c)
                [!provide]                        PROVIDE (ets_set_startup_callback = 0x4000688c)
                [!provide]                        PROVIDE (ets_set_user_start = 0x4000687c)
                [!provide]                        PROVIDE (ets_unpack_flash_code = 0x40007018)
                [!provide]                        PROVIDE (ets_unpack_flash_code_legacy = 0x4000694c)
                [!provide]                        PROVIDE (rom_main = 0x400076c4)
                [!provide]                        PROVIDE (ets_write_char_uart = 0x40007cf8)
                [!provide]                        PROVIDE (ets_install_putc1 = 0x40007d18)
                [!provide]                        PROVIDE (ets_install_putc2 = 0x40007d38)
                [!provide]                        PROVIDE (ets_install_uart_printf = 0x40007d28)
                0x0000000040007d54                PROVIDE (ets_printf = 0x40007d54)
                [!provide]                        PROVIDE (rtc_boot_control = 0x4000821c)
                0x00000000400081d4                PROVIDE (rtc_get_reset_reason = 0x400081d4)
                [!provide]                        PROVIDE (rtc_get_wakeup_cause = 0x400081f4)
                [!provide]                        PROVIDE (rtc_select_apb_bridge = 0x40008288)
                [!provide]                        PROVIDE (set_rtc_memory_crc = 0x40008208)
                [!provide]                        PROVIDE (software_reset = 0x4000824c)
                [!provide]                        PROVIDE (software_reset_cpu = 0x40008264)
                [!provide]                        PROVIDE (ets_secure_boot_check = 0x4005cb40)
                [!provide]                        PROVIDE (ets_secure_boot_check_finish = 0x4005cc04)
                [!provide]                        PROVIDE (ets_secure_boot_check_start = 0x4005cbcc)
                [!provide]                        PROVIDE (ets_secure_boot_finish = 0x4005ca84)
                [!provide]                        PROVIDE (ets_secure_boot_hash = 0x4005cad4)
                [!provide]                        PROVIDE (ets_secure_boot_obtain = 0x4005cb14)
                [!provide]                        PROVIDE (ets_secure_boot_rd_abstract = 0x4005cba8)
                [!provide]                        PROVIDE (ets_secure_boot_rd_iv = 0x4005cb84)
                [!provide]                        PROVIDE (ets_secure_boot_start = 0x4005ca34)
                [!provide]                        PROVIDE (ets_sha_disable = 0x4005c0a8)
                [!provide]                        PROVIDE (ets_sha_enable = 0x4005c07c)
                [!provide]                        PROVIDE (ets_sha_finish = 0x4005c104)
                [!provide]                        PROVIDE (ets_sha_init = 0x4005c0d4)
                [!provide]                        PROVIDE (ets_sha_update = 0x4005c2a0)
                0x0000000040008534                PROVIDE (ets_delay_us = 0x40008534)
                0x000000004000855c                PROVIDE (ets_get_cpu_frequency = 0x4000855c)
                [!provide]                        PROVIDE (ets_get_detected_xtal_freq = 0x40008588)
                [!provide]                        PROVIDE (ets_get_xtal_scale = 0x4000856c)
                [!provide]                        PROVIDE (ets_update_cpu_frequency_rom = 0x40008550)
                [!provide]                        PROVIDE (hci_tl_env = 0x3ffb8154)
                [!provide]                        PROVIDE (ld_acl_env = 0x3ffb8258)
                [!provide]                        PROVIDE (ea_env = 0x3ffb80ec)
                [!provide]                        PROVIDE (lc_sco_data_path_config = 0x3ffb81f8)
                [!provide]                        PROVIDE (lc_sco_env = 0x3ffb81fc)
                [!provide]                        PROVIDE (ld_active_ch_map = 0x3ffb8334)
                [!provide]                        PROVIDE (ld_bcst_acl_env = 0x3ffb8274)
                [!provide]                        PROVIDE (ld_csb_rx_env = 0x3ffb8278)
                [!provide]                        PROVIDE (ld_csb_tx_env = 0x3ffb827c)
                [!provide]                        PROVIDE (ld_env = 0x3ffb9510)
                [!provide]                        PROVIDE (ld_fm_env = 0x3ffb8284)
                [!provide]                        PROVIDE (ld_inq_env = 0x3ffb82e4)
                [!provide]                        PROVIDE (ld_iscan_env = 0x3ffb82e8)
                [!provide]                        PROVIDE (ld_page_env = 0x3ffb82f0)
                [!provide]                        PROVIDE (ld_pca_env = 0x3ffb82f4)
                [!provide]                        PROVIDE (ld_pscan_env = 0x3ffb8308)
                [!provide]                        PROVIDE (ld_sched_env = 0x3ffb830c)
                [!provide]                        PROVIDE (ld_sched_params = 0x3ffb96c0)
                [!provide]                        PROVIDE (ld_sco_env = 0x3ffb824c)
                [!provide]                        PROVIDE (ld_sscan_env = 0x3ffb832c)
                [!provide]                        PROVIDE (ld_strain_env = 0x3ffb8330)
                [!provide]                        PROVIDE (LM_Sniff = 0x3ffb8230)
                [!provide]                        PROVIDE (LM_SniffSubRate = 0x3ffb8214)
                [!provide]                        PROVIDE (prbs_64bytes = 0x3ff98992)
                [!provide]                        PROVIDE (nvds_env = 0x3ffb8364)
                [!provide]                        PROVIDE (nvds_magic_number = 0x3ff9912a)
                [!provide]                        PROVIDE (TASK_DESC_LLD = 0x3ff98b58)
                [!provide]                        PROVIDE (ld_acl_clk_isr = 0x40030cf8)
                [!provide]                        PROVIDE (ld_acl_evt_canceled_cbk = 0x40033944)
                [!provide]                        PROVIDE (ld_acl_evt_stop_cbk = 0x40033870)
                [!provide]                        PROVIDE (ld_acl_evt_start_cbk = 0x40030ab0)
                [!provide]                        PROVIDE (ld_acl_test_mode_update = 0x40032050)
                [!provide]                        PROVIDE (ld_acl_resched = 0x40033814)
                [!provide]                        PROVIDE (ld_acl_rx_isr = 0x40033aa8)
                [!provide]                        PROVIDE (lc_acl_disc_ind_handler = 0x4002f270)
                [!provide]                        PROVIDE (lc_pca_sscan_start_req_handler = 0x40029b34)
                [!provide]                        PROVIDE (lmp_feats_req_ext_handler = 0x4002ccb0)
                [!provide]                        PROVIDE (ld_pscan_em_init = 0x4003e5e8)
                [!provide]                        PROVIDE (ld_acl_rsw_start = 0x40032e90)
                [!provide]                        PROVIDE (ld_acl_sniff_enter = 0x40031244)
                [!provide]                        PROVIDE (ld_acl_sniff_trans_sched = 0x40033734)
                [!provide]                        PROVIDE (lc_pwr_decr_ind_handler = 0x4002859c)
                [!provide]                        PROVIDE (lc_pwr_incr_ind_handler = 0x400284a8)
                [!provide]                        PROVIDE (lc_pwr_max_ind_handler = 0x40028690)
                [!provide]                        PROVIDE (esp_rom_tjpgd_decomp = 0x400613e8)
                [!provide]                        PROVIDE (esp_rom_tjpgd_prepare = 0x40060fa8)
                [!provide]                        PROVIDE (esp_rom_crc32_le = crc32_le)
                [!provide]                        PROVIDE (esp_rom_crc16_le = crc16_le)
                [!provide]                        PROVIDE (esp_rom_crc8_le = crc8_le)
                [!provide]                        PROVIDE (esp_rom_crc32_be = crc32_be)
                [!provide]                        PROVIDE (esp_rom_crc16_be = crc16_be)
                [!provide]                        PROVIDE (esp_rom_crc8_be = crc8_be)
                0x0000000040009fdc                PROVIDE (esp_rom_gpio_pad_select_gpio = gpio_pad_select_gpio)
                [!provide]                        PROVIDE (esp_rom_gpio_pad_pullup_only = gpio_pad_pullup)
                [!provide]                        PROVIDE (esp_rom_gpio_pad_set_drv = gpio_pad_set_drv)
                [!provide]                        PROVIDE (esp_rom_gpio_pad_unhold = gpio_pad_unhold)
                0x0000000040009edc                PROVIDE (esp_rom_gpio_connect_in_signal = gpio_matrix_in)
                0x0000000040009f0c                PROVIDE (esp_rom_gpio_connect_out_signal = gpio_matrix_out)
                0x000000004005d144                PROVIDE (esp_rom_efuse_mac_address_crc8 = esp_crc8)
                0x0000000040008658                PROVIDE (esp_rom_efuse_get_flash_gpio_info = ets_efuse_get_spiconfig)
                [!provide]                        PROVIDE (esp_rom_efuse_is_secure_boot_enabled = ets_efuse_secure_boot_enabled)
                [!provide]                        PROVIDE (esp_rom_uart_flush_tx = uart_tx_flush)
                0x0000000040009200                PROVIDE (esp_rom_uart_tx_one_char = uart_tx_one_char)
                [!provide]                        PROVIDE (esp_rom_uart_tx_wait_idle = uart_tx_wait_idle)
                [!provide]                        PROVIDE (esp_rom_uart_rx_one_char = uart_rx_one_char)
                [!provide]                        PROVIDE (esp_rom_uart_rx_string = UartRxString)
                [!provide]                        PROVIDE (esp_rom_uart_set_as_console = uart_tx_switch)
                [!provide]                        PROVIDE (esp_rom_uart_putc = ets_write_char_uart)
                [!provide]                        PROVIDE (esp_rom_md5_init = 0x4005da7c)
                [!provide]                        PROVIDE (esp_rom_md5_update = 0x4005da9c)
                [!provide]                        PROVIDE (esp_rom_md5_final = 0x4005db1c)
                0x0000000040007d54                PROVIDE (esp_rom_printf = ets_printf)
                0x0000000040008534                PROVIDE (esp_rom_delay_us = ets_delay_us)
                [!provide]                        PROVIDE (esp_rom_install_uart_printf = ets_install_uart_printf)
                0x00000000400081d4                PROVIDE (esp_rom_get_reset_reason = rtc_get_reset_reason)
                0x000000004006387c                __absvdi2 = 0x4006387c
                0x0000000040063868                __absvsi2 = 0x40063868
                0x0000000040002590                __adddf3 = 0x40002590
                0x00000000400020e8                __addsf3 = 0x400020e8
                0x0000000040002cbc                __addvdi3 = 0x40002cbc
                0x0000000040002c98                __addvsi3 = 0x40002c98
                0x000000004000c818                __ashldi3 = 0x4000c818
                0x000000004000c830                __ashrdi3 = 0x4000c830
                0x0000000040064b08                __bswapdi2 = 0x40064b08
                0x0000000040064ae0                __bswapsi2 = 0x40064ae0
                0x0000000040064b7c                __clrsbdi2 = 0x40064b7c
                0x0000000040064b64                __clrsbsi2 = 0x40064b64
                0x000000004000ca50                __clzdi2 = 0x4000ca50
                0x000000004000c7e8                __clzsi2 = 0x4000c7e8
                0x0000000040063820                __cmpdi2 = 0x40063820
                0x000000004000ca64                __ctzdi2 = 0x4000ca64
                0x000000004000c7f0                __ctzsi2 = 0x4000c7f0
                0x00000000400645a4                __divdc3 = 0x400645a4
                0x0000000040002954                __divdf3 = 0x40002954
                0x000000004000ca84                __divdi3 = 0x4000ca84
                0x000000004000c7b8                __divsi3 = 0x4000c7b8
                0x00000000400636a8                __eqdf2 = 0x400636a8
                0x0000000040063374                __eqsf2 = 0x40063374
                0x0000000040002c34                __extendsfdf2 = 0x40002c34
                0x000000004000ca2c                __ffsdi2 = 0x4000ca2c
                0x000000004000c804                __ffssi2 = 0x4000c804
                0x0000000040002ac4                __fixdfdi = 0x40002ac4
                0x0000000040002a78                __fixdfsi = 0x40002a78
                0x000000004000244c                __fixsfdi = 0x4000244c
                0x000000004000240c                __fixsfsi = 0x4000240c
                0x0000000040002b30                __fixunsdfsi = 0x40002b30
                0x0000000040002504                __fixunssfdi = 0x40002504
                0x00000000400024ac                __fixunssfsi = 0x400024ac
                0x000000004000c988                __floatdidf = 0x4000c988
                0x000000004000c8c0                __floatdisf = 0x4000c8c0
                0x000000004000c944                __floatsidf = 0x4000c944
                0x000000004000c870                __floatsisf = 0x4000c870
                0x000000004000c978                __floatundidf = 0x4000c978
                0x000000004000c8b0                __floatundisf = 0x4000c8b0
                0x000000004000c938                __floatunsidf = 0x4000c938
                0x000000004000c864                __floatunsisf = 0x4000c864
                0x0000000040064a70                __gcc_bcmp = 0x40064a70
                0x0000000040063768                __gedf2 = 0x40063768
                0x000000004006340c                __gesf2 = 0x4006340c
                0x00000000400636dc                __gtdf2 = 0x400636dc
                0x00000000400633a0                __gtsf2 = 0x400633a0
                0x0000000040063704                __ledf2 = 0x40063704
                0x00000000400633c0                __lesf2 = 0x400633c0
                0x000000004000c84c                __lshrdi3 = 0x4000c84c
                0x0000000040063790                __ltdf2 = 0x40063790
                0x000000004006342c                __ltsf2 = 0x4006342c
                0x000000004000cd4c                __moddi3 = 0x4000cd4c
                0x000000004000c7c0                __modsi3 = 0x4000c7c0
                0x0000000040063c90                __muldc3 = 0x40063c90
                0x000000004006358c                __muldf3 = 0x4006358c
                0x000000004000c9fc                __muldi3 = 0x4000c9fc
                0x00000000400632c8                __mulsf3 = 0x400632c8
                0x000000004000c7b0                __mulsi3 = 0x4000c7b0
                0x0000000040002d78                __mulvdi3 = 0x40002d78
                0x0000000040002d60                __mulvsi3 = 0x40002d60
                0x00000000400636a8                __nedf2 = 0x400636a8
                0x00000000400634a0                __negdf2 = 0x400634a0
                0x000000004000ca14                __negdi2 = 0x4000ca14
                0x00000000400020c0                __negsf2 = 0x400020c0
                0x0000000040002e98                __negvdi2 = 0x40002e98
                0x0000000040002e78                __negvsi2 = 0x40002e78
                0x0000000040063374                __nesf2 = 0x40063374
                0x000000003ff96544                __nsau_data = 0x3ff96544
                0x0000000040002f3c                __paritysi2 = 0x40002f3c
                0x000000003ff96544                __popcount_tab = 0x3ff96544
                0x0000000040002ef8                __popcountdi2 = 0x40002ef8
                0x0000000040002ed0                __popcountsi2 = 0x40002ed0
                0x00000000400638e4                __powidf2 = 0x400638e4
                0x00000000400026e4                __subdf3 = 0x400026e4
                0x00000000400021d0                __subsf3 = 0x400021d0
                0x0000000040002d20                __subvdi3 = 0x40002d20
                0x0000000040002cf8                __subvsi3 = 0x40002cf8
                0x0000000040002b90                __truncdfsf2 = 0x40002b90
                0x0000000040063840                __ucmpdi2 = 0x40063840
                0x0000000040064bec                __udiv_w_sdiv = 0x40064bec
                0x000000004000cff8                __udivdi3 = 0x4000cff8
                0x0000000040064bf4                __udivmoddi4 = 0x40064bf4
                0x000000004000c7c8                __udivsi3 = 0x4000c7c8
                0x000000004000d280                __umoddi3 = 0x4000d280
                0x000000004000c7d0                __umodsi3 = 0x4000c7d0
                0x000000004000c7d8                __umulsidi3 = 0x4000c7d8
                0x00000000400637f4                __unorddf2 = 0x400637f4
                0x0000000040063478                __unordsf2 = 0x40063478
                0x000000003ff96354                _ctype_ = 0x3ff96354
                0x000000003ff96350                __ctype_ptr__ = 0x3ff96350
                0x000000003ffae0b4                environ = 0x3ffae0b4
                0x000000003ffae0b0                _global_impure_ptr = 0x3ffae0b0
                0x000000003ff96530                __mb_cur_max = 0x3ff96530
                0x000000003ff96458                __sf_fake_stderr = 0x3ff96458
                0x000000003ff96498                __sf_fake_stdin = 0x3ff96498
                0x000000003ff96478                __sf_fake_stdout = 0x3ff96478
                0x000000003ff96540                __wctomb = 0x3ff96540
                0x000000003ffae0ac                __sfp_lock = 0x3ffae0ac
                0x000000003ffae0a8                __sinit_lock = 0x3ffae0a8
                0x000000003ffae0b8                __env_lock_object = 0x3ffae0b8
                0x000000003ffae080                __tz_lock_object = 0x3ffae080
                0x0000000040056340                abs = 0x40056340
                0x0000000040058ef0                __ascii_wctomb = 0x40058ef0
                [!provide]                        PROVIDE (atoi = 0x400566c4)
                0x00000000400566d4                _atoi_r = 0x400566d4
                [!provide]                        PROVIDE (atol = 0x400566ec)
                0x00000000400566fc                _atol_r = 0x400566fc
                0x000000004000c1f4                bzero = 0x4000c1f4
                0x0000000040001df8                _cleanup = 0x40001df8
                0x0000000040001d48                _cleanup_r = 0x40001d48
                0x0000000040000e8c                creat = 0x40000e8c
                0x0000000040056348                div = 0x40056348
                0x000000004000c728                __dummy_lock = 0x4000c728
                0x000000004000c730                __dummy_lock_try = 0x4000c730
                0x0000000040001fd4                __env_lock = 0x40001fd4
                0x0000000040001fe0                __env_unlock = 0x40001fe0
                0x00000000400020ac                fclose = 0x400020ac
                0x0000000040001fec                _fclose_r = 0x40001fec
                0x0000000040059394                fflush = 0x40059394
                0x0000000040059320                _fflush_r = 0x40059320
                0x0000000040001f44                _findenv_r = 0x40001f44
                0x0000000040001f1c                __fp_lock_all = 0x40001f1c
                0x0000000040001f30                __fp_unlock_all = 0x40001f30
                0x0000000040058da0                __fputwc = 0x40058da0
                0x0000000040058ea8                fputwc = 0x40058ea8
                0x0000000040058e4c                _fputwc_r = 0x40058e4c
                0x000000004000c738                _fwalk = 0x4000c738
                0x000000004000c770                _fwalk_reent = 0x4000c770
                0x0000000040001fbc                _getenv_r = 0x40001fbc
                0x0000000040000f04                isalnum = 0x40000f04
                0x0000000040000f18                isalpha = 0x40000f18
                0x000000004000c20c                isascii = 0x4000c20c
                0x0000000040000f2c                isblank = 0x40000f2c
                0x0000000040000f50                iscntrl = 0x40000f50
                0x0000000040000f64                isdigit = 0x40000f64
                0x0000000040000f94                isgraph = 0x40000f94
                0x0000000040000f78                islower = 0x40000f78
                0x0000000040000fa8                isprint = 0x40000fa8
                0x0000000040000fc0                ispunct = 0x40000fc0
                0x0000000040000fd4                isspace = 0x40000fd4
                0x0000000040000fe8                isupper = 0x40000fe8
                0x0000000040056678                __itoa = 0x40056678
                0x00000000400566b4                itoa = 0x400566b4
                0x0000000040056370                labs = 0x40056370
                0x0000000040056378                ldiv = 0x40056378
                0x00000000400562cc                longjmp = 0x400562cc
                0x000000004000c220                memccpy = 0x4000c220
                0x000000004000c244                memchr = 0x4000c244
                0x000000004000c260                memcmp = 0x4000c260
                0x000000004000c2c8                memcpy = 0x4000c2c8
                0x000000004000c3c0                memmove = 0x4000c3c0
                0x000000004000c400                memrchr = 0x4000c400
                0x000000004000c44c                memset = 0x4000c44c
                0x0000000040056424                qsort = 0x40056424
                0x0000000040001058                rand = 0x40001058
                0x00000000400010d4                rand_r = 0x400010d4
                0x000000004000c498                __sccl = 0x4000c498
                0x00000000400011b8                __sclose = 0x400011b8
                0x0000000040001148                __seofread = 0x40001148
                0x0000000040056268                setjmp = 0x40056268
                0x00000000400591e0                __sflush_r = 0x400591e0
                0x0000000040001dc8                __sfmoreglue = 0x40001dc8
                0x0000000040001e90                __sfp = 0x40001e90
                0x0000000040001e08                __sfp_lock_acquire = 0x40001e08
                0x0000000040001e14                __sfp_lock_release = 0x40001e14
                0x0000000040001e38                __sinit = 0x40001e38
                0x0000000040001e20                __sinit_lock_acquire = 0x40001e20
                0x0000000040001e2c                __sinit_lock_release = 0x40001e2c
                0x0000000040001004                srand = 0x40001004
                0x0000000040001118                __sread = 0x40001118
                0x0000000040001184                __sseek = 0x40001184
                0x00000000400011cc                strcasecmp = 0x400011cc
                0x0000000040001210                strcasestr = 0x40001210
                0x000000004000c518                strcat = 0x4000c518
                0x000000004000c53c                strchr = 0x4000c53c
                0x0000000040001274                strcmp = 0x40001274
                0x0000000040001398                strcoll = 0x40001398
                0x00000000400013ac                strcpy = 0x400013ac
                0x000000004000c558                strcspn = 0x4000c558
                0x000000004000143c                strdup = 0x4000143c
                0x0000000040001450                _strdup_r = 0x40001450
                0x0000000040001470                strlcat = 0x40001470
                0x000000004000c584                strlcpy = 0x4000c584
                0x00000000400014c0                strlen = 0x400014c0
                0x0000000040001524                strlwr = 0x40001524
                0x0000000040001550                strncasecmp = 0x40001550
                0x000000004000c5c4                strncat = 0x4000c5c4
                0x000000004000c5f4                strncmp = 0x4000c5f4
                0x00000000400015d4                strncpy = 0x400015d4
                0x00000000400016b0                strndup = 0x400016b0
                0x00000000400016c4                _strndup_r = 0x400016c4
                0x000000004000c628                strnlen = 0x4000c628
                0x0000000040001708                strrchr = 0x40001708
                0x0000000040001734                strsep = 0x40001734
                0x000000004000c648                strspn = 0x4000c648
                0x000000004000c674                strstr = 0x4000c674
                0x000000004000c6a8                __strtok_r = 0x4000c6a8
                0x000000004000c70c                strtok_r = 0x4000c70c
                [!provide]                        PROVIDE (strtol = 0x4005681c)
                0x0000000040056714                _strtol_r = 0x40056714
                [!provide]                        PROVIDE (strtoul = 0x4005692c)
                0x0000000040056834                _strtoul_r = 0x40056834
                0x000000004000174c                strupr = 0x4000174c
                0x0000000040058f3c                __submore = 0x40058f3c
                0x0000000040058cb4                __swbuf = 0x40058cb4
                0x0000000040058bec                __swbuf_r = 0x40058bec
                0x0000000040001150                __swrite = 0x40001150
                0x000000004000c720                toascii = 0x4000c720
                0x0000000040001868                tolower = 0x40001868
                0x0000000040001884                toupper = 0x40001884
                0x00000000400590f4                ungetc = 0x400590f4
                0x0000000040058fa0                _ungetc_r = 0x40058fa0
                0x00000000400561f0                __utoa = 0x400561f0
                0x0000000040056258                utoa = 0x40056258
                0x0000000040058920                wcrtomb = 0x40058920
                0x00000000400588d8                _wcrtomb_r = 0x400588d8
                0x0000000040058f14                _wctomb_r = 0x40058f14
                0x000000003ff40000                PROVIDE (UART0 = 0x3ff40000)
                [!provide]                        PROVIDE (SPI1 = 0x3ff42000)
                [!provide]                        PROVIDE (SPI0 = 0x3ff43000)
                0x000000003ff44000                PROVIDE (GPIO = 0x3ff44000)
                [!provide]                        PROVIDE (SIGMADELTA = 0x3ff44f00)
                0x000000003ff48000                PROVIDE (RTCCNTL = 0x3ff48000)
                [!provide]                        PROVIDE (RTCIO = 0x3ff48400)
                [!provide]                        PROVIDE (SENS = 0x3ff48800)
                [!provide]                        PROVIDE (HINF = 0x3ff4b000)
                [!provide]                        PROVIDE (UHCI1 = 0x3ff4c000)
                [!provide]                        PROVIDE (I2S0 = 0x3ff4f000)
                0x000000003ff50000                PROVIDE (UART1 = 0x3ff50000)
                [!provide]                        PROVIDE (I2C0 = 0x3ff53000)
                [!provide]                        PROVIDE (UHCI0 = 0x3ff54000)
                [!provide]                        PROVIDE (HOST = 0x3ff55000)
                [!provide]                        PROVIDE (RMT = 0x3ff56000)
                [!provide]                        PROVIDE (RMTMEM = 0x3ff56800)
                [!provide]                        PROVIDE (PCNT = 0x3ff57000)
                [!provide]                        PROVIDE (SLC = 0x3ff58000)
                [!provide]                        PROVIDE (LEDC = 0x3ff59000)
                [!provide]                        PROVIDE (MCPWM0 = 0x3ff5e000)
                0x000000003ff5f000                PROVIDE (TIMERG0 = 0x3ff5f000)
                0x000000003ff60000                PROVIDE (TIMERG1 = 0x3ff60000)
                [!provide]                        PROVIDE (SPI2 = 0x3ff64000)
                [!provide]                        PROVIDE (SPI3 = 0x3ff65000)
                [!provide]                        PROVIDE (SYSCON = 0x3ff66000)
                [!provide]                        PROVIDE (I2C1 = 0x3ff67000)
                [!provide]                        PROVIDE (SDMMC = 0x3ff68000)
                [!provide]                        PROVIDE (EMAC_DMA = 0x3ff69000)
                [!provide]                        PROVIDE (EMAC_EXT = 0x3ff69800)
                [!provide]                        PROVIDE (EMAC_MAC = 0x3ff6a000)
                [!provide]                        PROVIDE (TWAI = 0x3ff6b000)
                [!provide]                        PROVIDE (CAN = 0x3ff6b000)
                [!provide]                        PROVIDE (MCPWM1 = 0x3ff6c000)
                [!provide]                        PROVIDE (I2S1 = 0x3ff6d000)
                [!provide]                        PROVIDE (UART2 = 0x3ff6e000)
OUTPUT(zephyr/zephyr_pre0.elf elf32-xtensa-le)
